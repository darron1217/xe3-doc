(window.webpackJsonp=window.webpackJsonp||[]).push([[40],{404:function(t,a,s){"use strict";s.r(a);var e=s(43),v=Object(e.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"서비스"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#서비스"}},[t._v("#")]),t._v(" 서비스")]),t._v(" "),s("h2",{attrs:{id:"소개"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#소개"}},[t._v("#")]),t._v(" 소개")]),t._v(" "),s("p",[t._v("XE가 앞서 설명한 라이프사이클에 따라 요청을 처리하고 응답하는 과정을 수행하는 동안, 우리는 매우 다양한 작업을 실행해야 합니다. 때로는 데이터베이스에서 자료를 검색하거나 자료를 저장하기도 하고, 이메일을 전송하거나 세션이나 쿠키를 다뤄야 할 때도 있습니다. 개발자들이 이런 작업을 수행하는 코드를 모두 직접 구현한다면 매우 힘든 개발이 될 것입니다.")]),t._v(" "),s("p",[t._v("XE는 개발자들이 원하는 기능을 쉽게 구현할 수 있도록 많은 서비스를 제공합니다. 아래 목록은 라라벨이 기본으로 제공하는 프레임워크 레벨의 주요 서비스 목록입니다.")]),t._v(" "),s("ul",[s("li",[t._v("Auth")]),t._v(" "),s("li",[t._v("Cache")]),t._v(" "),s("li",[t._v("Config")]),t._v(" "),s("li",[t._v("Console")]),t._v(" "),s("li",[t._v("Container")]),t._v(" "),s("li",[t._v("Cookie")]),t._v(" "),s("li",[t._v("DB")]),t._v(" "),s("li",[t._v("Encryption")]),t._v(" "),s("li",[t._v("Events")]),t._v(" "),s("li",[t._v("Filesystem")]),t._v(" "),s("li",[t._v("Hashing")]),t._v(" "),s("li",[t._v("Log")]),t._v(" "),s("li",[t._v("Mail")]),t._v(" "),s("li",[t._v("Pagination")]),t._v(" "),s("li",[t._v("Queue")]),t._v(" "),s("li",[t._v("Redis")]),t._v(" "),s("li",[t._v("Routing")]),t._v(" "),s("li",[t._v("Session")]),t._v(" "),s("li",[t._v("Translator")]),t._v(" "),s("li",[t._v("Templory")]),t._v(" "),s("li",[t._v("Route")]),t._v(" "),s("li",[t._v("Module")]),t._v(" "),s("li",[t._v("Validation")]),t._v(" "),s("li",[t._v("View")])]),t._v(" "),s("p",[t._v("XE는 라라벨이 제공하는 위 서비스 이외에도 문서(document), 파일(storage), 회원(user) 관리와 같은 CMS 어플리케이션 레벨의 서비스를 많이 제공합니다. XE에서 제공하는 서비스은 아래 목록과 같습니다.")]),t._v(" "),s("ul",[s("li",[t._v("Captcha")]),t._v(" "),s("li",[t._v("Category")]),t._v(" "),s("li",[t._v("Config")]),t._v(" "),s("li",[t._v("Counter")]),t._v(" "),s("li",[t._v("Database")]),t._v(" "),s("li",[t._v("Document")]),t._v(" "),s("li",[t._v("DynamicField")]),t._v(" "),s("li",[t._v("Editor")]),t._v(" "),s("li",[t._v("Frontend")]),t._v(" "),s("li",[t._v("Interception")]),t._v(" "),s("li",[t._v("Keygen")]),t._v(" "),s("li",[t._v("Media")]),t._v(" "),s("li",[t._v("Menu")]),t._v(" "),s("li",[t._v("Module")]),t._v(" "),s("li",[t._v("Permission")]),t._v(" "),s("li",[t._v("Plugin")]),t._v(" "),s("li",[t._v("Presenter")]),t._v(" "),s("li",[t._v("Register")]),t._v(" "),s("li",[t._v("Routing")]),t._v(" "),s("li",[t._v("Seo")]),t._v(" "),s("li",[t._v("Settings")]),t._v(" "),s("li",[t._v("Site")]),t._v(" "),s("li",[t._v("Skin")]),t._v(" "),s("li",[t._v("Storage")]),t._v(" "),s("li",[t._v("Tag")]),t._v(" "),s("li",[t._v("Temporary")]),t._v(" "),s("li",[t._v("Theme")]),t._v(" "),s("li",[t._v("ToggleMenu")]),t._v(" "),s("li",[t._v("Translation")]),t._v(" "),s("li",[t._v("Trash")]),t._v(" "),s("li",[t._v("UIObject")]),t._v(" "),s("li",[t._v("User")]),t._v(" "),s("li",[t._v("Widget")])]),t._v(" "),s("p",[t._v("각각의 서비스가 제공하는 기능과 용도를 충분히 알고 있다면 훨씬 편하게 플러그인을 개발할 수 있습니다. 본 매뉴얼의 "),s("RouterLink",{attrs:{to:"/xe-service/service-category.html"}},[t._v("서비스 카테고리")]),t._v("에서 각 서비스의 기능과 사용법을 자세히 안내하고 있습니다.")],1),t._v(" "),s("h2",{attrs:{id:"서비스-로드하기"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#서비스-로드하기"}},[t._v("#")]),t._v(" 서비스 로드하기")]),t._v(" "),s("h3",{attrs:{id:"파사드를-사용하여-로드하기"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#파사드를-사용하여-로드하기"}},[t._v("#")]),t._v(" 파사드를 사용하여 로드하기")]),t._v(" "),s("p",[t._v("내 코드에서 필요한 서비스를 로드하는 방법으로 XE는 파사드를 제공합니다. 파사드는 어떤 서비스를 대신하는 프록시 역할하며, Static 클래스 형식으로 사용할 수 있습니다.")]),t._v(" "),s("div",{staticClass:"language-php extra-class"},[s("pre",{pre:!0,attrs:{class:"language-php"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// User 서비스 사용")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$user")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" \\"),s("span",{pre:!0,attrs:{class:"token package"}},[t._v("XeUser")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("find")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$userId")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[t._v("위 예제에서 "),s("code",[t._v("XeUser")]),t._v("는 파사드입니다. 이 파사드를 통해 User 서비스를 사용할 수 있습니다. 위 코드와 같이 파사드의 "),s("code",[t._v("find")]),t._v(" 메소드를 호출하면 실제로는 "),s("code",[t._v("\\Xpressengine\\User\\UserHandler")]),t._v(" 클래스의 인스턴스의 "),s("code",[t._v("find")]),t._v(" 메소드가 호출됩니다.")]),t._v(" "),s("h3",{attrs:{id:"서비스-컨테이너를-사용하여-로드하기"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#서비스-컨테이너를-사용하여-로드하기"}},[t._v("#")]),t._v(" 서비스 컨테이너를 사용하여 로드하기")]),t._v(" "),s("p",[t._v("파사드를 사용하는 대신, 서비스 컨테이너로부터 직접 서비스를 로드할 수 있습니다. XE에서 제공하는 모든 서비스는 '서비스 컨테이너'에 등록됩니다. 내 코드에서 어떤 서비스를 로드해야할 때, 서비스 컨테이너에게 그 서비스를 달라고 요청하면, 서비스 컨테이너는 요청받은 서비스를 반환해 줍니다. 보통 "),s("code",[t._v("app()")]),t._v(" 함수나 "),s("code",[t._v("App")]),t._v(" 파사드를 사용하여 서비스 컨테이너로부터 필요한 서비스를 로드합니다.")]),t._v(" "),s("div",{staticClass:"language-php extra-class"},[s("pre",{pre:!0,attrs:{class:"language-php"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// User 서비스 로드")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$userHandler")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("app")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token single-quoted-string string"}},[t._v("'xe.user'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// or")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$userHandler")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" \\"),s("span",{pre:!0,attrs:{class:"token package"}},[t._v("App")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("make")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token single-quoted-string string"}},[t._v("'xe.user'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// User 서비스 사용")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$user")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$userHandler")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("find")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$userId")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[t._v("보통 서비스는 특정 클래스의 싱글톤 인스턴스입니다. 그 클래스는 개발자가 서비스를 이용할 때 편하게 사용할 수 있는 메소드(인터페이스)를 가지고 있습니다.")]),t._v(" "),s("p",[t._v("사실, 서비스 컨테이너는 서비스 관리에 국한된 역할을 하는 것은 아닙니다. 정확히 말하면, 서비스 컨테이너는 다양한 클래스의 의존성을 관리하는 강력한 도구 입니다. 서비스 컨테이너에 대하여 더 알고싶다면, "),s("a",{attrs:{href:"https://laravel.kr/docs/5.8/container",target:"_blank",rel:"noopener noreferrer"}},[t._v("이 문서"),s("OutboundLink")],1),t._v("를 참고하세요.")])])}),[],!1,null,null,null);a.default=v.exports}}]);