(window.webpackJsonp=window.webpackJsonp||[]).push([[0],[]]);!function(n){function e(e){for(var r,a,s=e[0],l=e[1],c=e[2],p=0,d=[];p<s.length;p++)a=s[p],Object.prototype.hasOwnProperty.call(o,a)&&o[a]&&d.push(o[a][0]),o[a]=0;for(r in l)Object.prototype.hasOwnProperty.call(l,r)&&(n[r]=l[r]);for(u&&u(e);d.length;)d.shift()();return i.push.apply(i,c||[]),t()}function t(){for(var n,e=0;e<i.length;e++){for(var t=i[e],r=!0,s=1;s<t.length;s++){var l=t[s];0!==o[l]&&(r=!1)}r&&(i.splice(e--,1),n=a(a.s=t[0]))}return n}var r={},o={1:0},i=[];function a(e){if(r[e])return r[e].exports;var t=r[e]={i:e,l:!1,exports:{}};return n[e].call(t.exports,t,t.exports,a),t.l=!0,t.exports}a.e=function(n){var e=[],t=o[n];if(0!==t)if(t)e.push(t[2]);else{var r=new Promise((function(e,r){t=o[n]=[e,r]}));e.push(t[2]=r);var i,s=document.createElement("script");s.charset="utf-8",s.timeout=120,a.nc&&s.setAttribute("nonce",a.nc),s.src=function(n){return a.p+"assets/js/"+({}[n]||n)+"."+{2:"587667cf",3:"ac98112a",4:"728af792",5:"5585d8d7",6:"6714d407",7:"f7226d2c",8:"817a7cc8",9:"7a2c1fcd",10:"57948f23",11:"fecad70b",12:"27a5bb09",13:"b172c327",14:"da8aaa48",15:"0b36b24e",16:"fca16dee",17:"6305561a",18:"a434d577",19:"876d6157",20:"f53151d0",21:"70365815",22:"31cf7805",23:"40cc3185",24:"a06ce1e1",25:"09c52c95",26:"e75a13d8",27:"fa6613e2",28:"85af2809",29:"afff3386",30:"f71492bf",31:"6240829d",32:"3f9c71ea",33:"a1d5553c",34:"0cba113d",35:"0e8fd88d",36:"8739696f",37:"3e6d3291",38:"21071671",39:"32947bd9",40:"9997bca4",41:"8351078e",42:"66b591d4",43:"4f4d6bc2",44:"f690c560",45:"d1992aa2",46:"3f0a5770",47:"129b2e11",48:"71b19ee6",49:"6547541b",50:"32e695cb",51:"b1fd9d73",52:"bf53132e",53:"44be3848",54:"bafd8858",55:"1b418742",56:"2c5bf17c",57:"944f11f0",58:"f0464f72",59:"9c31cf3e",60:"bfce6280",61:"4d2fe3d4",62:"c91dbea7",63:"60391993",64:"530ec0c5",65:"dd2cc186",66:"374a6caa",67:"a6a27ac6",68:"69e9dfc2",69:"4aed424e",70:"2295f984",71:"03cb5805",72:"194fd677",73:"8f5c98e5",74:"6b6732d8",75:"1e8c041c",76:"cc2ec3c1",77:"f2997c1a",78:"1789b79e",79:"f43d2ef6",80:"51578898",81:"e8ef26a1",82:"522bbb94",83:"c1bfa961",84:"94c055fc",85:"f5144183",86:"7db8b9b0",87:"d7ed73b8",88:"9b0d7040",89:"6c40ec6f",90:"f7f4b6ef",91:"71e51af9",92:"516c562c",93:"1536d71b",94:"8adeb6a2",95:"0b36db94",96:"88acae77",97:"71b06025",98:"c474de82"}[n]+".js"}(n);var l=new Error;i=function(e){s.onerror=s.onload=null,clearTimeout(c);var t=o[n];if(0!==t){if(t){var r=e&&("load"===e.type?"missing":e.type),i=e&&e.target&&e.target.src;l.message="Loading chunk "+n+" failed.\n("+r+": "+i+")",l.name="ChunkLoadError",l.type=r,l.request=i,t[1](l)}o[n]=void 0}};var c=setTimeout((function(){i({type:"timeout",target:s})}),12e4);s.onerror=s.onload=i,document.head.appendChild(s)}return Promise.all(e)},a.m=n,a.c=r,a.d=function(n,e,t){a.o(n,e)||Object.defineProperty(n,e,{enumerable:!0,get:t})},a.r=function(n){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(n,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(n,"__esModule",{value:!0})},a.t=function(n,e){if(1&e&&(n=a(n)),8&e)return n;if(4&e&&"object"==typeof n&&n&&n.__esModule)return n;var t=Object.create(null);if(a.r(t),Object.defineProperty(t,"default",{enumerable:!0,value:n}),2&e&&"string"!=typeof n)for(var r in n)a.d(t,r,function(e){return n[e]}.bind(null,r));return t},a.n=function(n){var e=n&&n.__esModule?function(){return n.default}:function(){return n};return a.d(e,"a",e),e},a.o=function(n,e){return Object.prototype.hasOwnProperty.call(n,e)},a.p="/xe3-doc/",a.oe=function(n){throw console.error(n),n};var s=window.webpackJsonp=window.webpackJsonp||[],l=s.push.bind(s);s.push=e,s=s.slice();for(var c=0;c<s.length;c++)e(s[c]);var u=l;i.push([182,0]),t()}([function(n,e,t){var r=t(3),o=t(25).f,i=t(12),a=t(10),s=t(71),l=t(114),c=t(99);n.exports=function(n,e){var t,u,p,d,f,h=n.target,m=n.global,g=n.stat;if(t=m?r:g?r[h]||s(h,{}):(r[h]||{}).prototype)for(u in e){if(d=e[u],p=n.noTargetGet?(f=o(t,u))&&f.value:t[u],!c(m?u:h+(g?".":"#")+u,n.forced)&&void 0!==p){if(typeof d==typeof p)continue;l(d,p)}(n.sham||p&&p.sham)&&i(d,"sham",!0),a(t,u,d,n)}}},function(n,e){n.exports=function(n){try{return!!n()}catch(n){return!0}}},function(n,e,t){var r=t(3),o=t(70),i=t(7),a=t(50),s=t(73),l=t(108),c=o("wks"),u=r.Symbol,p=l?u:u&&u.withoutSetter||a;n.exports=function(n){return i(c,n)||(s&&i(u,n)?c[n]=u[n]:c[n]=p("Symbol."+n)),c[n]}},function(n,e){var t=function(n){return n&&n.Math==Math&&n};n.exports=t("object"==typeof globalThis&&globalThis)||t("object"==typeof window&&window)||t("object"==typeof self&&self)||t("object"==typeof global&&global)||Function("return this")()},function(n,e){n.exports=function(n){return"object"==typeof n?null!==n:"function"==typeof n}},function(n,e,t){var r=t(1);n.exports=!r((function(){return 7!=Object.defineProperty({},1,{get:function(){return 7}})[1]}))},function(n,e,t){var r=t(4);n.exports=function(n){if(!r(n))throw TypeError(String(n)+" is not an object");return n}},function(n,e){var t={}.hasOwnProperty;n.exports=function(n,e){return t.call(n,e)}},function(n,e,t){var r=t(5),o=t(107),i=t(6),a=t(49),s=Object.defineProperty;e.f=r?s:function(n,e,t){if(i(n),e=a(e,!0),i(t),o)try{return s(n,e,t)}catch(n){}if("get"in t||"set"in t)throw TypeError("Accessors not supported");return"value"in t&&(n[e]=t.value),n}},function(n,e,t){var r=t(80),o=t(10),i=t(195);r||o(Object.prototype,"toString",i,{unsafe:!0})},function(n,e,t){var r=t(3),o=t(12),i=t(7),a=t(71),s=t(76),l=t(30),c=l.get,u=l.enforce,p=String(String).split("String");(n.exports=function(n,e,t,s){var l=!!s&&!!s.unsafe,c=!!s&&!!s.enumerable,d=!!s&&!!s.noTargetGet;"function"==typeof t&&("string"!=typeof e||i(t,"name")||o(t,"name",e),u(t).source=p.join("string"==typeof e?e:"")),n!==r?(l?!d&&n[e]&&(c=!0):delete n[e],c?n[e]=t:o(n,e,t)):c?n[e]=t:a(e,t)})(Function.prototype,"toString",(function(){return"function"==typeof this&&c(this).source||s(this)}))},function(n,e,t){var r=t(23);n.exports=function(n){return Object(r(n))}},function(n,e,t){var r=t(5),o=t(8),i=t(36);n.exports=r?function(n,e,t){return o.f(n,e,i(1,t))}:function(n,e,t){return n[e]=t,n}},function(n,e,t){var r=t(45),o=Math.min;n.exports=function(n){return n>0?o(r(n),9007199254740991):0}},function(n,e,t){var r=t(35),o=t(23);n.exports=function(n){return r(o(n))}},function(n,e){var t=Array.isArray;n.exports=t},function(n,e,t){var r=t(143),o="object"==typeof self&&self&&self.Object===Object&&self,i=r||o||Function("return this")();n.exports=i},function(n,e,t){var r=t(5),o=t(1),i=t(7),a=Object.defineProperty,s={},l=function(n){throw n};n.exports=function(n,e){if(i(s,n))return s[n];e||(e={});var t=[][n],c=!!i(e,"ACCESSORS")&&e.ACCESSORS,u=i(e,0)?e[0]:l,p=i(e,1)?e[1]:void 0;return s[n]=!!t&&!o((function(){if(c&&!r)return!0;var n={length:-1};c?a(n,1,{enumerable:!0,get:l}):n[1]=1,t.call(n,u,p)}))}},function(n,e){var t={}.toString;n.exports=function(n){return t.call(n).slice(8,-1)}},function(n,e,t){var r=t(112),o=t(3),i=function(n){return"function"==typeof n?n:void 0};n.exports=function(n,e){return arguments.length<2?i(r[n])||i(o[n]):r[n]&&r[n][e]||o[n]&&o[n][e]}},function(n,e){n.exports=!1},function(n,e){n.exports=function(n){if("function"!=typeof n)throw TypeError(String(n)+" is not a function");return n}},function(n,e,t){var r=t(221),o=t(224);n.exports=function(n,e){var t=o(n,e);return r(t)?t:void 0}},function(n,e){n.exports=function(n){if(null==n)throw TypeError("Can't call method on "+n);return n}},function(n,e,t){"use strict";var r=t(0),o=t(28).filter,i=t(54),a=t(17),s=i("filter"),l=a("filter");r({target:"Array",proto:!0,forced:!s||!l},{filter:function(n){return o(this,n,arguments.length>1?arguments[1]:void 0)}})},function(n,e,t){var r=t(5),o=t(77),i=t(36),a=t(14),s=t(49),l=t(7),c=t(107),u=Object.getOwnPropertyDescriptor;e.f=r?u:function(n,e){if(n=a(n),e=s(e,!0),c)try{return u(n,e)}catch(n){}if(l(n,e))return i(!o.f.call(n,e),n[e])}},function(n,e){n.exports=function(n){return null!=n&&"object"==typeof n}},function(n,e,t){"use strict";var r=t(130).charAt,o=t(30),i=t(113),a=o.set,s=o.getterFor("String Iterator");i(String,"String",(function(n){a(this,{type:"String Iterator",string:String(n),index:0})}),(function(){var n,e=s(this),t=e.string,o=e.index;return o>=t.length?{value:void 0,done:!0}:(n=r(t,o),e.index+=n.length,{value:n,done:!1})}))},function(n,e,t){var r=t(46),o=t(35),i=t(11),a=t(13),s=t(102),l=[].push,c=function(n){var e=1==n,t=2==n,c=3==n,u=4==n,p=6==n,d=5==n||p;return function(f,h,m,g){for(var v,b,y=i(f),E=o(y),x=r(h,m,3),C=a(E.length),$=0,w=g||s,A=e?w(f,C):t?w(f,0):void 0;C>$;$++)if((d||$ in E)&&(b=x(v=E[$],$,y),n))if(e)A[$]=b;else if(b)switch(n){case 3:return!0;case 5:return v;case 6:return $;case 2:l.call(A,v)}else if(u)return!1;return p?-1:c||u?u:A}};n.exports={forEach:c(0),map:c(1),filter:c(2),some:c(3),every:c(4),find:c(5),findIndex:c(6)}},function(n,e,t){"use strict";var r=t(1);n.exports=function(n,e){var t=[][n];return!!t&&r((function(){t.call(null,e||function(){throw 1},1)}))}},function(n,e,t){var r,o,i,a=t(183),s=t(3),l=t(4),c=t(12),u=t(7),p=t(52),d=t(38),f=s.WeakMap;if(a){var h=new f,m=h.get,g=h.has,v=h.set;r=function(n,e){return v.call(h,n,e),e},o=function(n){return m.call(h,n)||{}},i=function(n){return g.call(h,n)}}else{var b=p("state");d[b]=!0,r=function(n,e){return c(n,b,e),e},o=function(n){return u(n,b)?n[b]:{}},i=function(n){return u(n,b)}}n.exports={set:r,get:o,has:i,enforce:function(n){return i(n)?o(n):r(n,{})},getterFor:function(n){return function(e){var t;if(!l(e)||(t=o(e)).type!==n)throw TypeError("Incompatible receiver, "+n+" required");return t}}}},function(n,e,t){var r=t(18);n.exports=Array.isArray||function(n){return"Array"==r(n)}},function(n,e,t){var r=t(3),o=t(131),i=t(34),a=t(12),s=t(2),l=s("iterator"),c=s("toStringTag"),u=i.values;for(var p in o){var d=r[p],f=d&&d.prototype;if(f){if(f[l]!==u)try{a(f,l,u)}catch(n){f[l]=u}if(f[c]||a(f,c,p),o[p])for(var h in i)if(f[h]!==i[h])try{a(f,h,i[h])}catch(n){f[h]=i[h]}}}},function(n,e,t){var r=t(40),o=t(206),i=t(207),a=r?r.toStringTag:void 0;n.exports=function(n){return null==n?void 0===n?"[object Undefined]":"[object Null]":a&&a in Object(n)?o(n):i(n)}},function(n,e,t){"use strict";var r=t(14),o=t(94),i=t(39),a=t(30),s=t(113),l=a.set,c=a.getterFor("Array Iterator");n.exports=s(Array,"Array",(function(n,e){l(this,{type:"Array Iterator",target:r(n),index:0,kind:e})}),(function(){var n=c(this),e=n.target,t=n.kind,r=n.index++;return!e||r>=e.length?(n.target=void 0,{value:void 0,done:!0}):"keys"==t?{value:r,done:!1}:"values"==t?{value:e[r],done:!1}:{value:[r,e[r]],done:!1}}),"values"),i.Arguments=i.Array,o("keys"),o("values"),o("entries")},function(n,e,t){var r=t(1),o=t(18),i="".split;n.exports=r((function(){return!Object("z").propertyIsEnumerable(0)}))?function(n){return"String"==o(n)?i.call(n,""):Object(n)}:Object},function(n,e){n.exports=function(n,e){return{enumerable:!(1&n),configurable:!(2&n),writable:!(4&n),value:e}}},function(n,e,t){var r,o=t(6),i=t(175),a=t(75),s=t(38),l=t(111),c=t(72),u=t(52),p=u("IE_PROTO"),d=function(){},f=function(n){return"<script>"+n+"<\/script>"},h=function(){try{r=document.domain&&new ActiveXObject("htmlfile")}catch(n){}var n,e;h=r?function(n){n.write(f("")),n.close();var e=n.parentWindow.Object;return n=null,e}(r):((e=c("iframe")).style.display="none",l.appendChild(e),e.src=String("javascript:"),(n=e.contentWindow.document).open(),n.write(f("document.F=Object")),n.close(),n.F);for(var t=a.length;t--;)delete h.prototype[a[t]];return h()};s[p]=!0,n.exports=Object.create||function(n,e){var t;return null!==n?(d.prototype=o(n),t=new d,d.prototype=null,t[p]=n):t=h(),void 0===e?t:i(t,e)}},function(n,e){n.exports={}},function(n,e){n.exports={}},function(n,e,t){var r=t(16).Symbol;n.exports=r},function(n,e,t){"use strict";t.d(e,"a",(function(){return i}));t(98);var r=t(42);t(48),t(57),t(82),t(140),t(34),t(9),t(27),t(32);var o=t(64);function i(n){return function(n){if(Array.isArray(n))return Object(r.a)(n)}(n)||function(n){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(n))return Array.from(n)}(n)||Object(o.a)(n)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}},function(n,e,t){"use strict";function r(n,e){(null==e||e>n.length)&&(e=n.length);for(var t=0,r=new Array(e);t<e;t++)r[t]=n[t];return r}t.d(e,"a",(function(){return r}))},function(n,e,t){"use strict";function r(n,e,t,r,o,i,a,s){var l,c="function"==typeof n?n.options:n;if(e&&(c.render=e,c.staticRenderFns=t,c._compiled=!0),r&&(c.functional=!0),i&&(c._scopeId="data-v-"+i),a?(l=function(n){(n=n||this.$vnode&&this.$vnode.ssrContext||this.parent&&this.parent.$vnode&&this.parent.$vnode.ssrContext)||"undefined"==typeof __VUE_SSR_CONTEXT__||(n=__VUE_SSR_CONTEXT__),o&&o.call(this,n),n&&n._registeredComponents&&n._registeredComponents.add(a)},c._ssrRegister=l):o&&(l=s?function(){o.call(this,(c.functional?this.parent:this).$root.$options.shadowRoot)}:o),l)if(c.functional){c._injectStyles=l;var u=c.render;c.render=function(n,e){return l.call(e),u(n,e)}}else{var p=c.beforeCreate;c.beforeCreate=p?[].concat(p,l):[l]}return{exports:n,options:c}}t.d(e,"a",(function(){return r}))},function(n,e,t){"use strict";var r=t(0),o=t(69);r({target:"RegExp",proto:!0,forced:/./.exec!==o},{exec:o})},function(n,e){var t=Math.ceil,r=Math.floor;n.exports=function(n){return isNaN(n=+n)?0:(n>0?r:t)(n)}},function(n,e,t){var r=t(21);n.exports=function(n,e,t){if(r(n),void 0===e)return n;switch(t){case 0:return function(){return n.call(e)};case 1:return function(t){return n.call(e,t)};case 2:return function(t,r){return n.call(e,t,r)};case 3:return function(t,r,o){return n.call(e,t,r,o)}}return function(){return n.apply(e,arguments)}}},function(n,e,t){"use strict";var r=t(0),o=t(4),i=t(31),a=t(110),s=t(13),l=t(14),c=t(55),u=t(2),p=t(54),d=t(17),f=p("slice"),h=d("slice",{ACCESSORS:!0,0:0,1:2}),m=u("species"),g=[].slice,v=Math.max;r({target:"Array",proto:!0,forced:!f||!h},{slice:function(n,e){var t,r,u,p=l(this),d=s(p.length),f=a(n,d),h=a(void 0===e?d:e,d);if(i(p)&&("function"!=typeof(t=p.constructor)||t!==Array&&!i(t.prototype)?o(t)&&null===(t=t[m])&&(t=void 0):t=void 0,t===Array||void 0===t))return g.call(p,f,h);for(r=new(void 0===t?Array:t)(v(h-f,0)),u=0;f<h;f++,u++)f in p&&c(r,u,p[f]);return r.length=u,r}})},function(n,e,t){"use strict";var r=t(0),o=t(3),i=t(19),a=t(20),s=t(5),l=t(73),c=t(108),u=t(1),p=t(7),d=t(31),f=t(4),h=t(6),m=t(11),g=t(14),v=t(49),b=t(36),y=t(37),E=t(51),x=t(68),C=t(201),$=t(78),w=t(25),A=t(8),_=t(77),B=t(12),k=t(10),j=t(70),I=t(52),S=t(38),P=t(50),D=t(2),X=t(138),L=t(139),T=t(53),R=t(30),q=t(28).forEach,O=I("hidden"),U=D("toPrimitive"),M=R.set,F=R.getterFor("Symbol"),H=Object.prototype,N=o.Symbol,G=i("JSON","stringify"),z=w.f,V=A.f,W=C.f,J=_.f,Y=j("symbols"),K=j("op-symbols"),Q=j("string-to-symbol-registry"),Z=j("symbol-to-string-registry"),nn=j("wks"),en=o.QObject,tn=!en||!en.prototype||!en.prototype.findChild,rn=s&&u((function(){return 7!=y(V({},"a",{get:function(){return V(this,"a",{value:7}).a}})).a}))?function(n,e,t){var r=z(H,e);r&&delete H[e],V(n,e,t),r&&n!==H&&V(H,e,r)}:V,on=function(n,e){var t=Y[n]=y(N.prototype);return M(t,{type:"Symbol",tag:n,description:e}),s||(t.description=e),t},an=c?function(n){return"symbol"==typeof n}:function(n){return Object(n)instanceof N},sn=function(n,e,t){n===H&&sn(K,e,t),h(n);var r=v(e,!0);return h(t),p(Y,r)?(t.enumerable?(p(n,O)&&n[O][r]&&(n[O][r]=!1),t=y(t,{enumerable:b(0,!1)})):(p(n,O)||V(n,O,b(1,{})),n[O][r]=!0),rn(n,r,t)):V(n,r,t)},ln=function(n,e){h(n);var t=g(e),r=E(t).concat(dn(t));return q(r,(function(e){s&&!cn.call(t,e)||sn(n,e,t[e])})),n},cn=function(n){var e=v(n,!0),t=J.call(this,e);return!(this===H&&p(Y,e)&&!p(K,e))&&(!(t||!p(this,e)||!p(Y,e)||p(this,O)&&this[O][e])||t)},un=function(n,e){var t=g(n),r=v(e,!0);if(t!==H||!p(Y,r)||p(K,r)){var o=z(t,r);return!o||!p(Y,r)||p(t,O)&&t[O][r]||(o.enumerable=!0),o}},pn=function(n){var e=W(g(n)),t=[];return q(e,(function(n){p(Y,n)||p(S,n)||t.push(n)})),t},dn=function(n){var e=n===H,t=W(e?K:g(n)),r=[];return q(t,(function(n){!p(Y,n)||e&&!p(H,n)||r.push(Y[n])})),r};(l||(k((N=function(){if(this instanceof N)throw TypeError("Symbol is not a constructor");var n=arguments.length&&void 0!==arguments[0]?String(arguments[0]):void 0,e=P(n),t=function(n){this===H&&t.call(K,n),p(this,O)&&p(this[O],e)&&(this[O][e]=!1),rn(this,e,b(1,n))};return s&&tn&&rn(H,e,{configurable:!0,set:t}),on(e,n)}).prototype,"toString",(function(){return F(this).tag})),k(N,"withoutSetter",(function(n){return on(P(n),n)})),_.f=cn,A.f=sn,w.f=un,x.f=C.f=pn,$.f=dn,X.f=function(n){return on(D(n),n)},s&&(V(N.prototype,"description",{configurable:!0,get:function(){return F(this).description}}),a||k(H,"propertyIsEnumerable",cn,{unsafe:!0}))),r({global:!0,wrap:!0,forced:!l,sham:!l},{Symbol:N}),q(E(nn),(function(n){L(n)})),r({target:"Symbol",stat:!0,forced:!l},{for:function(n){var e=String(n);if(p(Q,e))return Q[e];var t=N(e);return Q[e]=t,Z[t]=e,t},keyFor:function(n){if(!an(n))throw TypeError(n+" is not a symbol");if(p(Z,n))return Z[n]},useSetter:function(){tn=!0},useSimple:function(){tn=!1}}),r({target:"Object",stat:!0,forced:!l,sham:!s},{create:function(n,e){return void 0===e?y(n):ln(y(n),e)},defineProperty:sn,defineProperties:ln,getOwnPropertyDescriptor:un}),r({target:"Object",stat:!0,forced:!l},{getOwnPropertyNames:pn,getOwnPropertySymbols:dn}),r({target:"Object",stat:!0,forced:u((function(){$.f(1)}))},{getOwnPropertySymbols:function(n){return $.f(m(n))}}),G)&&r({target:"JSON",stat:!0,forced:!l||u((function(){var n=N();return"[null]"!=G([n])||"{}"!=G({a:n})||"{}"!=G(Object(n))}))},{stringify:function(n,e,t){for(var r,o=[n],i=1;arguments.length>i;)o.push(arguments[i++]);if(r=e,(f(e)||void 0!==n)&&!an(n))return d(e)||(e=function(n,e){if("function"==typeof r&&(e=r.call(this,n,e)),!an(e))return e}),o[1]=e,G.apply(null,o)}});N.prototype[U]||B(N.prototype,U,N.prototype.valueOf),T(N,"Symbol"),S[O]=!0},function(n,e,t){var r=t(4);n.exports=function(n,e){if(!r(n))return n;var t,o;if(e&&"function"==typeof(t=n.toString)&&!r(o=t.call(n)))return o;if("function"==typeof(t=n.valueOf)&&!r(o=t.call(n)))return o;if(!e&&"function"==typeof(t=n.toString)&&!r(o=t.call(n)))return o;throw TypeError("Can't convert object to primitive value")}},function(n,e){var t=0,r=Math.random();n.exports=function(n){return"Symbol("+String(void 0===n?"":n)+")_"+(++t+r).toString(36)}},function(n,e,t){var r=t(109),o=t(75);n.exports=Object.keys||function(n){return r(n,o)}},function(n,e,t){var r=t(70),o=t(50),i=r("keys");n.exports=function(n){return i[n]||(i[n]=o(n))}},function(n,e,t){var r=t(8).f,o=t(7),i=t(2)("toStringTag");n.exports=function(n,e,t){n&&!o(n=t?n:n.prototype,i)&&r(n,i,{configurable:!0,value:e})}},function(n,e,t){var r=t(1),o=t(2),i=t(81),a=o("species");n.exports=function(n){return i>=51||!r((function(){var e=[];return(e.constructor={})[a]=function(){return{foo:1}},1!==e[n](Boolean).foo}))}},function(n,e,t){"use strict";var r=t(49),o=t(8),i=t(36);n.exports=function(n,e,t){var a=r(e);a in n?o.f(n,a,i(0,t)):n[a]=t}},function(n,e,t){"use strict";t.d(e,"a",(function(){return o}));t(9),t(118);function r(n,e,t,r,o,i,a){try{var s=n[i](a),l=s.value}catch(n){return void t(n)}s.done?e(l):Promise.resolve(l).then(r,o)}function o(n){return function(){var e=this,t=arguments;return new Promise((function(o,i){var a=n.apply(e,t);function s(n){r(a,o,i,s,l,"next",n)}function l(n){r(a,o,i,s,l,"throw",n)}s(void 0)}))}}},function(n,e,t){"use strict";var r=t(0),o=t(5),i=t(3),a=t(7),s=t(4),l=t(8).f,c=t(114),u=i.Symbol;if(o&&"function"==typeof u&&(!("description"in u.prototype)||void 0!==u().description)){var p={},d=function(){var n=arguments.length<1||void 0===arguments[0]?void 0:String(arguments[0]),e=this instanceof d?new u(n):void 0===n?u():u(n);return""===n&&(p[e]=!0),e};c(d,u);var f=d.prototype=u.prototype;f.constructor=d;var h=f.toString,m="Symbol(test)"==String(u("test")),g=/^Symbol\((.*)\)[^)]+$/;l(f,"description",{configurable:!0,get:function(){var n=s(this)?this.valueOf():this,e=h.call(n);if(a(p,n))return"";var t=m?e.slice(7,-1):e.replace(g,"$1");return""===t?void 0:t}}),r({global:!0,forced:!0},{Symbol:d})}},function(n,e,t){var r=t(211),o=t(212),i=t(213),a=t(214),s=t(215);function l(n){var e=-1,t=null==n?0:n.length;for(this.clear();++e<t;){var r=n[e];this.set(r[0],r[1])}}l.prototype.clear=r,l.prototype.delete=o,l.prototype.get=i,l.prototype.has=a,l.prototype.set=s,n.exports=l},function(n,e,t){var r=t(145);n.exports=function(n,e){for(var t=n.length;t--;)if(r(n[t][0],e))return t;return-1}},function(n,e,t){var r=t(22)(Object,"create");n.exports=r},function(n,e,t){var r=t(233);n.exports=function(n,e){var t=n.__data__;return r(e)?t["string"==typeof e?"string":"hash"]:t.map}},function(n,e,t){var r=t(91);n.exports=function(n){if("string"==typeof n||r(n))return n;var e=n+"";return"0"==e&&1/n==-1/0?"-0":e}},function(n,e,t){},function(n,e,t){"use strict";t.d(e,"a",(function(){return o}));t(140),t(47),t(141),t(83),t(9),t(104),t(27);var r=t(42);function o(n,e){if(n){if("string"==typeof n)return Object(r.a)(n,e);var t=Object.prototype.toString.call(n).slice(8,-1);return"Object"===t&&n.constructor&&(t=n.constructor.name),"Map"===t||"Set"===t?Array.from(n):"Arguments"===t||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t)?Object(r.a)(n,e):void 0}}},function(n,e,t){var r,o;
/* NProgress, (c) 2013, 2014 Rico Sta. Cruz - http://ricostacruz.com/nprogress
 * @license MIT */void 0===(o="function"==typeof(r=function(){var n,e,t={version:"0.2.0"},r=t.settings={minimum:.08,easing:"ease",positionUsing:"",speed:200,trickle:!0,trickleRate:.02,trickleSpeed:800,showSpinner:!0,barSelector:'[role="bar"]',spinnerSelector:'[role="spinner"]',parent:"body",template:'<div class="bar" role="bar"><div class="peg"></div></div><div class="spinner" role="spinner"><div class="spinner-icon"></div></div>'};function o(n,e,t){return n<e?e:n>t?t:n}function i(n){return 100*(-1+n)}t.configure=function(n){var e,t;for(e in n)void 0!==(t=n[e])&&n.hasOwnProperty(e)&&(r[e]=t);return this},t.status=null,t.set=function(n){var e=t.isStarted();n=o(n,r.minimum,1),t.status=1===n?null:n;var l=t.render(!e),c=l.querySelector(r.barSelector),u=r.speed,p=r.easing;return l.offsetWidth,a((function(e){""===r.positionUsing&&(r.positionUsing=t.getPositioningCSS()),s(c,function(n,e,t){var o;return(o="translate3d"===r.positionUsing?{transform:"translate3d("+i(n)+"%,0,0)"}:"translate"===r.positionUsing?{transform:"translate("+i(n)+"%,0)"}:{"margin-left":i(n)+"%"}).transition="all "+e+"ms "+t,o}(n,u,p)),1===n?(s(l,{transition:"none",opacity:1}),l.offsetWidth,setTimeout((function(){s(l,{transition:"all "+u+"ms linear",opacity:0}),setTimeout((function(){t.remove(),e()}),u)}),u)):setTimeout(e,u)})),this},t.isStarted=function(){return"number"==typeof t.status},t.start=function(){t.status||t.set(0);var n=function(){setTimeout((function(){t.status&&(t.trickle(),n())}),r.trickleSpeed)};return r.trickle&&n(),this},t.done=function(n){return n||t.status?t.inc(.3+.5*Math.random()).set(1):this},t.inc=function(n){var e=t.status;return e?("number"!=typeof n&&(n=(1-e)*o(Math.random()*e,.1,.95)),e=o(e+n,0,.994),t.set(e)):t.start()},t.trickle=function(){return t.inc(Math.random()*r.trickleRate)},n=0,e=0,t.promise=function(r){return r&&"resolved"!==r.state()?(0===e&&t.start(),n++,e++,r.always((function(){0==--e?(n=0,t.done()):t.set((n-e)/n)})),this):this},t.render=function(n){if(t.isRendered())return document.getElementById("nprogress");c(document.documentElement,"nprogress-busy");var e=document.createElement("div");e.id="nprogress",e.innerHTML=r.template;var o,a=e.querySelector(r.barSelector),l=n?"-100":i(t.status||0),u=document.querySelector(r.parent);return s(a,{transition:"all 0 linear",transform:"translate3d("+l+"%,0,0)"}),r.showSpinner||(o=e.querySelector(r.spinnerSelector))&&d(o),u!=document.body&&c(u,"nprogress-custom-parent"),u.appendChild(e),e},t.remove=function(){u(document.documentElement,"nprogress-busy"),u(document.querySelector(r.parent),"nprogress-custom-parent");var n=document.getElementById("nprogress");n&&d(n)},t.isRendered=function(){return!!document.getElementById("nprogress")},t.getPositioningCSS=function(){var n=document.body.style,e="WebkitTransform"in n?"Webkit":"MozTransform"in n?"Moz":"msTransform"in n?"ms":"OTransform"in n?"O":"";return e+"Perspective"in n?"translate3d":e+"Transform"in n?"translate":"margin"};var a=function(){var n=[];function e(){var t=n.shift();t&&t(e)}return function(t){n.push(t),1==n.length&&e()}}(),s=function(){var n=["Webkit","O","Moz","ms"],e={};function t(t){return t=t.replace(/^-ms-/,"ms-").replace(/-([\da-z])/gi,(function(n,e){return e.toUpperCase()})),e[t]||(e[t]=function(e){var t=document.body.style;if(e in t)return e;for(var r,o=n.length,i=e.charAt(0).toUpperCase()+e.slice(1);o--;)if((r=n[o]+i)in t)return r;return e}(t))}function r(n,e,r){e=t(e),n.style[e]=r}return function(n,e){var t,o,i=arguments;if(2==i.length)for(t in e)void 0!==(o=e[t])&&e.hasOwnProperty(t)&&r(n,t,o);else r(n,i[1],i[2])}}();function l(n,e){return("string"==typeof n?n:p(n)).indexOf(" "+e+" ")>=0}function c(n,e){var t=p(n),r=t+e;l(t,e)||(n.className=r.substring(1))}function u(n,e){var t,r=p(n);l(n,e)&&(t=r.replace(" "+e+" "," "),n.className=t.substring(1,t.length-1))}function p(n){return(" "+(n.className||"")+" ").replace(/\s+/gi," ")}function d(n){n&&n.parentNode&&n.parentNode.removeChild(n)}return t})?r.call(e,t,e,n):r)||(n.exports=o)},function(n,e,t){"use strict";var r=t(0),o=t(28).map,i=t(54),a=t(17),s=i("map"),l=a("map");r({target:"Array",proto:!0,forced:!s||!l},{map:function(n){return o(this,n,arguments.length>1?arguments[1]:void 0)}})},function(n,e,t){"use strict";var r=t(167),o=t(6),i=t(11),a=t(13),s=t(45),l=t(23),c=t(171),u=t(168),p=Math.max,d=Math.min,f=Math.floor,h=/\$([$&'`]|\d\d?|<[^>]*>)/g,m=/\$([$&'`]|\d\d?)/g;r("replace",2,(function(n,e,t,r){var g=r.REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE,v=r.REPLACE_KEEPS_$0,b=g?"$":"$0";return[function(t,r){var o=l(this),i=null==t?void 0:t[n];return void 0!==i?i.call(t,o,r):e.call(String(o),t,r)},function(n,r){if(!g&&v||"string"==typeof r&&-1===r.indexOf(b)){var i=t(e,n,this,r);if(i.done)return i.value}var l=o(n),f=String(this),h="function"==typeof r;h||(r=String(r));var m=l.global;if(m){var E=l.unicode;l.lastIndex=0}for(var x=[];;){var C=u(l,f);if(null===C)break;if(x.push(C),!m)break;""===String(C[0])&&(l.lastIndex=c(f,a(l.lastIndex),E))}for(var $,w="",A=0,_=0;_<x.length;_++){C=x[_];for(var B=String(C[0]),k=p(d(s(C.index),f.length),0),j=[],I=1;I<C.length;I++)j.push(void 0===($=C[I])?$:String($));var S=C.groups;if(h){var P=[B].concat(j,k,f);void 0!==S&&P.push(S);var D=String(r.apply(void 0,P))}else D=y(B,f,k,j,S,r);k>=A&&(w+=f.slice(A,k)+D,A=k+B.length)}return w+f.slice(A)}];function y(n,t,r,o,a,s){var l=r+n.length,c=o.length,u=m;return void 0!==a&&(a=i(a),u=h),e.call(s,u,(function(e,i){var s;switch(i.charAt(0)){case"$":return"$";case"&":return n;case"`":return t.slice(0,r);case"'":return t.slice(l);case"<":s=a[i.slice(1,-1)];break;default:var u=+i;if(0===u)return e;if(u>c){var p=f(u/10);return 0===p?e:p<=c?void 0===o[p-1]?i.charAt(1):o[p-1]+i.charAt(1):e}s=o[u-1]}return void 0===s?"":s}))}}))},function(n,e,t){var r=t(109),o=t(75).concat("length","prototype");e.f=Object.getOwnPropertyNames||function(n){return r(n,o)}},function(n,e,t){"use strict";var r,o,i=t(103),a=t(179),s=RegExp.prototype.exec,l=String.prototype.replace,c=s,u=(r=/a/,o=/b*/g,s.call(r,"a"),s.call(o,"a"),0!==r.lastIndex||0!==o.lastIndex),p=a.UNSUPPORTED_Y||a.BROKEN_CARET,d=void 0!==/()??/.exec("")[1];(u||d||p)&&(c=function(n){var e,t,r,o,a=this,c=p&&a.sticky,f=i.call(a),h=a.source,m=0,g=n;return c&&(-1===(f=f.replace("y","")).indexOf("g")&&(f+="g"),g=String(n).slice(a.lastIndex),a.lastIndex>0&&(!a.multiline||a.multiline&&"\n"!==n[a.lastIndex-1])&&(h="(?: "+h+")",g=" "+g,m++),t=new RegExp("^(?:"+h+")",f)),d&&(t=new RegExp("^"+h+"$(?!\\s)",f)),u&&(e=a.lastIndex),r=s.call(c?t:a,g),c?r?(r.input=r.input.slice(m),r[0]=r[0].slice(m),r.index=a.lastIndex,a.lastIndex+=r[0].length):a.lastIndex=0:u&&r&&(a.lastIndex=a.global?r.index+r[0].length:e),d&&r&&r.length>1&&l.call(r[0],t,(function(){for(o=1;o<arguments.length-2;o++)void 0===arguments[o]&&(r[o]=void 0)})),r}),n.exports=c},function(n,e,t){var r=t(20),o=t(106);(n.exports=function(n,e){return o[n]||(o[n]=void 0!==e?e:{})})("versions",[]).push({version:"3.6.5",mode:r?"pure":"global",copyright:"© 2020 Denis Pushkarev (zloirock.ru)"})},function(n,e,t){var r=t(3),o=t(12);n.exports=function(n,e){try{o(r,n,e)}catch(t){r[n]=e}return e}},function(n,e,t){var r=t(3),o=t(4),i=r.document,a=o(i)&&o(i.createElement);n.exports=function(n){return a?i.createElement(n):{}}},function(n,e,t){var r=t(1);n.exports=!!Object.getOwnPropertySymbols&&!r((function(){return!String(Symbol())}))},function(n,e,t){var r=t(14),o=t(13),i=t(110),a=function(n){return function(e,t,a){var s,l=r(e),c=o(l.length),u=i(a,c);if(n&&t!=t){for(;c>u;)if((s=l[u++])!=s)return!0}else for(;c>u;u++)if((n||u in l)&&l[u]===t)return n||u||0;return!n&&-1}};n.exports={includes:a(!0),indexOf:a(!1)}},function(n,e){n.exports=["constructor","hasOwnProperty","isPrototypeOf","propertyIsEnumerable","toLocaleString","toString","valueOf"]},function(n,e,t){var r=t(106),o=Function.toString;"function"!=typeof r.inspectSource&&(r.inspectSource=function(n){return o.call(n)}),n.exports=r.inspectSource},function(n,e,t){"use strict";var r={}.propertyIsEnumerable,o=Object.getOwnPropertyDescriptor,i=o&&!r.call({1:2},1);e.f=i?function(n){var e=o(this,n);return!!e&&e.enumerable}:r},function(n,e){e.f=Object.getOwnPropertySymbols},function(n,e,t){var r=t(7),o=t(11),i=t(52),a=t(117),s=i("IE_PROTO"),l=Object.prototype;n.exports=a?Object.getPrototypeOf:function(n){return n=o(n),r(n,s)?n[s]:"function"==typeof n.constructor&&n instanceof n.constructor?n.constructor.prototype:n instanceof Object?l:null}},function(n,e,t){var r={};r[t(2)("toStringTag")]="z",n.exports="[object z]"===String(r)},function(n,e,t){var r,o,i=t(3),a=t(127),s=i.process,l=s&&s.versions,c=l&&l.v8;c?o=(r=c.split("."))[0]+r[1]:a&&(!(r=a.match(/Edge\/(\d+)/))||r[1]>=74)&&(r=a.match(/Chrome\/(\d+)/))&&(o=r[1]),n.exports=o&&+o},function(n,e,t){t(139)("iterator")},function(n,e,t){var r=t(5),o=t(8).f,i=Function.prototype,a=i.toString,s=/^\s*function ([^ (]*)/;r&&!("name"in i)&&o(i,"name",{configurable:!0,get:function(){try{return a.call(this).match(s)[1]}catch(n){return""}}})},function(n,e,t){var r=t(205),o=t(26),i=Object.prototype,a=i.hasOwnProperty,s=i.propertyIsEnumerable,l=r(function(){return arguments}())?r:function(n){return o(n)&&a.call(n,"callee")&&!s.call(n,"callee")};n.exports=l},function(n,e,t){var r=t(22)(t(16),"Map");n.exports=r},function(n,e){n.exports=function(n){var e=typeof n;return null!=n&&("object"==e||"function"==e)}},function(n,e,t){var r=t(225),o=t(232),i=t(234),a=t(235),s=t(236);function l(n){var e=-1,t=null==n?0:n.length;for(this.clear();++e<t;){var r=n[e];this.set(r[0],r[1])}}l.prototype.clear=r,l.prototype.delete=o,l.prototype.get=i,l.prototype.has=a,l.prototype.set=s,n.exports=l},function(n,e){n.exports=function(n){var e=-1,t=Array(n.size);return n.forEach((function(n){t[++e]=n})),t}},function(n,e){n.exports=function(n){return"number"==typeof n&&n>-1&&n%1==0&&n<=9007199254740991}},function(n,e,t){var r=t(15),o=t(91),i=/\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/,a=/^\w*$/;n.exports=function(n,e){if(r(n))return!1;var t=typeof n;return!("number"!=t&&"symbol"!=t&&"boolean"!=t&&null!=n&&!o(n))||(a.test(n)||!i.test(n)||null!=e&&n in Object(e))}},function(n,e,t){var r=t(33),o=t(26);n.exports=function(n){return"symbol"==typeof n||o(n)&&"[object Symbol]"==r(n)}},function(n,e){n.exports=function(n){return n}},function(n,e,t){var r=t(0),o=t(11),i=t(51);r({target:"Object",stat:!0,forced:t(1)((function(){i(1)}))},{keys:function(n){return i(o(n))}})},function(n,e,t){var r=t(2),o=t(37),i=t(8),a=r("unscopables"),s=Array.prototype;null==s[a]&&i.f(s,a,{configurable:!0,value:o(null)}),n.exports=function(n){s[a][n]=!0}},function(n,e,t){var r=function(n){"use strict";var e=Object.prototype,t=e.hasOwnProperty,r="function"==typeof Symbol?Symbol:{},o=r.iterator||"@@iterator",i=r.asyncIterator||"@@asyncIterator",a=r.toStringTag||"@@toStringTag";function s(n,e,t,r){var o=e&&e.prototype instanceof u?e:u,i=Object.create(o.prototype),a=new C(r||[]);return i._invoke=function(n,e,t){var r="suspendedStart";return function(o,i){if("executing"===r)throw new Error("Generator is already running");if("completed"===r){if("throw"===o)throw i;return w()}for(t.method=o,t.arg=i;;){var a=t.delegate;if(a){var s=y(a,t);if(s){if(s===c)continue;return s}}if("next"===t.method)t.sent=t._sent=t.arg;else if("throw"===t.method){if("suspendedStart"===r)throw r="completed",t.arg;t.dispatchException(t.arg)}else"return"===t.method&&t.abrupt("return",t.arg);r="executing";var u=l(n,e,t);if("normal"===u.type){if(r=t.done?"completed":"suspendedYield",u.arg===c)continue;return{value:u.arg,done:t.done}}"throw"===u.type&&(r="completed",t.method="throw",t.arg=u.arg)}}}(n,t,a),i}function l(n,e,t){try{return{type:"normal",arg:n.call(e,t)}}catch(n){return{type:"throw",arg:n}}}n.wrap=s;var c={};function u(){}function p(){}function d(){}var f={};f[o]=function(){return this};var h=Object.getPrototypeOf,m=h&&h(h($([])));m&&m!==e&&t.call(m,o)&&(f=m);var g=d.prototype=u.prototype=Object.create(f);function v(n){["next","throw","return"].forEach((function(e){n[e]=function(n){return this._invoke(e,n)}}))}function b(n,e){var r;this._invoke=function(o,i){function a(){return new e((function(r,a){!function r(o,i,a,s){var c=l(n[o],n,i);if("throw"!==c.type){var u=c.arg,p=u.value;return p&&"object"==typeof p&&t.call(p,"__await")?e.resolve(p.__await).then((function(n){r("next",n,a,s)}),(function(n){r("throw",n,a,s)})):e.resolve(p).then((function(n){u.value=n,a(u)}),(function(n){return r("throw",n,a,s)}))}s(c.arg)}(o,i,r,a)}))}return r=r?r.then(a,a):a()}}function y(n,e){var t=n.iterator[e.method];if(void 0===t){if(e.delegate=null,"throw"===e.method){if(n.iterator.return&&(e.method="return",e.arg=void 0,y(n,e),"throw"===e.method))return c;e.method="throw",e.arg=new TypeError("The iterator does not provide a 'throw' method")}return c}var r=l(t,n.iterator,e.arg);if("throw"===r.type)return e.method="throw",e.arg=r.arg,e.delegate=null,c;var o=r.arg;return o?o.done?(e[n.resultName]=o.value,e.next=n.nextLoc,"return"!==e.method&&(e.method="next",e.arg=void 0),e.delegate=null,c):o:(e.method="throw",e.arg=new TypeError("iterator result is not an object"),e.delegate=null,c)}function E(n){var e={tryLoc:n[0]};1 in n&&(e.catchLoc=n[1]),2 in n&&(e.finallyLoc=n[2],e.afterLoc=n[3]),this.tryEntries.push(e)}function x(n){var e=n.completion||{};e.type="normal",delete e.arg,n.completion=e}function C(n){this.tryEntries=[{tryLoc:"root"}],n.forEach(E,this),this.reset(!0)}function $(n){if(n){var e=n[o];if(e)return e.call(n);if("function"==typeof n.next)return n;if(!isNaN(n.length)){var r=-1,i=function e(){for(;++r<n.length;)if(t.call(n,r))return e.value=n[r],e.done=!1,e;return e.value=void 0,e.done=!0,e};return i.next=i}}return{next:w}}function w(){return{value:void 0,done:!0}}return p.prototype=g.constructor=d,d.constructor=p,d[a]=p.displayName="GeneratorFunction",n.isGeneratorFunction=function(n){var e="function"==typeof n&&n.constructor;return!!e&&(e===p||"GeneratorFunction"===(e.displayName||e.name))},n.mark=function(n){return Object.setPrototypeOf?Object.setPrototypeOf(n,d):(n.__proto__=d,a in n||(n[a]="GeneratorFunction")),n.prototype=Object.create(g),n},n.awrap=function(n){return{__await:n}},v(b.prototype),b.prototype[i]=function(){return this},n.AsyncIterator=b,n.async=function(e,t,r,o,i){void 0===i&&(i=Promise);var a=new b(s(e,t,r,o),i);return n.isGeneratorFunction(t)?a:a.next().then((function(n){return n.done?n.value:a.next()}))},v(g),g[a]="Generator",g[o]=function(){return this},g.toString=function(){return"[object Generator]"},n.keys=function(n){var e=[];for(var t in n)e.push(t);return e.reverse(),function t(){for(;e.length;){var r=e.pop();if(r in n)return t.value=r,t.done=!1,t}return t.done=!0,t}},n.values=$,C.prototype={constructor:C,reset:function(n){if(this.prev=0,this.next=0,this.sent=this._sent=void 0,this.done=!1,this.delegate=null,this.method="next",this.arg=void 0,this.tryEntries.forEach(x),!n)for(var e in this)"t"===e.charAt(0)&&t.call(this,e)&&!isNaN(+e.slice(1))&&(this[e]=void 0)},stop:function(){this.done=!0;var n=this.tryEntries[0].completion;if("throw"===n.type)throw n.arg;return this.rval},dispatchException:function(n){if(this.done)throw n;var e=this;function r(t,r){return a.type="throw",a.arg=n,e.next=t,r&&(e.method="next",e.arg=void 0),!!r}for(var o=this.tryEntries.length-1;o>=0;--o){var i=this.tryEntries[o],a=i.completion;if("root"===i.tryLoc)return r("end");if(i.tryLoc<=this.prev){var s=t.call(i,"catchLoc"),l=t.call(i,"finallyLoc");if(s&&l){if(this.prev<i.catchLoc)return r(i.catchLoc,!0);if(this.prev<i.finallyLoc)return r(i.finallyLoc)}else if(s){if(this.prev<i.catchLoc)return r(i.catchLoc,!0)}else{if(!l)throw new Error("try statement without catch or finally");if(this.prev<i.finallyLoc)return r(i.finallyLoc)}}}},abrupt:function(n,e){for(var r=this.tryEntries.length-1;r>=0;--r){var o=this.tryEntries[r];if(o.tryLoc<=this.prev&&t.call(o,"finallyLoc")&&this.prev<o.finallyLoc){var i=o;break}}i&&("break"===n||"continue"===n)&&i.tryLoc<=e&&e<=i.finallyLoc&&(i=null);var a=i?i.completion:{};return a.type=n,a.arg=e,i?(this.method="next",this.next=i.finallyLoc,c):this.complete(a)},complete:function(n,e){if("throw"===n.type)throw n.arg;return"break"===n.type||"continue"===n.type?this.next=n.arg:"return"===n.type?(this.rval=this.arg=n.arg,this.method="return",this.next="end"):"normal"===n.type&&e&&(this.next=e),c},finish:function(n){for(var e=this.tryEntries.length-1;e>=0;--e){var t=this.tryEntries[e];if(t.finallyLoc===n)return this.complete(t.completion,t.afterLoc),x(t),c}},catch:function(n){for(var e=this.tryEntries.length-1;e>=0;--e){var t=this.tryEntries[e];if(t.tryLoc===n){var r=t.completion;if("throw"===r.type){var o=r.arg;x(t)}return o}}throw new Error("illegal catch attempt")},delegateYield:function(n,e,t){return this.delegate={iterator:$(n),resultName:e,nextLoc:t},"next"===this.method&&(this.arg=void 0),c}},n}(n.exports);try{regeneratorRuntime=r}catch(n){Function("r","regeneratorRuntime = r")(r)}},function(n,e,t){"use strict";var r=t(0),o=t(132);r({target:"Array",proto:!0,forced:[].forEach!=o},{forEach:o})},function(n,e,t){var r=t(3),o=t(131),i=t(132),a=t(12);for(var s in o){var l=r[s],c=l&&l.prototype;if(c&&c.forEach!==i)try{a(c,"forEach",i)}catch(n){c.forEach=i}}},function(n,e,t){t(0)({target:"Array",stat:!0},{isArray:t(31)})},function(n,e,t){var r=t(1),o=/#|\.prototype\./,i=function(n,e){var t=s[a(n)];return t==c||t!=l&&("function"==typeof e?r(e):!!e)},a=i.normalize=function(n){return String(n).replace(o,".").toLowerCase()},s=i.data={},l=i.NATIVE="N",c=i.POLYFILL="P";n.exports=i},function(n,e,t){var r=t(6),o=t(185);n.exports=Object.setPrototypeOf||("__proto__"in{}?function(){var n,e=!1,t={};try{(n=Object.getOwnPropertyDescriptor(Object.prototype,"__proto__").set).call(t,[]),e=t instanceof Array}catch(n){}return function(t,i){return r(t),o(i),e?n.call(t,i):t.__proto__=i,t}}():void 0)},function(n,e,t){var r=t(6),o=t(21),i=t(2)("species");n.exports=function(n,e){var t,a=r(n).constructor;return void 0===a||null==(t=r(a)[i])?e:o(t)}},function(n,e,t){var r=t(4),o=t(31),i=t(2)("species");n.exports=function(n,e){var t;return o(n)&&("function"!=typeof(t=n.constructor)||t!==Array&&!o(t.prototype)?r(t)&&null===(t=t[i])&&(t=void 0):t=void 0),new(void 0===t?Array:t)(0===e?0:e)}},function(n,e,t){"use strict";var r=t(6);n.exports=function(){var n=r(this),e="";return n.global&&(e+="g"),n.ignoreCase&&(e+="i"),n.multiline&&(e+="m"),n.dotAll&&(e+="s"),n.unicode&&(e+="u"),n.sticky&&(e+="y"),e}},function(n,e,t){"use strict";var r=t(10),o=t(6),i=t(1),a=t(103),s=RegExp.prototype,l=s.toString,c=i((function(){return"/a/b"!=l.call({source:"a",flags:"b"})})),u="toString"!=l.name;(c||u)&&r(RegExp.prototype,"toString",(function(){var n=o(this),e=String(n.source),t=n.flags;return"/"+e+"/"+String(void 0===t&&n instanceof RegExp&&!("flags"in s)?a.call(n):t)}),{unsafe:!0})},function(n,e){n.exports=function(n){return n.webpackPolyfill||(n.deprecate=function(){},n.paths=[],n.children||(n.children=[]),Object.defineProperty(n,"loaded",{enumerable:!0,get:function(){return n.l}}),Object.defineProperty(n,"id",{enumerable:!0,get:function(){return n.i}}),n.webpackPolyfill=1),n}},function(n,e,t){var r=t(3),o=t(71),i=r["__core-js_shared__"]||o("__core-js_shared__",{});n.exports=i},function(n,e,t){var r=t(5),o=t(1),i=t(72);n.exports=!r&&!o((function(){return 7!=Object.defineProperty(i("div"),"a",{get:function(){return 7}}).a}))},function(n,e,t){var r=t(73);n.exports=r&&!Symbol.sham&&"symbol"==typeof Symbol.iterator},function(n,e,t){var r=t(7),o=t(14),i=t(74).indexOf,a=t(38);n.exports=function(n,e){var t,s=o(n),l=0,c=[];for(t in s)!r(a,t)&&r(s,t)&&c.push(t);for(;e.length>l;)r(s,t=e[l++])&&(~i(c,t)||c.push(t));return c}},function(n,e,t){var r=t(45),o=Math.max,i=Math.min;n.exports=function(n,e){var t=r(n);return t<0?o(t+e,0):i(t,e)}},function(n,e,t){var r=t(19);n.exports=r("document","documentElement")},function(n,e,t){var r=t(3);n.exports=r},function(n,e,t){"use strict";var r=t(0),o=t(184),i=t(79),a=t(100),s=t(53),l=t(12),c=t(10),u=t(2),p=t(20),d=t(39),f=t(116),h=f.IteratorPrototype,m=f.BUGGY_SAFARI_ITERATORS,g=u("iterator"),v=function(){return this};n.exports=function(n,e,t,u,f,b,y){o(t,e,u);var E,x,C,$=function(n){if(n===f&&k)return k;if(!m&&n in _)return _[n];switch(n){case"keys":case"values":case"entries":return function(){return new t(this,n)}}return function(){return new t(this)}},w=e+" Iterator",A=!1,_=n.prototype,B=_[g]||_["@@iterator"]||f&&_[f],k=!m&&B||$(f),j="Array"==e&&_.entries||B;if(j&&(E=i(j.call(new n)),h!==Object.prototype&&E.next&&(p||i(E)===h||(a?a(E,h):"function"!=typeof E[g]&&l(E,g,v)),s(E,w,!0,!0),p&&(d[w]=v))),"values"==f&&B&&"values"!==B.name&&(A=!0,k=function(){return B.call(this)}),p&&!y||_[g]===k||l(_,g,k),d[e]=k,f)if(x={values:$("values"),keys:b?k:$("keys"),entries:$("entries")},y)for(C in x)(m||A||!(C in _))&&c(_,C,x[C]);else r({target:e,proto:!0,forced:m||A},x);return x}},function(n,e,t){var r=t(7),o=t(115),i=t(25),a=t(8);n.exports=function(n,e){for(var t=o(e),s=a.f,l=i.f,c=0;c<t.length;c++){var u=t[c];r(n,u)||s(n,u,l(e,u))}}},function(n,e,t){var r=t(19),o=t(68),i=t(78),a=t(6);n.exports=r("Reflect","ownKeys")||function(n){var e=o.f(a(n)),t=i.f;return t?e.concat(t(n)):e}},function(n,e,t){"use strict";var r,o,i,a=t(79),s=t(12),l=t(7),c=t(2),u=t(20),p=c("iterator"),d=!1;[].keys&&("next"in(i=[].keys())?(o=a(a(i)))!==Object.prototype&&(r=o):d=!0),null==r&&(r={}),u||l(r,p)||s(r,p,(function(){return this})),n.exports={IteratorPrototype:r,BUGGY_SAFARI_ITERATORS:d}},function(n,e,t){var r=t(1);n.exports=!r((function(){function n(){}return n.prototype.constructor=null,Object.getPrototypeOf(new n)!==n.prototype}))},function(n,e,t){"use strict";var r,o,i,a,s=t(0),l=t(20),c=t(3),u=t(19),p=t(119),d=t(10),f=t(186),h=t(53),m=t(176),g=t(4),v=t(21),b=t(187),y=t(18),E=t(76),x=t(188),C=t(124),$=t(101),w=t(125).set,A=t(189),_=t(128),B=t(190),k=t(129),j=t(191),I=t(30),S=t(99),P=t(2),D=t(81),X=P("species"),L="Promise",T=I.get,R=I.set,q=I.getterFor(L),O=p,U=c.TypeError,M=c.document,F=c.process,H=u("fetch"),N=k.f,G=N,z="process"==y(F),V=!!(M&&M.createEvent&&c.dispatchEvent),W=S(L,(function(){if(!(E(O)!==String(O))){if(66===D)return!0;if(!z&&"function"!=typeof PromiseRejectionEvent)return!0}if(l&&!O.prototype.finally)return!0;if(D>=51&&/native code/.test(O))return!1;var n=O.resolve(1),e=function(n){n((function(){}),(function(){}))};return(n.constructor={})[X]=e,!(n.then((function(){}))instanceof e)})),J=W||!C((function(n){O.all(n).catch((function(){}))})),Y=function(n){var e;return!(!g(n)||"function"!=typeof(e=n.then))&&e},K=function(n,e,t){if(!e.notified){e.notified=!0;var r=e.reactions;A((function(){for(var o=e.value,i=1==e.state,a=0;r.length>a;){var s,l,c,u=r[a++],p=i?u.ok:u.fail,d=u.resolve,f=u.reject,h=u.domain;try{p?(i||(2===e.rejection&&en(n,e),e.rejection=1),!0===p?s=o:(h&&h.enter(),s=p(o),h&&(h.exit(),c=!0)),s===u.promise?f(U("Promise-chain cycle")):(l=Y(s))?l.call(s,d,f):d(s)):f(o)}catch(n){h&&!c&&h.exit(),f(n)}}e.reactions=[],e.notified=!1,t&&!e.rejection&&Z(n,e)}))}},Q=function(n,e,t){var r,o;V?((r=M.createEvent("Event")).promise=e,r.reason=t,r.initEvent(n,!1,!0),c.dispatchEvent(r)):r={promise:e,reason:t},(o=c["on"+n])?o(r):"unhandledrejection"===n&&B("Unhandled promise rejection",t)},Z=function(n,e){w.call(c,(function(){var t,r=e.value;if(nn(e)&&(t=j((function(){z?F.emit("unhandledRejection",r,n):Q("unhandledrejection",n,r)})),e.rejection=z||nn(e)?2:1,t.error))throw t.value}))},nn=function(n){return 1!==n.rejection&&!n.parent},en=function(n,e){w.call(c,(function(){z?F.emit("rejectionHandled",n):Q("rejectionhandled",n,e.value)}))},tn=function(n,e,t,r){return function(o){n(e,t,o,r)}},rn=function(n,e,t,r){e.done||(e.done=!0,r&&(e=r),e.value=t,e.state=2,K(n,e,!0))},on=function(n,e,t,r){if(!e.done){e.done=!0,r&&(e=r);try{if(n===t)throw U("Promise can't be resolved itself");var o=Y(t);o?A((function(){var r={done:!1};try{o.call(t,tn(on,n,r,e),tn(rn,n,r,e))}catch(t){rn(n,r,t,e)}})):(e.value=t,e.state=1,K(n,e,!1))}catch(t){rn(n,{done:!1},t,e)}}};W&&(O=function(n){b(this,O,L),v(n),r.call(this);var e=T(this);try{n(tn(on,this,e),tn(rn,this,e))}catch(n){rn(this,e,n)}},(r=function(n){R(this,{type:L,done:!1,notified:!1,parent:!1,reactions:[],rejection:!1,state:0,value:void 0})}).prototype=f(O.prototype,{then:function(n,e){var t=q(this),r=N($(this,O));return r.ok="function"!=typeof n||n,r.fail="function"==typeof e&&e,r.domain=z?F.domain:void 0,t.parent=!0,t.reactions.push(r),0!=t.state&&K(this,t,!1),r.promise},catch:function(n){return this.then(void 0,n)}}),o=function(){var n=new r,e=T(n);this.promise=n,this.resolve=tn(on,n,e),this.reject=tn(rn,n,e)},k.f=N=function(n){return n===O||n===i?new o(n):G(n)},l||"function"!=typeof p||(a=p.prototype.then,d(p.prototype,"then",(function(n,e){var t=this;return new O((function(n,e){a.call(t,n,e)})).then(n,e)}),{unsafe:!0}),"function"==typeof H&&s({global:!0,enumerable:!0,forced:!0},{fetch:function(n){return _(O,H.apply(c,arguments))}}))),s({global:!0,wrap:!0,forced:W},{Promise:O}),h(O,L,!1,!0),m(L),i=u(L),s({target:L,stat:!0,forced:W},{reject:function(n){var e=N(this);return e.reject.call(void 0,n),e.promise}}),s({target:L,stat:!0,forced:l||W},{resolve:function(n){return _(l&&this===i?O:this,n)}}),s({target:L,stat:!0,forced:J},{all:function(n){var e=this,t=N(e),r=t.resolve,o=t.reject,i=j((function(){var t=v(e.resolve),i=[],a=0,s=1;x(n,(function(n){var l=a++,c=!1;i.push(void 0),s++,t.call(e,n).then((function(n){c||(c=!0,i[l]=n,--s||r(i))}),o)})),--s||r(i)}));return i.error&&o(i.value),t.promise},race:function(n){var e=this,t=N(e),r=t.reject,o=j((function(){var o=v(e.resolve);x(n,(function(n){o.call(e,n).then(t.resolve,r)}))}));return o.error&&r(o.value),t.promise}})},function(n,e,t){var r=t(3);n.exports=r.Promise},function(n,e,t){var r=t(2),o=t(39),i=r("iterator"),a=Array.prototype;n.exports=function(n){return void 0!==n&&(o.Array===n||a[i]===n)}},function(n,e,t){var r=t(122),o=t(39),i=t(2)("iterator");n.exports=function(n){if(null!=n)return n[i]||n["@@iterator"]||o[r(n)]}},function(n,e,t){var r=t(80),o=t(18),i=t(2)("toStringTag"),a="Arguments"==o(function(){return arguments}());n.exports=r?o:function(n){var e,t,r;return void 0===n?"Undefined":null===n?"Null":"string"==typeof(t=function(n,e){try{return n[e]}catch(n){}}(e=Object(n),i))?t:a?o(e):"Object"==(r=o(e))&&"function"==typeof e.callee?"Arguments":r}},function(n,e,t){var r=t(6);n.exports=function(n,e,t,o){try{return o?e(r(t)[0],t[1]):e(t)}catch(e){var i=n.return;throw void 0!==i&&r(i.call(n)),e}}},function(n,e,t){var r=t(2)("iterator"),o=!1;try{var i=0,a={next:function(){return{done:!!i++}},return:function(){o=!0}};a[r]=function(){return this},Array.from(a,(function(){throw 2}))}catch(n){}n.exports=function(n,e){if(!e&&!o)return!1;var t=!1;try{var i={};i[r]=function(){return{next:function(){return{done:t=!0}}}},n(i)}catch(n){}return t}},function(n,e,t){var r,o,i,a=t(3),s=t(1),l=t(18),c=t(46),u=t(111),p=t(72),d=t(126),f=a.location,h=a.setImmediate,m=a.clearImmediate,g=a.process,v=a.MessageChannel,b=a.Dispatch,y=0,E={},x=function(n){if(E.hasOwnProperty(n)){var e=E[n];delete E[n],e()}},C=function(n){return function(){x(n)}},$=function(n){x(n.data)},w=function(n){a.postMessage(n+"",f.protocol+"//"+f.host)};h&&m||(h=function(n){for(var e=[],t=1;arguments.length>t;)e.push(arguments[t++]);return E[++y]=function(){("function"==typeof n?n:Function(n)).apply(void 0,e)},r(y),y},m=function(n){delete E[n]},"process"==l(g)?r=function(n){g.nextTick(C(n))}:b&&b.now?r=function(n){b.now(C(n))}:v&&!d?(i=(o=new v).port2,o.port1.onmessage=$,r=c(i.postMessage,i,1)):!a.addEventListener||"function"!=typeof postMessage||a.importScripts||s(w)||"file:"===f.protocol?r="onreadystatechange"in p("script")?function(n){u.appendChild(p("script")).onreadystatechange=function(){u.removeChild(this),x(n)}}:function(n){setTimeout(C(n),0)}:(r=w,a.addEventListener("message",$,!1))),n.exports={set:h,clear:m}},function(n,e,t){var r=t(127);n.exports=/(iphone|ipod|ipad).*applewebkit/i.test(r)},function(n,e,t){var r=t(19);n.exports=r("navigator","userAgent")||""},function(n,e,t){var r=t(6),o=t(4),i=t(129);n.exports=function(n,e){if(r(n),o(e)&&e.constructor===n)return e;var t=i.f(n);return(0,t.resolve)(e),t.promise}},function(n,e,t){"use strict";var r=t(21),o=function(n){var e,t;this.promise=new n((function(n,r){if(void 0!==e||void 0!==t)throw TypeError("Bad Promise constructor");e=n,t=r})),this.resolve=r(e),this.reject=r(t)};n.exports.f=function(n){return new o(n)}},function(n,e,t){var r=t(45),o=t(23),i=function(n){return function(e,t){var i,a,s=String(o(e)),l=r(t),c=s.length;return l<0||l>=c?n?"":void 0:(i=s.charCodeAt(l))<55296||i>56319||l+1===c||(a=s.charCodeAt(l+1))<56320||a>57343?n?s.charAt(l):i:n?s.slice(l,l+2):a-56320+(i-55296<<10)+65536}};n.exports={codeAt:i(!1),charAt:i(!0)}},function(n,e){n.exports={CSSRuleList:0,CSSStyleDeclaration:0,CSSValueList:0,ClientRectList:0,DOMRectList:0,DOMStringList:0,DOMTokenList:1,DataTransferItemList:0,FileList:0,HTMLAllCollection:0,HTMLCollection:0,HTMLFormElement:0,HTMLSelectElement:0,MediaList:0,MimeTypeArray:0,NamedNodeMap:0,NodeList:1,PaintRequestList:0,Plugin:0,PluginArray:0,SVGLengthList:0,SVGNumberList:0,SVGPathSegList:0,SVGPointList:0,SVGStringList:0,SVGTransformList:0,SourceBufferList:0,StyleSheetList:0,TextTrackCueList:0,TextTrackList:0,TouchList:0}},function(n,e,t){"use strict";var r=t(28).forEach,o=t(29),i=t(17),a=o("forEach"),s=i("forEach");n.exports=a&&s?[].forEach:function(n){return r(this,n,arguments.length>1?arguments[1]:void 0)}},function(n,e,t){var r=t(1);n.exports=!r((function(){return Object.isExtensible(Object.preventExtensions({}))}))},function(n,e,t){var r=t(0),o=t(1),i=t(11),a=t(79),s=t(117);r({target:"Object",stat:!0,forced:o((function(){a(1)})),sham:!s},{getPrototypeOf:function(n){return a(i(n))}})},function(n,e,t){var r=t(170);n.exports=function(n){if(r(n))throw TypeError("The method doesn't accept regular expressions");return n}},function(n,e,t){var r=t(2)("match");n.exports=function(n){var e=/./;try{"/./"[n](e)}catch(t){try{return e[r]=!1,"/./"[n](e)}catch(n){}}return!1}},function(n,e,t){t(0)({target:"Object",stat:!0,sham:!t(5)},{create:t(37)})},function(n,e,t){var r=t(2);e.f=r},function(n,e,t){var r=t(112),o=t(7),i=t(138),a=t(8).f;n.exports=function(n){var e=r.Symbol||(r.Symbol={});o(e,n)||a(e,n,{value:i.f(n)})}},function(n,e,t){var r=t(0),o=t(202);r({target:"Array",stat:!0,forced:!t(124)((function(n){Array.from(n)}))},{from:o})},function(n,e,t){var r=t(10),o=Date.prototype,i=o.toString,a=o.getTime;new Date(NaN)+""!="Invalid Date"&&r(o,"toString",(function(){var n=a.call(this);return n==n?i.call(this):"Invalid Date"}))},function(n,e){n.exports=function(n,e){for(var t=-1,r=e.length,o=n.length;++t<r;)n[o+t]=e[t];return n}},function(n,e){var t="object"==typeof global&&global&&global.Object===Object&&global;n.exports=t},function(n,e,t){var r=t(58),o=t(216),i=t(217),a=t(218),s=t(219),l=t(220);function c(n){var e=this.__data__=new r(n);this.size=e.size}c.prototype.clear=o,c.prototype.delete=i,c.prototype.get=a,c.prototype.has=s,c.prototype.set=l,n.exports=c},function(n,e){n.exports=function(n,e){return n===e||n!=n&&e!=e}},function(n,e,t){var r=t(33),o=t(86);n.exports=function(n){if(!o(n))return!1;var e=r(n);return"[object Function]"==e||"[object GeneratorFunction]"==e||"[object AsyncFunction]"==e||"[object Proxy]"==e}},function(n,e){var t=Function.prototype.toString;n.exports=function(n){if(null!=n){try{return t.call(n)}catch(n){}try{return n+""}catch(n){}}return""}},function(n,e,t){var r=t(237),o=t(26);n.exports=function n(e,t,i,a,s){return e===t||(null==e||null==t||!o(e)&&!o(t)?e!=e&&t!=t:r(e,t,i,a,n,s))}},function(n,e,t){var r=t(150),o=t(240),i=t(151);n.exports=function(n,e,t,a,s,l){var c=1&t,u=n.length,p=e.length;if(u!=p&&!(c&&p>u))return!1;var d=l.get(n);if(d&&l.get(e))return d==e;var f=-1,h=!0,m=2&t?new r:void 0;for(l.set(n,e),l.set(e,n);++f<u;){var g=n[f],v=e[f];if(a)var b=c?a(v,g,f,e,n,l):a(g,v,f,n,e,l);if(void 0!==b){if(b)continue;h=!1;break}if(m){if(!o(e,(function(n,e){if(!i(m,e)&&(g===n||s(g,n,t,a,l)))return m.push(e)}))){h=!1;break}}else if(g!==v&&!s(g,v,t,a,l)){h=!1;break}}return l.delete(n),l.delete(e),h}},function(n,e,t){var r=t(87),o=t(238),i=t(239);function a(n){var e=-1,t=null==n?0:n.length;for(this.__data__=new r;++e<t;)this.add(n[e])}a.prototype.add=a.prototype.push=o,a.prototype.has=i,n.exports=a},function(n,e){n.exports=function(n,e){return n.has(e)}},function(n,e,t){var r=t(250),o=t(256),i=t(156);n.exports=function(n){return i(n)?r(n):o(n)}},function(n,e,t){(function(n){var r=t(16),o=t(252),i=e&&!e.nodeType&&e,a=i&&"object"==typeof n&&n&&!n.nodeType&&n,s=a&&a.exports===i?r.Buffer:void 0,l=(s?s.isBuffer:void 0)||o;n.exports=l}).call(this,t(105)(n))},function(n,e){var t=/^(?:0|[1-9]\d*)$/;n.exports=function(n,e){var r=typeof n;return!!(e=null==e?9007199254740991:e)&&("number"==r||"symbol"!=r&&t.test(n))&&n>-1&&n%1==0&&n<e}},function(n,e,t){var r=t(253),o=t(254),i=t(255),a=i&&i.isTypedArray,s=a?o(a):r;n.exports=s},function(n,e,t){var r=t(146),o=t(89);n.exports=function(n){return null!=n&&o(n.length)&&!r(n)}},function(n,e,t){var r=t(22)(t(16),"Set");n.exports=r},function(n,e,t){var r=t(86);n.exports=function(n){return n==n&&!r(n)}},function(n,e){n.exports=function(n,e){return function(t){return null!=t&&(t[n]===e&&(void 0!==e||n in Object(t)))}}},function(n,e,t){var r=t(161),o=t(62);n.exports=function(n,e){for(var t=0,i=(e=r(e,n)).length;null!=n&&t<i;)n=n[o(e[t++])];return t&&t==i?n:void 0}},function(n,e,t){var r=t(15),o=t(90),i=t(267),a=t(270);n.exports=function(n,e){return r(n)?n:o(n,e)?[n]:i(a(n))}},function(n,e,t){t(0)({target:"Object",stat:!0},{setPrototypeOf:t(100)})},function(n,e,t){var r=t(0),o=t(19),i=t(21),a=t(6),s=t(4),l=t(37),c=t(299),u=t(1),p=o("Reflect","construct"),d=u((function(){function n(){}return!(p((function(){}),[],n)instanceof n)})),f=!u((function(){p((function(){}))})),h=d||f;r({target:"Reflect",stat:!0,forced:h,sham:h},{construct:function(n,e){i(n),a(e);var t=arguments.length<3?n:i(arguments[2]);if(f&&!d)return p(n,e,t);if(n==t){switch(e.length){case 0:return new n;case 1:return new n(e[0]);case 2:return new n(e[0],e[1]);case 3:return new n(e[0],e[1],e[2]);case 4:return new n(e[0],e[1],e[2],e[3])}var r=[null];return r.push.apply(r,e),new(c.apply(n,r))}var o=t.prototype,u=l(s(o)?o:Object.prototype),h=Function.apply.call(n,u,e);return s(h)?h:u}})},function(n,e,t){var r=t(203),o=t(208),i=t(279),a=t(287),s=t(296),l=t(181),c=i((function(n){var e=l(n);return s(e)&&(e=void 0),a(r(n,1,s,!0),o(e,2))}));n.exports=c},function(n,e){var t=/^\s+|\s+$/g,r=/^[-+]0x[0-9a-f]+$/i,o=/^0b[01]+$/i,i=/^0o[0-7]+$/i,a=parseInt,s="object"==typeof global&&global&&global.Object===Object&&global,l="object"==typeof self&&self&&self.Object===Object&&self,c=s||l||Function("return this")(),u=Object.prototype.toString,p=Math.max,d=Math.min,f=function(){return c.Date.now()};function h(n){var e=typeof n;return!!n&&("object"==e||"function"==e)}function m(n){if("number"==typeof n)return n;if(function(n){return"symbol"==typeof n||function(n){return!!n&&"object"==typeof n}(n)&&"[object Symbol]"==u.call(n)}(n))return NaN;if(h(n)){var e="function"==typeof n.valueOf?n.valueOf():n;n=h(e)?e+"":e}if("string"!=typeof n)return 0===n?n:+n;n=n.replace(t,"");var s=o.test(n);return s||i.test(n)?a(n.slice(2),s?2:8):r.test(n)?NaN:+n}n.exports=function(n,e,t){var r,o,i,a,s,l,c=0,u=!1,g=!1,v=!0;if("function"!=typeof n)throw new TypeError("Expected a function");function b(e){var t=r,i=o;return r=o=void 0,c=e,a=n.apply(i,t)}function y(n){return c=n,s=setTimeout(x,e),u?b(n):a}function E(n){var t=n-l;return void 0===l||t>=e||t<0||g&&n-c>=i}function x(){var n=f();if(E(n))return C(n);s=setTimeout(x,function(n){var t=e-(n-l);return g?d(t,i-(n-c)):t}(n))}function C(n){return s=void 0,v&&r?b(n):(r=o=void 0,a)}function $(){var n=f(),t=E(n);if(r=arguments,o=this,l=n,t){if(void 0===s)return y(l);if(g)return s=setTimeout(x,e),b(l)}return void 0===s&&(s=setTimeout(x,e)),a}return e=m(e)||0,h(t)&&(u=!!t.leading,i=(g="maxWait"in t)?p(m(t.maxWait)||0,e):i,v="trailing"in t?!!t.trailing:v),$.cancel=function(){void 0!==s&&clearTimeout(s),c=0,r=l=o=s=void 0},$.flush=function(){return void 0===s?a:C(f())},$}},function(n,e,t){"use strict";var r=t(0),o=t(28).some,i=t(29),a=t(17),s=i("some"),l=a("some");r({target:"Array",proto:!0,forced:!s||!l},{some:function(n){return o(this,n,arguments.length>1?arguments[1]:void 0)}})},function(n,e,t){"use strict";t(44);var r=t(10),o=t(1),i=t(2),a=t(69),s=t(12),l=i("species"),c=!o((function(){var n=/./;return n.exec=function(){var n=[];return n.groups={a:"7"},n},"7"!=="".replace(n,"$<a>")})),u="$0"==="a".replace(/./,"$0"),p=i("replace"),d=!!/./[p]&&""===/./[p]("a","$0"),f=!o((function(){var n=/(?:)/,e=n.exec;n.exec=function(){return e.apply(this,arguments)};var t="ab".split(n);return 2!==t.length||"a"!==t[0]||"b"!==t[1]}));n.exports=function(n,e,t,p){var h=i(n),m=!o((function(){var e={};return e[h]=function(){return 7},7!=""[n](e)})),g=m&&!o((function(){var e=!1,t=/a/;return"split"===n&&((t={}).constructor={},t.constructor[l]=function(){return t},t.flags="",t[h]=/./[h]),t.exec=function(){return e=!0,null},t[h](""),!e}));if(!m||!g||"replace"===n&&(!c||!u||d)||"split"===n&&!f){var v=/./[h],b=t(h,""[n],(function(n,e,t,r,o){return e.exec===a?m&&!o?{done:!0,value:v.call(e,t,r)}:{done:!0,value:n.call(t,e,r)}:{done:!1}}),{REPLACE_KEEPS_$0:u,REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE:d}),y=b[0],E=b[1];r(String.prototype,n,y),r(RegExp.prototype,h,2==e?function(n,e){return E.call(n,this,e)}:function(n){return E.call(n,this)})}p&&s(RegExp.prototype[h],"sham",!0)}},function(n,e,t){var r=t(18),o=t(69);n.exports=function(n,e){var t=n.exec;if("function"==typeof t){var i=t.call(n,e);if("object"!=typeof i)throw TypeError("RegExp exec method returned something other than an Object or null");return i}if("RegExp"!==r(n))throw TypeError("RegExp#exec called on incompatible receiver");return o.call(n,e)}},function(n,e,t){"use strict";var r=t(0),o=t(74).indexOf,i=t(29),a=t(17),s=[].indexOf,l=!!s&&1/[1].indexOf(1,-0)<0,c=i("indexOf"),u=a("indexOf",{ACCESSORS:!0,1:0});r({target:"Array",proto:!0,forced:l||!c||!u},{indexOf:function(n){return l?s.apply(this,arguments)||0:o(this,n,arguments.length>1?arguments[1]:void 0)}})},function(n,e,t){var r=t(4),o=t(18),i=t(2)("match");n.exports=function(n){var e;return r(n)&&(void 0!==(e=n[i])?!!e:"RegExp"==o(n))}},function(n,e,t){"use strict";var r=t(130).charAt;n.exports=function(n,e,t){return e+(t?r(n,e).length:1)}},function(n,e,t){"use strict";var r=t(0),o=t(1),i=t(31),a=t(4),s=t(11),l=t(13),c=t(55),u=t(102),p=t(54),d=t(2),f=t(81),h=d("isConcatSpreadable"),m=f>=51||!o((function(){var n=[];return n[h]=!1,n.concat()[0]!==n})),g=p("concat"),v=function(n){if(!a(n))return!1;var e=n[h];return void 0!==e?!!e:i(n)};r({target:"Array",proto:!0,forced:!m||!g},{concat:function(n){var e,t,r,o,i,a=s(this),p=u(a,0),d=0;for(e=-1,r=arguments.length;e<r;e++)if(v(i=-1===e?a:arguments[e])){if(d+(o=l(i.length))>9007199254740991)throw TypeError("Maximum allowed index exceeded");for(t=0;t<o;t++,d++)t in i&&c(p,d,i[t])}else{if(d>=9007199254740991)throw TypeError("Maximum allowed index exceeded");c(p,d++,i)}return p.length=d,p}})},function(n,e,t){"use strict";var r=t(0),o=t(35),i=t(14),a=t(29),s=[].join,l=o!=Object,c=a("join",",");r({target:"Array",proto:!0,forced:l||!c},{join:function(n){return s.call(i(this),void 0===n?",":n)}})},function(n,e,t){var r=t(0),o=t(5);r({target:"Object",stat:!0,forced:!o,sham:!o},{defineProperty:t(8).f})},function(n,e,t){var r=t(5),o=t(8),i=t(6),a=t(51);n.exports=r?Object.defineProperties:function(n,e){i(n);for(var t,r=a(e),s=r.length,l=0;s>l;)o.f(n,t=r[l++],e[t]);return n}},function(n,e,t){"use strict";var r=t(19),o=t(8),i=t(2),a=t(5),s=i("species");n.exports=function(n){var e=r(n),t=o.f;a&&e&&!e[s]&&t(e,s,{configurable:!0,get:function(){return this}})}},function(n,e,t){var r=t(0),o=t(5),i=t(115),a=t(14),s=t(25),l=t(55);r({target:"Object",stat:!0,sham:!o},{getOwnPropertyDescriptors:function(n){for(var e,t,r=a(n),o=s.f,c=i(r),u={},p=0;c.length>p;)void 0!==(t=o(r,e=c[p++]))&&l(u,e,t);return u}})},function(n,e,t){"use strict";var r=t(0),o=t(74).includes,i=t(94);r({target:"Array",proto:!0,forced:!t(17)("indexOf",{ACCESSORS:!0,1:0})},{includes:function(n){return o(this,n,arguments.length>1?arguments[1]:void 0)}}),i("includes")},function(n,e,t){"use strict";var r=t(1);function o(n,e){return RegExp(n,e)}e.UNSUPPORTED_Y=r((function(){var n=o("a","y");return n.lastIndex=2,null!=n.exec("abcd")})),e.BROKEN_CARET=r((function(){var n=o("^r","gy");return n.lastIndex=2,null!=n.exec("str")}))},function(n,e,t){"use strict";var r=t(0),o=t(135),i=t(23);r({target:"String",proto:!0,forced:!t(136)("includes")},{includes:function(n){return!!~String(i(this)).indexOf(o(n),arguments.length>1?arguments[1]:void 0)}})},function(n,e){n.exports=function(n){var e=null==n?0:n.length;return e?n[e-1]:void 0}},function(n,e,t){n.exports=t(301)},function(n,e,t){var r=t(3),o=t(76),i=r.WeakMap;n.exports="function"==typeof i&&/native code/.test(o(i))},function(n,e,t){"use strict";var r=t(116).IteratorPrototype,o=t(37),i=t(36),a=t(53),s=t(39),l=function(){return this};n.exports=function(n,e,t){var c=e+" Iterator";return n.prototype=o(r,{next:i(1,t)}),a(n,c,!1,!0),s[c]=l,n}},function(n,e,t){var r=t(4);n.exports=function(n){if(!r(n)&&null!==n)throw TypeError("Can't set "+String(n)+" as a prototype");return n}},function(n,e,t){var r=t(10);n.exports=function(n,e,t){for(var o in e)r(n,o,e[o],t);return n}},function(n,e){n.exports=function(n,e,t){if(!(n instanceof e))throw TypeError("Incorrect "+(t?t+" ":"")+"invocation");return n}},function(n,e,t){var r=t(6),o=t(120),i=t(13),a=t(46),s=t(121),l=t(123),c=function(n,e){this.stopped=n,this.result=e};(n.exports=function(n,e,t,u,p){var d,f,h,m,g,v,b,y=a(e,t,u?2:1);if(p)d=n;else{if("function"!=typeof(f=s(n)))throw TypeError("Target is not iterable");if(o(f)){for(h=0,m=i(n.length);m>h;h++)if((g=u?y(r(b=n[h])[0],b[1]):y(n[h]))&&g instanceof c)return g;return new c(!1)}d=f.call(n)}for(v=d.next;!(b=v.call(d)).done;)if("object"==typeof(g=l(d,y,b.value,u))&&g&&g instanceof c)return g;return new c(!1)}).stop=function(n){return new c(!0,n)}},function(n,e,t){var r,o,i,a,s,l,c,u,p=t(3),d=t(25).f,f=t(18),h=t(125).set,m=t(126),g=p.MutationObserver||p.WebKitMutationObserver,v=p.process,b=p.Promise,y="process"==f(v),E=d(p,"queueMicrotask"),x=E&&E.value;x||(r=function(){var n,e;for(y&&(n=v.domain)&&n.exit();o;){e=o.fn,o=o.next;try{e()}catch(n){throw o?a():i=void 0,n}}i=void 0,n&&n.enter()},y?a=function(){v.nextTick(r)}:g&&!m?(s=!0,l=document.createTextNode(""),new g(r).observe(l,{characterData:!0}),a=function(){l.data=s=!s}):b&&b.resolve?(c=b.resolve(void 0),u=c.then,a=function(){u.call(c,r)}):a=function(){h.call(p,r)}),n.exports=x||function(n){var e={fn:n,next:void 0};i&&(i.next=e),o||(o=e,a()),i=e}},function(n,e,t){var r=t(3);n.exports=function(n,e){var t=r.console;t&&t.error&&(1===arguments.length?t.error(n):t.error(n,e))}},function(n,e){n.exports=function(n){try{return{error:!1,value:n()}}catch(n){return{error:!0,value:n}}}},function(n,e,t){var r=t(0),o=t(193);r({target:"Object",stat:!0,forced:Object.assign!==o},{assign:o})},function(n,e,t){"use strict";var r=t(5),o=t(1),i=t(51),a=t(78),s=t(77),l=t(11),c=t(35),u=Object.assign,p=Object.defineProperty;n.exports=!u||o((function(){if(r&&1!==u({b:1},u(p({},"a",{enumerable:!0,get:function(){p(this,"b",{value:3,enumerable:!1})}}),{b:2})).b)return!0;var n={},e={},t=Symbol();return n[t]=7,"abcdefghijklmnopqrst".split("").forEach((function(n){e[n]=n})),7!=u({},n)[t]||"abcdefghijklmnopqrst"!=i(u({},e)).join("")}))?function(n,e){for(var t=l(n),o=arguments.length,u=1,p=a.f,d=s.f;o>u;)for(var f,h=c(arguments[u++]),m=p?i(h).concat(p(h)):i(h),g=m.length,v=0;g>v;)f=m[v++],r&&!d.call(h,f)||(t[f]=h[f]);return t}:u},function(n,e,t){"use strict";var r=t(0),o=t(20),i=t(119),a=t(1),s=t(19),l=t(101),c=t(128),u=t(10);r({target:"Promise",proto:!0,real:!0,forced:!!i&&a((function(){i.prototype.finally.call({then:function(){}},(function(){}))}))},{finally:function(n){var e=l(this,s("Promise")),t="function"==typeof n;return this.then(t?function(t){return c(e,n()).then((function(){return t}))}:n,t?function(t){return c(e,n()).then((function(){throw t}))}:n)}}),o||"function"!=typeof i||i.prototype.finally||u(i.prototype,"finally",s("Promise").prototype.finally)},function(n,e,t){"use strict";var r=t(80),o=t(122);n.exports=r?{}.toString:function(){return"[object "+o(this)+"]"}},function(n,e,t){"use strict";var r=t(0),o=t(197).left,i=t(29),a=t(17),s=i("reduce"),l=a("reduce",{1:0});r({target:"Array",proto:!0,forced:!s||!l},{reduce:function(n){return o(this,n,arguments.length,arguments.length>1?arguments[1]:void 0)}})},function(n,e,t){var r=t(21),o=t(11),i=t(35),a=t(13),s=function(n){return function(e,t,s,l){r(t);var c=o(e),u=i(c),p=a(c.length),d=n?p-1:0,f=n?-1:1;if(s<2)for(;;){if(d in u){l=u[d],d+=f;break}if(d+=f,n?d<0:p<=d)throw TypeError("Reduce of empty array with no initial value")}for(;n?d>=0:p>d;d+=f)d in u&&(l=t(l,u[d],d,c));return l}};n.exports={left:s(!1),right:s(!0)}},function(n,e,t){var r=t(0),o=t(133),i=t(1),a=t(4),s=t(199).onFreeze,l=Object.freeze;r({target:"Object",stat:!0,forced:i((function(){l(1)})),sham:!o},{freeze:function(n){return l&&a(n)?l(s(n)):n}})},function(n,e,t){var r=t(38),o=t(4),i=t(7),a=t(8).f,s=t(50),l=t(133),c=s("meta"),u=0,p=Object.isExtensible||function(){return!0},d=function(n){a(n,c,{value:{objectID:"O"+ ++u,weakData:{}}})},f=n.exports={REQUIRED:!1,fastKey:function(n,e){if(!o(n))return"symbol"==typeof n?n:("string"==typeof n?"S":"P")+n;if(!i(n,c)){if(!p(n))return"F";if(!e)return"E";d(n)}return n[c].objectID},getWeakData:function(n,e){if(!i(n,c)){if(!p(n))return!0;if(!e)return!1;d(n)}return n[c].weakData},onFreeze:function(n){return l&&f.REQUIRED&&p(n)&&!i(n,c)&&d(n),n}};r[c]=!0},function(n,e,t){"use strict";var r,o=t(0),i=t(25).f,a=t(13),s=t(135),l=t(23),c=t(136),u=t(20),p="".startsWith,d=Math.min,f=c("startsWith");o({target:"String",proto:!0,forced:!!(u||f||(r=i(String.prototype,"startsWith"),!r||r.writable))&&!f},{startsWith:function(n){var e=String(l(this));s(n);var t=a(d(arguments.length>1?arguments[1]:void 0,e.length)),r=String(n);return p?p.call(e,r,t):e.slice(t,t+r.length)===r}})},function(n,e,t){var r=t(14),o=t(68).f,i={}.toString,a="object"==typeof window&&window&&Object.getOwnPropertyNames?Object.getOwnPropertyNames(window):[];n.exports.f=function(n){return a&&"[object Window]"==i.call(n)?function(n){try{return o(n)}catch(n){return a.slice()}}(n):o(r(n))}},function(n,e,t){"use strict";var r=t(46),o=t(11),i=t(123),a=t(120),s=t(13),l=t(55),c=t(121);n.exports=function(n){var e,t,u,p,d,f,h=o(n),m="function"==typeof this?this:Array,g=arguments.length,v=g>1?arguments[1]:void 0,b=void 0!==v,y=c(h),E=0;if(b&&(v=r(v,g>2?arguments[2]:void 0,2)),null==y||m==Array&&a(y))for(t=new m(e=s(h.length));e>E;E++)f=b?v(h[E],E):h[E],l(t,E,f);else for(d=(p=y.call(h)).next,t=new m;!(u=d.call(p)).done;E++)f=b?i(p,v,[u.value,E],!0):u.value,l(t,E,f);return t.length=E,t}},function(n,e,t){var r=t(142),o=t(204);n.exports=function n(e,t,i,a,s){var l=-1,c=e.length;for(i||(i=o),s||(s=[]);++l<c;){var u=e[l];t>0&&i(u)?t>1?n(u,t-1,i,a,s):r(s,u):a||(s[s.length]=u)}return s}},function(n,e,t){var r=t(40),o=t(84),i=t(15),a=r?r.isConcatSpreadable:void 0;n.exports=function(n){return i(n)||o(n)||!!(a&&n&&n[a])}},function(n,e,t){var r=t(33),o=t(26);n.exports=function(n){return o(n)&&"[object Arguments]"==r(n)}},function(n,e,t){var r=t(40),o=Object.prototype,i=o.hasOwnProperty,a=o.toString,s=r?r.toStringTag:void 0;n.exports=function(n){var e=i.call(n,s),t=n[s];try{n[s]=void 0;var r=!0}catch(n){}var o=a.call(n);return r&&(e?n[s]=t:delete n[s]),o}},function(n,e){var t=Object.prototype.toString;n.exports=function(n){return t.call(n)}},function(n,e,t){var r=t(209),o=t(265),i=t(92),a=t(15),s=t(276);n.exports=function(n){return"function"==typeof n?n:null==n?i:"object"==typeof n?a(n)?o(n[0],n[1]):r(n):s(n)}},function(n,e,t){var r=t(210),o=t(264),i=t(159);n.exports=function(n){var e=o(n);return 1==e.length&&e[0][2]?i(e[0][0],e[0][1]):function(t){return t===n||r(t,n,e)}}},function(n,e,t){var r=t(144),o=t(148);n.exports=function(n,e,t,i){var a=t.length,s=a,l=!i;if(null==n)return!s;for(n=Object(n);a--;){var c=t[a];if(l&&c[2]?c[1]!==n[c[0]]:!(c[0]in n))return!1}for(;++a<s;){var u=(c=t[a])[0],p=n[u],d=c[1];if(l&&c[2]){if(void 0===p&&!(u in n))return!1}else{var f=new r;if(i)var h=i(p,d,u,n,e,f);if(!(void 0===h?o(d,p,3,i,f):h))return!1}}return!0}},function(n,e){n.exports=function(){this.__data__=[],this.size=0}},function(n,e,t){var r=t(59),o=Array.prototype.splice;n.exports=function(n){var e=this.__data__,t=r(e,n);return!(t<0)&&(t==e.length-1?e.pop():o.call(e,t,1),--this.size,!0)}},function(n,e,t){var r=t(59);n.exports=function(n){var e=this.__data__,t=r(e,n);return t<0?void 0:e[t][1]}},function(n,e,t){var r=t(59);n.exports=function(n){return r(this.__data__,n)>-1}},function(n,e,t){var r=t(59);n.exports=function(n,e){var t=this.__data__,o=r(t,n);return o<0?(++this.size,t.push([n,e])):t[o][1]=e,this}},function(n,e,t){var r=t(58);n.exports=function(){this.__data__=new r,this.size=0}},function(n,e){n.exports=function(n){var e=this.__data__,t=e.delete(n);return this.size=e.size,t}},function(n,e){n.exports=function(n){return this.__data__.get(n)}},function(n,e){n.exports=function(n){return this.__data__.has(n)}},function(n,e,t){var r=t(58),o=t(85),i=t(87);n.exports=function(n,e){var t=this.__data__;if(t instanceof r){var a=t.__data__;if(!o||a.length<199)return a.push([n,e]),this.size=++t.size,this;t=this.__data__=new i(a)}return t.set(n,e),this.size=t.size,this}},function(n,e,t){var r=t(146),o=t(222),i=t(86),a=t(147),s=/^\[object .+?Constructor\]$/,l=Function.prototype,c=Object.prototype,u=l.toString,p=c.hasOwnProperty,d=RegExp("^"+u.call(p).replace(/[\\^$.*+?()[\]{}|]/g,"\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g,"$1.*?")+"$");n.exports=function(n){return!(!i(n)||o(n))&&(r(n)?d:s).test(a(n))}},function(n,e,t){var r,o=t(223),i=(r=/[^.]+$/.exec(o&&o.keys&&o.keys.IE_PROTO||""))?"Symbol(src)_1."+r:"";n.exports=function(n){return!!i&&i in n}},function(n,e,t){var r=t(16)["__core-js_shared__"];n.exports=r},function(n,e){n.exports=function(n,e){return null==n?void 0:n[e]}},function(n,e,t){var r=t(226),o=t(58),i=t(85);n.exports=function(){this.size=0,this.__data__={hash:new r,map:new(i||o),string:new r}}},function(n,e,t){var r=t(227),o=t(228),i=t(229),a=t(230),s=t(231);function l(n){var e=-1,t=null==n?0:n.length;for(this.clear();++e<t;){var r=n[e];this.set(r[0],r[1])}}l.prototype.clear=r,l.prototype.delete=o,l.prototype.get=i,l.prototype.has=a,l.prototype.set=s,n.exports=l},function(n,e,t){var r=t(60);n.exports=function(){this.__data__=r?r(null):{},this.size=0}},function(n,e){n.exports=function(n){var e=this.has(n)&&delete this.__data__[n];return this.size-=e?1:0,e}},function(n,e,t){var r=t(60),o=Object.prototype.hasOwnProperty;n.exports=function(n){var e=this.__data__;if(r){var t=e[n];return"__lodash_hash_undefined__"===t?void 0:t}return o.call(e,n)?e[n]:void 0}},function(n,e,t){var r=t(60),o=Object.prototype.hasOwnProperty;n.exports=function(n){var e=this.__data__;return r?void 0!==e[n]:o.call(e,n)}},function(n,e,t){var r=t(60);n.exports=function(n,e){var t=this.__data__;return this.size+=this.has(n)?0:1,t[n]=r&&void 0===e?"__lodash_hash_undefined__":e,this}},function(n,e,t){var r=t(61);n.exports=function(n){var e=r(this,n).delete(n);return this.size-=e?1:0,e}},function(n,e){n.exports=function(n){var e=typeof n;return"string"==e||"number"==e||"symbol"==e||"boolean"==e?"__proto__"!==n:null===n}},function(n,e,t){var r=t(61);n.exports=function(n){return r(this,n).get(n)}},function(n,e,t){var r=t(61);n.exports=function(n){return r(this,n).has(n)}},function(n,e,t){var r=t(61);n.exports=function(n,e){var t=r(this,n),o=t.size;return t.set(n,e),this.size+=t.size==o?0:1,this}},function(n,e,t){var r=t(144),o=t(149),i=t(241),a=t(244),s=t(260),l=t(15),c=t(153),u=t(155),p="[object Object]",d=Object.prototype.hasOwnProperty;n.exports=function(n,e,t,f,h,m){var g=l(n),v=l(e),b=g?"[object Array]":s(n),y=v?"[object Array]":s(e),E=(b="[object Arguments]"==b?p:b)==p,x=(y="[object Arguments]"==y?p:y)==p,C=b==y;if(C&&c(n)){if(!c(e))return!1;g=!0,E=!1}if(C&&!E)return m||(m=new r),g||u(n)?o(n,e,t,f,h,m):i(n,e,b,t,f,h,m);if(!(1&t)){var $=E&&d.call(n,"__wrapped__"),w=x&&d.call(e,"__wrapped__");if($||w){var A=$?n.value():n,_=w?e.value():e;return m||(m=new r),h(A,_,t,f,m)}}return!!C&&(m||(m=new r),a(n,e,t,f,h,m))}},function(n,e){n.exports=function(n){return this.__data__.set(n,"__lodash_hash_undefined__"),this}},function(n,e){n.exports=function(n){return this.__data__.has(n)}},function(n,e){n.exports=function(n,e){for(var t=-1,r=null==n?0:n.length;++t<r;)if(e(n[t],t,n))return!0;return!1}},function(n,e,t){var r=t(40),o=t(242),i=t(145),a=t(149),s=t(243),l=t(88),c=r?r.prototype:void 0,u=c?c.valueOf:void 0;n.exports=function(n,e,t,r,c,p,d){switch(t){case"[object DataView]":if(n.byteLength!=e.byteLength||n.byteOffset!=e.byteOffset)return!1;n=n.buffer,e=e.buffer;case"[object ArrayBuffer]":return!(n.byteLength!=e.byteLength||!p(new o(n),new o(e)));case"[object Boolean]":case"[object Date]":case"[object Number]":return i(+n,+e);case"[object Error]":return n.name==e.name&&n.message==e.message;case"[object RegExp]":case"[object String]":return n==e+"";case"[object Map]":var f=s;case"[object Set]":var h=1&r;if(f||(f=l),n.size!=e.size&&!h)return!1;var m=d.get(n);if(m)return m==e;r|=2,d.set(n,e);var g=a(f(n),f(e),r,c,p,d);return d.delete(n),g;case"[object Symbol]":if(u)return u.call(n)==u.call(e)}return!1}},function(n,e,t){var r=t(16).Uint8Array;n.exports=r},function(n,e){n.exports=function(n){var e=-1,t=Array(n.size);return n.forEach((function(n,r){t[++e]=[r,n]})),t}},function(n,e,t){var r=t(245),o=Object.prototype.hasOwnProperty;n.exports=function(n,e,t,i,a,s){var l=1&t,c=r(n),u=c.length;if(u!=r(e).length&&!l)return!1;for(var p=u;p--;){var d=c[p];if(!(l?d in e:o.call(e,d)))return!1}var f=s.get(n);if(f&&s.get(e))return f==e;var h=!0;s.set(n,e),s.set(e,n);for(var m=l;++p<u;){var g=n[d=c[p]],v=e[d];if(i)var b=l?i(v,g,d,e,n,s):i(g,v,d,n,e,s);if(!(void 0===b?g===v||a(g,v,t,i,s):b)){h=!1;break}m||(m="constructor"==d)}if(h&&!m){var y=n.constructor,E=e.constructor;y==E||!("constructor"in n)||!("constructor"in e)||"function"==typeof y&&y instanceof y&&"function"==typeof E&&E instanceof E||(h=!1)}return s.delete(n),s.delete(e),h}},function(n,e,t){var r=t(246),o=t(247),i=t(152);n.exports=function(n){return r(n,i,o)}},function(n,e,t){var r=t(142),o=t(15);n.exports=function(n,e,t){var i=e(n);return o(n)?i:r(i,t(n))}},function(n,e,t){var r=t(248),o=t(249),i=Object.prototype.propertyIsEnumerable,a=Object.getOwnPropertySymbols,s=a?function(n){return null==n?[]:(n=Object(n),r(a(n),(function(e){return i.call(n,e)})))}:o;n.exports=s},function(n,e){n.exports=function(n,e){for(var t=-1,r=null==n?0:n.length,o=0,i=[];++t<r;){var a=n[t];e(a,t,n)&&(i[o++]=a)}return i}},function(n,e){n.exports=function(){return[]}},function(n,e,t){var r=t(251),o=t(84),i=t(15),a=t(153),s=t(154),l=t(155),c=Object.prototype.hasOwnProperty;n.exports=function(n,e){var t=i(n),u=!t&&o(n),p=!t&&!u&&a(n),d=!t&&!u&&!p&&l(n),f=t||u||p||d,h=f?r(n.length,String):[],m=h.length;for(var g in n)!e&&!c.call(n,g)||f&&("length"==g||p&&("offset"==g||"parent"==g)||d&&("buffer"==g||"byteLength"==g||"byteOffset"==g)||s(g,m))||h.push(g);return h}},function(n,e){n.exports=function(n,e){for(var t=-1,r=Array(n);++t<n;)r[t]=e(t);return r}},function(n,e){n.exports=function(){return!1}},function(n,e,t){var r=t(33),o=t(89),i=t(26),a={};a["[object Float32Array]"]=a["[object Float64Array]"]=a["[object Int8Array]"]=a["[object Int16Array]"]=a["[object Int32Array]"]=a["[object Uint8Array]"]=a["[object Uint8ClampedArray]"]=a["[object Uint16Array]"]=a["[object Uint32Array]"]=!0,a["[object Arguments]"]=a["[object Array]"]=a["[object ArrayBuffer]"]=a["[object Boolean]"]=a["[object DataView]"]=a["[object Date]"]=a["[object Error]"]=a["[object Function]"]=a["[object Map]"]=a["[object Number]"]=a["[object Object]"]=a["[object RegExp]"]=a["[object Set]"]=a["[object String]"]=a["[object WeakMap]"]=!1,n.exports=function(n){return i(n)&&o(n.length)&&!!a[r(n)]}},function(n,e){n.exports=function(n){return function(e){return n(e)}}},function(n,e,t){(function(n){var r=t(143),o=e&&!e.nodeType&&e,i=o&&"object"==typeof n&&n&&!n.nodeType&&n,a=i&&i.exports===o&&r.process,s=function(){try{var n=i&&i.require&&i.require("util").types;return n||a&&a.binding&&a.binding("util")}catch(n){}}();n.exports=s}).call(this,t(105)(n))},function(n,e,t){var r=t(257),o=t(258),i=Object.prototype.hasOwnProperty;n.exports=function(n){if(!r(n))return o(n);var e=[];for(var t in Object(n))i.call(n,t)&&"constructor"!=t&&e.push(t);return e}},function(n,e){var t=Object.prototype;n.exports=function(n){var e=n&&n.constructor;return n===("function"==typeof e&&e.prototype||t)}},function(n,e,t){var r=t(259)(Object.keys,Object);n.exports=r},function(n,e){n.exports=function(n,e){return function(t){return n(e(t))}}},function(n,e,t){var r=t(261),o=t(85),i=t(262),a=t(157),s=t(263),l=t(33),c=t(147),u=c(r),p=c(o),d=c(i),f=c(a),h=c(s),m=l;(r&&"[object DataView]"!=m(new r(new ArrayBuffer(1)))||o&&"[object Map]"!=m(new o)||i&&"[object Promise]"!=m(i.resolve())||a&&"[object Set]"!=m(new a)||s&&"[object WeakMap]"!=m(new s))&&(m=function(n){var e=l(n),t="[object Object]"==e?n.constructor:void 0,r=t?c(t):"";if(r)switch(r){case u:return"[object DataView]";case p:return"[object Map]";case d:return"[object Promise]";case f:return"[object Set]";case h:return"[object WeakMap]"}return e}),n.exports=m},function(n,e,t){var r=t(22)(t(16),"DataView");n.exports=r},function(n,e,t){var r=t(22)(t(16),"Promise");n.exports=r},function(n,e,t){var r=t(22)(t(16),"WeakMap");n.exports=r},function(n,e,t){var r=t(158),o=t(152);n.exports=function(n){for(var e=o(n),t=e.length;t--;){var i=e[t],a=n[i];e[t]=[i,a,r(a)]}return e}},function(n,e,t){var r=t(148),o=t(266),i=t(273),a=t(90),s=t(158),l=t(159),c=t(62);n.exports=function(n,e){return a(n)&&s(e)?l(c(n),e):function(t){var a=o(t,n);return void 0===a&&a===e?i(t,n):r(e,a,3)}}},function(n,e,t){var r=t(160);n.exports=function(n,e,t){var o=null==n?void 0:r(n,e);return void 0===o?t:o}},function(n,e,t){var r=t(268),o=/[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g,i=/\\(\\)?/g,a=r((function(n){var e=[];return 46===n.charCodeAt(0)&&e.push(""),n.replace(o,(function(n,t,r,o){e.push(r?o.replace(i,"$1"):t||n)})),e}));n.exports=a},function(n,e,t){var r=t(269);n.exports=function(n){var e=r(n,(function(n){return 500===t.size&&t.clear(),n})),t=e.cache;return e}},function(n,e,t){var r=t(87);function o(n,e){if("function"!=typeof n||null!=e&&"function"!=typeof e)throw new TypeError("Expected a function");var t=function(){var r=arguments,o=e?e.apply(this,r):r[0],i=t.cache;if(i.has(o))return i.get(o);var a=n.apply(this,r);return t.cache=i.set(o,a)||i,a};return t.cache=new(o.Cache||r),t}o.Cache=r,n.exports=o},function(n,e,t){var r=t(271);n.exports=function(n){return null==n?"":r(n)}},function(n,e,t){var r=t(40),o=t(272),i=t(15),a=t(91),s=r?r.prototype:void 0,l=s?s.toString:void 0;n.exports=function n(e){if("string"==typeof e)return e;if(i(e))return o(e,n)+"";if(a(e))return l?l.call(e):"";var t=e+"";return"0"==t&&1/e==-1/0?"-0":t}},function(n,e){n.exports=function(n,e){for(var t=-1,r=null==n?0:n.length,o=Array(r);++t<r;)o[t]=e(n[t],t,n);return o}},function(n,e,t){var r=t(274),o=t(275);n.exports=function(n,e){return null!=n&&o(n,e,r)}},function(n,e){n.exports=function(n,e){return null!=n&&e in Object(n)}},function(n,e,t){var r=t(161),o=t(84),i=t(15),a=t(154),s=t(89),l=t(62);n.exports=function(n,e,t){for(var c=-1,u=(e=r(e,n)).length,p=!1;++c<u;){var d=l(e[c]);if(!(p=null!=n&&t(n,d)))break;n=n[d]}return p||++c!=u?p:!!(u=null==n?0:n.length)&&s(u)&&a(d,u)&&(i(n)||o(n))}},function(n,e,t){var r=t(277),o=t(278),i=t(90),a=t(62);n.exports=function(n){return i(n)?r(a(n)):o(n)}},function(n,e){n.exports=function(n){return function(e){return null==e?void 0:e[n]}}},function(n,e,t){var r=t(160);n.exports=function(n){return function(e){return r(e,n)}}},function(n,e,t){var r=t(92),o=t(280),i=t(282);n.exports=function(n,e){return i(o(n,e,r),n+"")}},function(n,e,t){var r=t(281),o=Math.max;n.exports=function(n,e,t){return e=o(void 0===e?n.length-1:e,0),function(){for(var i=arguments,a=-1,s=o(i.length-e,0),l=Array(s);++a<s;)l[a]=i[e+a];a=-1;for(var c=Array(e+1);++a<e;)c[a]=i[a];return c[e]=t(l),r(n,this,c)}}},function(n,e){n.exports=function(n,e,t){switch(t.length){case 0:return n.call(e);case 1:return n.call(e,t[0]);case 2:return n.call(e,t[0],t[1]);case 3:return n.call(e,t[0],t[1],t[2])}return n.apply(e,t)}},function(n,e,t){var r=t(283),o=t(286)(r);n.exports=o},function(n,e,t){var r=t(284),o=t(285),i=t(92),a=o?function(n,e){return o(n,"toString",{configurable:!0,enumerable:!1,value:r(e),writable:!0})}:i;n.exports=a},function(n,e){n.exports=function(n){return function(){return n}}},function(n,e,t){var r=t(22),o=function(){try{var n=r(Object,"defineProperty");return n({},"",{}),n}catch(n){}}();n.exports=o},function(n,e){var t=Date.now;n.exports=function(n){var e=0,r=0;return function(){var o=t(),i=16-(o-r);if(r=o,i>0){if(++e>=800)return arguments[0]}else e=0;return n.apply(void 0,arguments)}}},function(n,e,t){var r=t(150),o=t(288),i=t(293),a=t(151),s=t(294),l=t(88);n.exports=function(n,e,t){var c=-1,u=o,p=n.length,d=!0,f=[],h=f;if(t)d=!1,u=i;else if(p>=200){var m=e?null:s(n);if(m)return l(m);d=!1,u=a,h=new r}else h=e?[]:f;n:for(;++c<p;){var g=n[c],v=e?e(g):g;if(g=t||0!==g?g:0,d&&v==v){for(var b=h.length;b--;)if(h[b]===v)continue n;e&&h.push(v),f.push(g)}else u(h,v,t)||(h!==f&&h.push(v),f.push(g))}return f}},function(n,e,t){var r=t(289);n.exports=function(n,e){return!!(null==n?0:n.length)&&r(n,e,0)>-1}},function(n,e,t){var r=t(290),o=t(291),i=t(292);n.exports=function(n,e,t){return e==e?i(n,e,t):r(n,o,t)}},function(n,e){n.exports=function(n,e,t,r){for(var o=n.length,i=t+(r?1:-1);r?i--:++i<o;)if(e(n[i],i,n))return i;return-1}},function(n,e){n.exports=function(n){return n!=n}},function(n,e){n.exports=function(n,e,t){for(var r=t-1,o=n.length;++r<o;)if(n[r]===e)return r;return-1}},function(n,e){n.exports=function(n,e,t){for(var r=-1,o=null==n?0:n.length;++r<o;)if(t(e,n[r]))return!0;return!1}},function(n,e,t){var r=t(157),o=t(295),i=t(88),a=r&&1/i(new r([,-0]))[1]==1/0?function(n){return new r(n)}:o;n.exports=a},function(n,e){n.exports=function(){}},function(n,e,t){var r=t(156),o=t(26);n.exports=function(n){return o(n)&&r(n)}},function(n,e,t){},function(n,e,t){},function(n,e,t){"use strict";var r=t(21),o=t(4),i=[].slice,a={},s=function(n,e,t){if(!(e in a)){for(var r=[],o=0;o<e;o++)r[o]="a["+o+"]";a[e]=Function("C,a","return new C("+r.join(",")+")")}return a[e](n,t)};n.exports=Function.bind||function(n){var e=r(this),t=i.call(arguments,1),a=function(){var r=t.concat(i.call(arguments));return this instanceof a?s(e,r.length,r):e.apply(n,r)};return o(e.prototype)&&(a.prototype=e.prototype),a}},function(n,e,t){"use strict";var r=t(63);t.n(r).a},function(n,e,t){"use strict";t.r(e);t(34),t(118),t(192),t(194),t(24),t(66),t(47),t(9),t(27),t(32),t(95);var r=t(56),o=Object.freeze({});function i(n){return null==n}function a(n){return null!=n}function s(n){return!0===n}function l(n){return"string"==typeof n||"number"==typeof n||"symbol"==typeof n||"boolean"==typeof n}function c(n){return null!==n&&"object"==typeof n}var u=Object.prototype.toString;function p(n){return"[object Object]"===u.call(n)}function d(n){return"[object RegExp]"===u.call(n)}function f(n){var e=parseFloat(String(n));return e>=0&&Math.floor(e)===e&&isFinite(n)}function h(n){return a(n)&&"function"==typeof n.then&&"function"==typeof n.catch}function m(n){return null==n?"":Array.isArray(n)||p(n)&&n.toString===u?JSON.stringify(n,null,2):String(n)}function g(n){var e=parseFloat(n);return isNaN(e)?n:e}function v(n,e){for(var t=Object.create(null),r=n.split(","),o=0;o<r.length;o++)t[r[o]]=!0;return e?function(n){return t[n.toLowerCase()]}:function(n){return t[n]}}v("slot,component",!0);var b=v("key,ref,slot,slot-scope,is");function y(n,e){if(n.length){var t=n.indexOf(e);if(t>-1)return n.splice(t,1)}}var E=Object.prototype.hasOwnProperty;function x(n,e){return E.call(n,e)}function C(n){var e=Object.create(null);return function(t){return e[t]||(e[t]=n(t))}}var $=/-(\w)/g,w=C((function(n){return n.replace($,(function(n,e){return e?e.toUpperCase():""}))})),A=C((function(n){return n.charAt(0).toUpperCase()+n.slice(1)})),_=/\B([A-Z])/g,B=C((function(n){return n.replace(_,"-$1").toLowerCase()}));var k=Function.prototype.bind?function(n,e){return n.bind(e)}:function(n,e){function t(t){var r=arguments.length;return r?r>1?n.apply(e,arguments):n.call(e,t):n.call(e)}return t._length=n.length,t};function j(n,e){e=e||0;for(var t=n.length-e,r=new Array(t);t--;)r[t]=n[t+e];return r}function I(n,e){for(var t in e)n[t]=e[t];return n}function S(n){for(var e={},t=0;t<n.length;t++)n[t]&&I(e,n[t]);return e}function P(n,e,t){}var D=function(n,e,t){return!1},X=function(n){return n};function L(n,e){if(n===e)return!0;var t=c(n),r=c(e);if(!t||!r)return!t&&!r&&String(n)===String(e);try{var o=Array.isArray(n),i=Array.isArray(e);if(o&&i)return n.length===e.length&&n.every((function(n,t){return L(n,e[t])}));if(n instanceof Date&&e instanceof Date)return n.getTime()===e.getTime();if(o||i)return!1;var a=Object.keys(n),s=Object.keys(e);return a.length===s.length&&a.every((function(t){return L(n[t],e[t])}))}catch(n){return!1}}function T(n,e){for(var t=0;t<n.length;t++)if(L(n[t],e))return t;return-1}function R(n){var e=!1;return function(){e||(e=!0,n.apply(this,arguments))}}var q=["component","directive","filter"],O=["beforeCreate","created","beforeMount","mounted","beforeUpdate","updated","beforeDestroy","destroyed","activated","deactivated","errorCaptured","serverPrefetch"],U={optionMergeStrategies:Object.create(null),silent:!1,productionTip:!1,devtools:!1,performance:!1,errorHandler:null,warnHandler:null,ignoredElements:[],keyCodes:Object.create(null),isReservedTag:D,isReservedAttr:D,isUnknownElement:D,getTagNamespace:P,parsePlatformTagName:X,mustUseProp:D,async:!0,_lifecycleHooks:O},M=/a-zA-Z\u00B7\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u037D\u037F-\u1FFF\u200C-\u200D\u203F-\u2040\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD/;function F(n,e,t,r){Object.defineProperty(n,e,{value:t,enumerable:!!r,writable:!0,configurable:!0})}var H=new RegExp("[^"+M.source+".$_\\d]");var N,G="__proto__"in{},z="undefined"!=typeof window,V="undefined"!=typeof WXEnvironment&&!!WXEnvironment.platform,W=V&&WXEnvironment.platform.toLowerCase(),J=z&&window.navigator.userAgent.toLowerCase(),Y=J&&/msie|trident/.test(J),K=J&&J.indexOf("msie 9.0")>0,Q=J&&J.indexOf("edge/")>0,Z=(J&&J.indexOf("android"),J&&/iphone|ipad|ipod|ios/.test(J)||"ios"===W),nn=(J&&/chrome\/\d+/.test(J),J&&/phantomjs/.test(J),J&&J.match(/firefox\/(\d+)/)),en={}.watch,tn=!1;if(z)try{var rn={};Object.defineProperty(rn,"passive",{get:function(){tn=!0}}),window.addEventListener("test-passive",null,rn)}catch(n){}var on=function(){return void 0===N&&(N=!z&&!V&&"undefined"!=typeof global&&(global.process&&"server"===global.process.env.VUE_ENV)),N},an=z&&window.__VUE_DEVTOOLS_GLOBAL_HOOK__;function sn(n){return"function"==typeof n&&/native code/.test(n.toString())}var ln,cn="undefined"!=typeof Symbol&&sn(Symbol)&&"undefined"!=typeof Reflect&&sn(Reflect.ownKeys);ln="undefined"!=typeof Set&&sn(Set)?Set:function(){function n(){this.set=Object.create(null)}return n.prototype.has=function(n){return!0===this.set[n]},n.prototype.add=function(n){this.set[n]=!0},n.prototype.clear=function(){this.set=Object.create(null)},n}();var un=P,pn=0,dn=function(){this.id=pn++,this.subs=[]};dn.prototype.addSub=function(n){this.subs.push(n)},dn.prototype.removeSub=function(n){y(this.subs,n)},dn.prototype.depend=function(){dn.target&&dn.target.addDep(this)},dn.prototype.notify=function(){var n=this.subs.slice();for(var e=0,t=n.length;e<t;e++)n[e].update()},dn.target=null;var fn=[];function hn(n){fn.push(n),dn.target=n}function mn(){fn.pop(),dn.target=fn[fn.length-1]}var gn=function(n,e,t,r,o,i,a,s){this.tag=n,this.data=e,this.children=t,this.text=r,this.elm=o,this.ns=void 0,this.context=i,this.fnContext=void 0,this.fnOptions=void 0,this.fnScopeId=void 0,this.key=e&&e.key,this.componentOptions=a,this.componentInstance=void 0,this.parent=void 0,this.raw=!1,this.isStatic=!1,this.isRootInsert=!0,this.isComment=!1,this.isCloned=!1,this.isOnce=!1,this.asyncFactory=s,this.asyncMeta=void 0,this.isAsyncPlaceholder=!1},vn={child:{configurable:!0}};vn.child.get=function(){return this.componentInstance},Object.defineProperties(gn.prototype,vn);var bn=function(n){void 0===n&&(n="");var e=new gn;return e.text=n,e.isComment=!0,e};function yn(n){return new gn(void 0,void 0,void 0,String(n))}function En(n){var e=new gn(n.tag,n.data,n.children&&n.children.slice(),n.text,n.elm,n.context,n.componentOptions,n.asyncFactory);return e.ns=n.ns,e.isStatic=n.isStatic,e.key=n.key,e.isComment=n.isComment,e.fnContext=n.fnContext,e.fnOptions=n.fnOptions,e.fnScopeId=n.fnScopeId,e.asyncMeta=n.asyncMeta,e.isCloned=!0,e}var xn=Array.prototype,Cn=Object.create(xn);["push","pop","shift","unshift","splice","sort","reverse"].forEach((function(n){var e=xn[n];F(Cn,n,(function(){for(var t=[],r=arguments.length;r--;)t[r]=arguments[r];var o,i=e.apply(this,t),a=this.__ob__;switch(n){case"push":case"unshift":o=t;break;case"splice":o=t.slice(2)}return o&&a.observeArray(o),a.dep.notify(),i}))}));var $n=Object.getOwnPropertyNames(Cn),wn=!0;function An(n){wn=n}var _n=function(n){this.value=n,this.dep=new dn,this.vmCount=0,F(n,"__ob__",this),Array.isArray(n)?(G?function(n,e){n.__proto__=e}(n,Cn):function(n,e,t){for(var r=0,o=t.length;r<o;r++){var i=t[r];F(n,i,e[i])}}(n,Cn,$n),this.observeArray(n)):this.walk(n)};function Bn(n,e){var t;if(c(n)&&!(n instanceof gn))return x(n,"__ob__")&&n.__ob__ instanceof _n?t=n.__ob__:wn&&!on()&&(Array.isArray(n)||p(n))&&Object.isExtensible(n)&&!n._isVue&&(t=new _n(n)),e&&t&&t.vmCount++,t}function kn(n,e,t,r,o){var i=new dn,a=Object.getOwnPropertyDescriptor(n,e);if(!a||!1!==a.configurable){var s=a&&a.get,l=a&&a.set;s&&!l||2!==arguments.length||(t=n[e]);var c=!o&&Bn(t);Object.defineProperty(n,e,{enumerable:!0,configurable:!0,get:function(){var e=s?s.call(n):t;return dn.target&&(i.depend(),c&&(c.dep.depend(),Array.isArray(e)&&Sn(e))),e},set:function(e){var r=s?s.call(n):t;e===r||e!=e&&r!=r||s&&!l||(l?l.call(n,e):t=e,c=!o&&Bn(e),i.notify())}})}}function jn(n,e,t){if(Array.isArray(n)&&f(e))return n.length=Math.max(n.length,e),n.splice(e,1,t),t;if(e in n&&!(e in Object.prototype))return n[e]=t,t;var r=n.__ob__;return n._isVue||r&&r.vmCount?t:r?(kn(r.value,e,t),r.dep.notify(),t):(n[e]=t,t)}function In(n,e){if(Array.isArray(n)&&f(e))n.splice(e,1);else{var t=n.__ob__;n._isVue||t&&t.vmCount||x(n,e)&&(delete n[e],t&&t.dep.notify())}}function Sn(n){for(var e=void 0,t=0,r=n.length;t<r;t++)(e=n[t])&&e.__ob__&&e.__ob__.dep.depend(),Array.isArray(e)&&Sn(e)}_n.prototype.walk=function(n){for(var e=Object.keys(n),t=0;t<e.length;t++)kn(n,e[t])},_n.prototype.observeArray=function(n){for(var e=0,t=n.length;e<t;e++)Bn(n[e])};var Pn=U.optionMergeStrategies;function Dn(n,e){if(!e)return n;for(var t,r,o,i=cn?Reflect.ownKeys(e):Object.keys(e),a=0;a<i.length;a++)"__ob__"!==(t=i[a])&&(r=n[t],o=e[t],x(n,t)?r!==o&&p(r)&&p(o)&&Dn(r,o):jn(n,t,o));return n}function Xn(n,e,t){return t?function(){var r="function"==typeof e?e.call(t,t):e,o="function"==typeof n?n.call(t,t):n;return r?Dn(r,o):o}:e?n?function(){return Dn("function"==typeof e?e.call(this,this):e,"function"==typeof n?n.call(this,this):n)}:e:n}function Ln(n,e){var t=e?n?n.concat(e):Array.isArray(e)?e:[e]:n;return t?function(n){for(var e=[],t=0;t<n.length;t++)-1===e.indexOf(n[t])&&e.push(n[t]);return e}(t):t}function Tn(n,e,t,r){var o=Object.create(n||null);return e?I(o,e):o}Pn.data=function(n,e,t){return t?Xn(n,e,t):e&&"function"!=typeof e?n:Xn(n,e)},O.forEach((function(n){Pn[n]=Ln})),q.forEach((function(n){Pn[n+"s"]=Tn})),Pn.watch=function(n,e,t,r){if(n===en&&(n=void 0),e===en&&(e=void 0),!e)return Object.create(n||null);if(!n)return e;var o={};for(var i in I(o,n),e){var a=o[i],s=e[i];a&&!Array.isArray(a)&&(a=[a]),o[i]=a?a.concat(s):Array.isArray(s)?s:[s]}return o},Pn.props=Pn.methods=Pn.inject=Pn.computed=function(n,e,t,r){if(!n)return e;var o=Object.create(null);return I(o,n),e&&I(o,e),o},Pn.provide=Xn;var Rn=function(n,e){return void 0===e?n:e};function qn(n,e,t){if("function"==typeof e&&(e=e.options),function(n,e){var t=n.props;if(t){var r,o,i={};if(Array.isArray(t))for(r=t.length;r--;)"string"==typeof(o=t[r])&&(i[w(o)]={type:null});else if(p(t))for(var a in t)o=t[a],i[w(a)]=p(o)?o:{type:o};else 0;n.props=i}}(e),function(n,e){var t=n.inject;if(t){var r=n.inject={};if(Array.isArray(t))for(var o=0;o<t.length;o++)r[t[o]]={from:t[o]};else if(p(t))for(var i in t){var a=t[i];r[i]=p(a)?I({from:i},a):{from:a}}else 0}}(e),function(n){var e=n.directives;if(e)for(var t in e){var r=e[t];"function"==typeof r&&(e[t]={bind:r,update:r})}}(e),!e._base&&(e.extends&&(n=qn(n,e.extends,t)),e.mixins))for(var r=0,o=e.mixins.length;r<o;r++)n=qn(n,e.mixins[r],t);var i,a={};for(i in n)s(i);for(i in e)x(n,i)||s(i);function s(r){var o=Pn[r]||Rn;a[r]=o(n[r],e[r],t,r)}return a}function On(n,e,t,r){if("string"==typeof t){var o=n[e];if(x(o,t))return o[t];var i=w(t);if(x(o,i))return o[i];var a=A(i);return x(o,a)?o[a]:o[t]||o[i]||o[a]}}function Un(n,e,t,r){var o=e[n],i=!x(t,n),a=t[n],s=Hn(Boolean,o.type);if(s>-1)if(i&&!x(o,"default"))a=!1;else if(""===a||a===B(n)){var l=Hn(String,o.type);(l<0||s<l)&&(a=!0)}if(void 0===a){a=function(n,e,t){if(!x(e,"default"))return;var r=e.default;0;if(n&&n.$options.propsData&&void 0===n.$options.propsData[t]&&void 0!==n._props[t])return n._props[t];return"function"==typeof r&&"Function"!==Mn(e.type)?r.call(n):r}(r,o,n);var c=wn;An(!0),Bn(a),An(c)}return a}function Mn(n){var e=n&&n.toString().match(/^\s*function (\w+)/);return e?e[1]:""}function Fn(n,e){return Mn(n)===Mn(e)}function Hn(n,e){if(!Array.isArray(e))return Fn(e,n)?0:-1;for(var t=0,r=e.length;t<r;t++)if(Fn(e[t],n))return t;return-1}function Nn(n,e,t){hn();try{if(e)for(var r=e;r=r.$parent;){var o=r.$options.errorCaptured;if(o)for(var i=0;i<o.length;i++)try{if(!1===o[i].call(r,n,e,t))return}catch(n){zn(n,r,"errorCaptured hook")}}zn(n,e,t)}finally{mn()}}function Gn(n,e,t,r,o){var i;try{(i=t?n.apply(e,t):n.call(e))&&!i._isVue&&h(i)&&!i._handled&&(i.catch((function(n){return Nn(n,r,o+" (Promise/async)")})),i._handled=!0)}catch(n){Nn(n,r,o)}return i}function zn(n,e,t){if(U.errorHandler)try{return U.errorHandler.call(null,n,e,t)}catch(e){e!==n&&Vn(e,null,"config.errorHandler")}Vn(n,e,t)}function Vn(n,e,t){if(!z&&!V||"undefined"==typeof console)throw n;console.error(n)}var Wn,Jn=!1,Yn=[],Kn=!1;function Qn(){Kn=!1;var n=Yn.slice(0);Yn.length=0;for(var e=0;e<n.length;e++)n[e]()}if("undefined"!=typeof Promise&&sn(Promise)){var Zn=Promise.resolve();Wn=function(){Zn.then(Qn),Z&&setTimeout(P)},Jn=!0}else if(Y||"undefined"==typeof MutationObserver||!sn(MutationObserver)&&"[object MutationObserverConstructor]"!==MutationObserver.toString())Wn="undefined"!=typeof setImmediate&&sn(setImmediate)?function(){setImmediate(Qn)}:function(){setTimeout(Qn,0)};else{var ne=1,ee=new MutationObserver(Qn),te=document.createTextNode(String(ne));ee.observe(te,{characterData:!0}),Wn=function(){ne=(ne+1)%2,te.data=String(ne)},Jn=!0}function re(n,e){var t;if(Yn.push((function(){if(n)try{n.call(e)}catch(n){Nn(n,e,"nextTick")}else t&&t(e)})),Kn||(Kn=!0,Wn()),!n&&"undefined"!=typeof Promise)return new Promise((function(n){t=n}))}var oe=new ln;function ie(n){!function n(e,t){var r,o,i=Array.isArray(e);if(!i&&!c(e)||Object.isFrozen(e)||e instanceof gn)return;if(e.__ob__){var a=e.__ob__.dep.id;if(t.has(a))return;t.add(a)}if(i)for(r=e.length;r--;)n(e[r],t);else for(o=Object.keys(e),r=o.length;r--;)n(e[o[r]],t)}(n,oe),oe.clear()}var ae=C((function(n){var e="&"===n.charAt(0),t="~"===(n=e?n.slice(1):n).charAt(0),r="!"===(n=t?n.slice(1):n).charAt(0);return{name:n=r?n.slice(1):n,once:t,capture:r,passive:e}}));function se(n,e){function t(){var n=arguments,r=t.fns;if(!Array.isArray(r))return Gn(r,null,arguments,e,"v-on handler");for(var o=r.slice(),i=0;i<o.length;i++)Gn(o[i],null,n,e,"v-on handler")}return t.fns=n,t}function le(n,e,t,r,o,a){var l,c,u,p;for(l in n)c=n[l],u=e[l],p=ae(l),i(c)||(i(u)?(i(c.fns)&&(c=n[l]=se(c,a)),s(p.once)&&(c=n[l]=o(p.name,c,p.capture)),t(p.name,c,p.capture,p.passive,p.params)):c!==u&&(u.fns=c,n[l]=u));for(l in e)i(n[l])&&r((p=ae(l)).name,e[l],p.capture)}function ce(n,e,t){var r;n instanceof gn&&(n=n.data.hook||(n.data.hook={}));var o=n[e];function l(){t.apply(this,arguments),y(r.fns,l)}i(o)?r=se([l]):a(o.fns)&&s(o.merged)?(r=o).fns.push(l):r=se([o,l]),r.merged=!0,n[e]=r}function ue(n,e,t,r,o){if(a(e)){if(x(e,t))return n[t]=e[t],o||delete e[t],!0;if(x(e,r))return n[t]=e[r],o||delete e[r],!0}return!1}function pe(n){return l(n)?[yn(n)]:Array.isArray(n)?function n(e,t){var r,o,c,u,p=[];for(r=0;r<e.length;r++)i(o=e[r])||"boolean"==typeof o||(c=p.length-1,u=p[c],Array.isArray(o)?o.length>0&&(de((o=n(o,(t||"")+"_"+r))[0])&&de(u)&&(p[c]=yn(u.text+o[0].text),o.shift()),p.push.apply(p,o)):l(o)?de(u)?p[c]=yn(u.text+o):""!==o&&p.push(yn(o)):de(o)&&de(u)?p[c]=yn(u.text+o.text):(s(e._isVList)&&a(o.tag)&&i(o.key)&&a(t)&&(o.key="__vlist"+t+"_"+r+"__"),p.push(o)));return p}(n):void 0}function de(n){return a(n)&&a(n.text)&&!1===n.isComment}function fe(n,e){if(n){for(var t=Object.create(null),r=cn?Reflect.ownKeys(n):Object.keys(n),o=0;o<r.length;o++){var i=r[o];if("__ob__"!==i){for(var a=n[i].from,s=e;s;){if(s._provided&&x(s._provided,a)){t[i]=s._provided[a];break}s=s.$parent}if(!s)if("default"in n[i]){var l=n[i].default;t[i]="function"==typeof l?l.call(e):l}else 0}}return t}}function he(n,e){if(!n||!n.length)return{};for(var t={},r=0,o=n.length;r<o;r++){var i=n[r],a=i.data;if(a&&a.attrs&&a.attrs.slot&&delete a.attrs.slot,i.context!==e&&i.fnContext!==e||!a||null==a.slot)(t.default||(t.default=[])).push(i);else{var s=a.slot,l=t[s]||(t[s]=[]);"template"===i.tag?l.push.apply(l,i.children||[]):l.push(i)}}for(var c in t)t[c].every(me)&&delete t[c];return t}function me(n){return n.isComment&&!n.asyncFactory||" "===n.text}function ge(n,e,t){var r,i=Object.keys(e).length>0,a=n?!!n.$stable:!i,s=n&&n.$key;if(n){if(n._normalized)return n._normalized;if(a&&t&&t!==o&&s===t.$key&&!i&&!t.$hasNormal)return t;for(var l in r={},n)n[l]&&"$"!==l[0]&&(r[l]=ve(e,l,n[l]))}else r={};for(var c in e)c in r||(r[c]=be(e,c));return n&&Object.isExtensible(n)&&(n._normalized=r),F(r,"$stable",a),F(r,"$key",s),F(r,"$hasNormal",i),r}function ve(n,e,t){var r=function(){var n=arguments.length?t.apply(null,arguments):t({});return(n=n&&"object"==typeof n&&!Array.isArray(n)?[n]:pe(n))&&(0===n.length||1===n.length&&n[0].isComment)?void 0:n};return t.proxy&&Object.defineProperty(n,e,{get:r,enumerable:!0,configurable:!0}),r}function be(n,e){return function(){return n[e]}}function ye(n,e){var t,r,o,i,s;if(Array.isArray(n)||"string"==typeof n)for(t=new Array(n.length),r=0,o=n.length;r<o;r++)t[r]=e(n[r],r);else if("number"==typeof n)for(t=new Array(n),r=0;r<n;r++)t[r]=e(r+1,r);else if(c(n))if(cn&&n[Symbol.iterator]){t=[];for(var l=n[Symbol.iterator](),u=l.next();!u.done;)t.push(e(u.value,t.length)),u=l.next()}else for(i=Object.keys(n),t=new Array(i.length),r=0,o=i.length;r<o;r++)s=i[r],t[r]=e(n[s],s,r);return a(t)||(t=[]),t._isVList=!0,t}function Ee(n,e,t,r){var o,i=this.$scopedSlots[n];i?(t=t||{},r&&(t=I(I({},r),t)),o=i(t)||e):o=this.$slots[n]||e;var a=t&&t.slot;return a?this.$createElement("template",{slot:a},o):o}function xe(n){return On(this.$options,"filters",n)||X}function Ce(n,e){return Array.isArray(n)?-1===n.indexOf(e):n!==e}function $e(n,e,t,r,o){var i=U.keyCodes[e]||t;return o&&r&&!U.keyCodes[e]?Ce(o,r):i?Ce(i,n):r?B(r)!==e:void 0}function we(n,e,t,r,o){if(t)if(c(t)){var i;Array.isArray(t)&&(t=S(t));var a=function(a){if("class"===a||"style"===a||b(a))i=n;else{var s=n.attrs&&n.attrs.type;i=r||U.mustUseProp(e,s,a)?n.domProps||(n.domProps={}):n.attrs||(n.attrs={})}var l=w(a),c=B(a);l in i||c in i||(i[a]=t[a],o&&((n.on||(n.on={}))["update:"+a]=function(n){t[a]=n}))};for(var s in t)a(s)}else;return n}function Ae(n,e){var t=this._staticTrees||(this._staticTrees=[]),r=t[n];return r&&!e||Be(r=t[n]=this.$options.staticRenderFns[n].call(this._renderProxy,null,this),"__static__"+n,!1),r}function _e(n,e,t){return Be(n,"__once__"+e+(t?"_"+t:""),!0),n}function Be(n,e,t){if(Array.isArray(n))for(var r=0;r<n.length;r++)n[r]&&"string"!=typeof n[r]&&ke(n[r],e+"_"+r,t);else ke(n,e,t)}function ke(n,e,t){n.isStatic=!0,n.key=e,n.isOnce=t}function je(n,e){if(e)if(p(e)){var t=n.on=n.on?I({},n.on):{};for(var r in e){var o=t[r],i=e[r];t[r]=o?[].concat(o,i):i}}else;return n}function Ie(n,e,t,r){e=e||{$stable:!t};for(var o=0;o<n.length;o++){var i=n[o];Array.isArray(i)?Ie(i,e,t):i&&(i.proxy&&(i.fn.proxy=!0),e[i.key]=i.fn)}return r&&(e.$key=r),e}function Se(n,e){for(var t=0;t<e.length;t+=2){var r=e[t];"string"==typeof r&&r&&(n[e[t]]=e[t+1])}return n}function Pe(n,e){return"string"==typeof n?e+n:n}function De(n){n._o=_e,n._n=g,n._s=m,n._l=ye,n._t=Ee,n._q=L,n._i=T,n._m=Ae,n._f=xe,n._k=$e,n._b=we,n._v=yn,n._e=bn,n._u=Ie,n._g=je,n._d=Se,n._p=Pe}function Xe(n,e,t,r,i){var a,l=this,c=i.options;x(r,"_uid")?(a=Object.create(r))._original=r:(a=r,r=r._original);var u=s(c._compiled),p=!u;this.data=n,this.props=e,this.children=t,this.parent=r,this.listeners=n.on||o,this.injections=fe(c.inject,r),this.slots=function(){return l.$slots||ge(n.scopedSlots,l.$slots=he(t,r)),l.$slots},Object.defineProperty(this,"scopedSlots",{enumerable:!0,get:function(){return ge(n.scopedSlots,this.slots())}}),u&&(this.$options=c,this.$slots=this.slots(),this.$scopedSlots=ge(n.scopedSlots,this.$slots)),c._scopeId?this._c=function(n,e,t,o){var i=Me(a,n,e,t,o,p);return i&&!Array.isArray(i)&&(i.fnScopeId=c._scopeId,i.fnContext=r),i}:this._c=function(n,e,t,r){return Me(a,n,e,t,r,p)}}function Le(n,e,t,r,o){var i=En(n);return i.fnContext=t,i.fnOptions=r,e.slot&&((i.data||(i.data={})).slot=e.slot),i}function Te(n,e){for(var t in e)n[w(t)]=e[t]}De(Xe.prototype);var Re={init:function(n,e){if(n.componentInstance&&!n.componentInstance._isDestroyed&&n.data.keepAlive){var t=n;Re.prepatch(t,t)}else{(n.componentInstance=function(n,e){var t={_isComponent:!0,_parentVnode:n,parent:e},r=n.data.inlineTemplate;a(r)&&(t.render=r.render,t.staticRenderFns=r.staticRenderFns);return new n.componentOptions.Ctor(t)}(n,Ke)).$mount(e?n.elm:void 0,e)}},prepatch:function(n,e){var t=e.componentOptions;!function(n,e,t,r,i){0;var a=r.data.scopedSlots,s=n.$scopedSlots,l=!!(a&&!a.$stable||s!==o&&!s.$stable||a&&n.$scopedSlots.$key!==a.$key),c=!!(i||n.$options._renderChildren||l);n.$options._parentVnode=r,n.$vnode=r,n._vnode&&(n._vnode.parent=r);if(n.$options._renderChildren=i,n.$attrs=r.data.attrs||o,n.$listeners=t||o,e&&n.$options.props){An(!1);for(var u=n._props,p=n.$options._propKeys||[],d=0;d<p.length;d++){var f=p[d],h=n.$options.props;u[f]=Un(f,h,e,n)}An(!0),n.$options.propsData=e}t=t||o;var m=n.$options._parentListeners;n.$options._parentListeners=t,Ye(n,t,m),c&&(n.$slots=he(i,r.context),n.$forceUpdate());0}(e.componentInstance=n.componentInstance,t.propsData,t.listeners,e,t.children)},insert:function(n){var e,t=n.context,r=n.componentInstance;r._isMounted||(r._isMounted=!0,et(r,"mounted")),n.data.keepAlive&&(t._isMounted?((e=r)._inactive=!1,rt.push(e)):nt(r,!0))},destroy:function(n){var e=n.componentInstance;e._isDestroyed||(n.data.keepAlive?function n(e,t){if(t&&(e._directInactive=!0,Ze(e)))return;if(!e._inactive){e._inactive=!0;for(var r=0;r<e.$children.length;r++)n(e.$children[r]);et(e,"deactivated")}}(e,!0):e.$destroy())}},qe=Object.keys(Re);function Oe(n,e,t,r,l){if(!i(n)){var u=t.$options._base;if(c(n)&&(n=u.extend(n)),"function"==typeof n){var p;if(i(n.cid)&&void 0===(n=function(n,e){if(s(n.error)&&a(n.errorComp))return n.errorComp;if(a(n.resolved))return n.resolved;var t=He;t&&a(n.owners)&&-1===n.owners.indexOf(t)&&n.owners.push(t);if(s(n.loading)&&a(n.loadingComp))return n.loadingComp;if(t&&!a(n.owners)){var r=n.owners=[t],o=!0,l=null,u=null;t.$on("hook:destroyed",(function(){return y(r,t)}));var p=function(n){for(var e=0,t=r.length;e<t;e++)r[e].$forceUpdate();n&&(r.length=0,null!==l&&(clearTimeout(l),l=null),null!==u&&(clearTimeout(u),u=null))},d=R((function(t){n.resolved=Ne(t,e),o?r.length=0:p(!0)})),f=R((function(e){a(n.errorComp)&&(n.error=!0,p(!0))})),m=n(d,f);return c(m)&&(h(m)?i(n.resolved)&&m.then(d,f):h(m.component)&&(m.component.then(d,f),a(m.error)&&(n.errorComp=Ne(m.error,e)),a(m.loading)&&(n.loadingComp=Ne(m.loading,e),0===m.delay?n.loading=!0:l=setTimeout((function(){l=null,i(n.resolved)&&i(n.error)&&(n.loading=!0,p(!1))}),m.delay||200)),a(m.timeout)&&(u=setTimeout((function(){u=null,i(n.resolved)&&f(null)}),m.timeout)))),o=!1,n.loading?n.loadingComp:n.resolved}}(p=n,u)))return function(n,e,t,r,o){var i=bn();return i.asyncFactory=n,i.asyncMeta={data:e,context:t,children:r,tag:o},i}(p,e,t,r,l);e=e||{},$t(n),a(e.model)&&function(n,e){var t=n.model&&n.model.prop||"value",r=n.model&&n.model.event||"input";(e.attrs||(e.attrs={}))[t]=e.model.value;var o=e.on||(e.on={}),i=o[r],s=e.model.callback;a(i)?(Array.isArray(i)?-1===i.indexOf(s):i!==s)&&(o[r]=[s].concat(i)):o[r]=s}(n.options,e);var d=function(n,e,t){var r=e.options.props;if(!i(r)){var o={},s=n.attrs,l=n.props;if(a(s)||a(l))for(var c in r){var u=B(c);ue(o,l,c,u,!0)||ue(o,s,c,u,!1)}return o}}(e,n);if(s(n.options.functional))return function(n,e,t,r,i){var s=n.options,l={},c=s.props;if(a(c))for(var u in c)l[u]=Un(u,c,e||o);else a(t.attrs)&&Te(l,t.attrs),a(t.props)&&Te(l,t.props);var p=new Xe(t,l,i,r,n),d=s.render.call(null,p._c,p);if(d instanceof gn)return Le(d,t,p.parent,s,p);if(Array.isArray(d)){for(var f=pe(d)||[],h=new Array(f.length),m=0;m<f.length;m++)h[m]=Le(f[m],t,p.parent,s,p);return h}}(n,d,e,t,r);var f=e.on;if(e.on=e.nativeOn,s(n.options.abstract)){var m=e.slot;e={},m&&(e.slot=m)}!function(n){for(var e=n.hook||(n.hook={}),t=0;t<qe.length;t++){var r=qe[t],o=e[r],i=Re[r];o===i||o&&o._merged||(e[r]=o?Ue(i,o):i)}}(e);var g=n.options.name||l;return new gn("vue-component-"+n.cid+(g?"-"+g:""),e,void 0,void 0,void 0,t,{Ctor:n,propsData:d,listeners:f,tag:l,children:r},p)}}}function Ue(n,e){var t=function(t,r){n(t,r),e(t,r)};return t._merged=!0,t}function Me(n,e,t,r,o,u){return(Array.isArray(t)||l(t))&&(o=r,r=t,t=void 0),s(u)&&(o=2),function(n,e,t,r,o){if(a(t)&&a(t.__ob__))return bn();a(t)&&a(t.is)&&(e=t.is);if(!e)return bn();0;Array.isArray(r)&&"function"==typeof r[0]&&((t=t||{}).scopedSlots={default:r[0]},r.length=0);2===o?r=pe(r):1===o&&(r=function(n){for(var e=0;e<n.length;e++)if(Array.isArray(n[e]))return Array.prototype.concat.apply([],n);return n}(r));var l,u;if("string"==typeof e){var p;u=n.$vnode&&n.$vnode.ns||U.getTagNamespace(e),l=U.isReservedTag(e)?new gn(U.parsePlatformTagName(e),t,r,void 0,void 0,n):t&&t.pre||!a(p=On(n.$options,"components",e))?new gn(e,t,r,void 0,void 0,n):Oe(p,t,n,r,e)}else l=Oe(e,t,n,r);return Array.isArray(l)?l:a(l)?(a(u)&&function n(e,t,r){e.ns=t,"foreignObject"===e.tag&&(t=void 0,r=!0);if(a(e.children))for(var o=0,l=e.children.length;o<l;o++){var c=e.children[o];a(c.tag)&&(i(c.ns)||s(r)&&"svg"!==c.tag)&&n(c,t,r)}}(l,u),a(t)&&function(n){c(n.style)&&ie(n.style);c(n.class)&&ie(n.class)}(t),l):bn()}(n,e,t,r,o)}var Fe,He=null;function Ne(n,e){return(n.__esModule||cn&&"Module"===n[Symbol.toStringTag])&&(n=n.default),c(n)?e.extend(n):n}function Ge(n){return n.isComment&&n.asyncFactory}function ze(n){if(Array.isArray(n))for(var e=0;e<n.length;e++){var t=n[e];if(a(t)&&(a(t.componentOptions)||Ge(t)))return t}}function Ve(n,e){Fe.$on(n,e)}function We(n,e){Fe.$off(n,e)}function Je(n,e){var t=Fe;return function r(){var o=e.apply(null,arguments);null!==o&&t.$off(n,r)}}function Ye(n,e,t){Fe=n,le(e,t||{},Ve,We,Je,n),Fe=void 0}var Ke=null;function Qe(n){var e=Ke;return Ke=n,function(){Ke=e}}function Ze(n){for(;n&&(n=n.$parent);)if(n._inactive)return!0;return!1}function nt(n,e){if(e){if(n._directInactive=!1,Ze(n))return}else if(n._directInactive)return;if(n._inactive||null===n._inactive){n._inactive=!1;for(var t=0;t<n.$children.length;t++)nt(n.$children[t]);et(n,"activated")}}function et(n,e){hn();var t=n.$options[e],r=e+" hook";if(t)for(var o=0,i=t.length;o<i;o++)Gn(t[o],n,null,n,r);n._hasHookEvent&&n.$emit("hook:"+e),mn()}var tt=[],rt=[],ot={},it=!1,at=!1,st=0;var lt=0,ct=Date.now;if(z&&!Y){var ut=window.performance;ut&&"function"==typeof ut.now&&ct()>document.createEvent("Event").timeStamp&&(ct=function(){return ut.now()})}function pt(){var n,e;for(lt=ct(),at=!0,tt.sort((function(n,e){return n.id-e.id})),st=0;st<tt.length;st++)(n=tt[st]).before&&n.before(),e=n.id,ot[e]=null,n.run();var t=rt.slice(),r=tt.slice();st=tt.length=rt.length=0,ot={},it=at=!1,function(n){for(var e=0;e<n.length;e++)n[e]._inactive=!0,nt(n[e],!0)}(t),function(n){var e=n.length;for(;e--;){var t=n[e],r=t.vm;r._watcher===t&&r._isMounted&&!r._isDestroyed&&et(r,"updated")}}(r),an&&U.devtools&&an.emit("flush")}var dt=0,ft=function(n,e,t,r,o){this.vm=n,o&&(n._watcher=this),n._watchers.push(this),r?(this.deep=!!r.deep,this.user=!!r.user,this.lazy=!!r.lazy,this.sync=!!r.sync,this.before=r.before):this.deep=this.user=this.lazy=this.sync=!1,this.cb=t,this.id=++dt,this.active=!0,this.dirty=this.lazy,this.deps=[],this.newDeps=[],this.depIds=new ln,this.newDepIds=new ln,this.expression="","function"==typeof e?this.getter=e:(this.getter=function(n){if(!H.test(n)){var e=n.split(".");return function(n){for(var t=0;t<e.length;t++){if(!n)return;n=n[e[t]]}return n}}}(e),this.getter||(this.getter=P)),this.value=this.lazy?void 0:this.get()};ft.prototype.get=function(){var n;hn(this);var e=this.vm;try{n=this.getter.call(e,e)}catch(n){if(!this.user)throw n;Nn(n,e,'getter for watcher "'+this.expression+'"')}finally{this.deep&&ie(n),mn(),this.cleanupDeps()}return n},ft.prototype.addDep=function(n){var e=n.id;this.newDepIds.has(e)||(this.newDepIds.add(e),this.newDeps.push(n),this.depIds.has(e)||n.addSub(this))},ft.prototype.cleanupDeps=function(){for(var n=this.deps.length;n--;){var e=this.deps[n];this.newDepIds.has(e.id)||e.removeSub(this)}var t=this.depIds;this.depIds=this.newDepIds,this.newDepIds=t,this.newDepIds.clear(),t=this.deps,this.deps=this.newDeps,this.newDeps=t,this.newDeps.length=0},ft.prototype.update=function(){this.lazy?this.dirty=!0:this.sync?this.run():function(n){var e=n.id;if(null==ot[e]){if(ot[e]=!0,at){for(var t=tt.length-1;t>st&&tt[t].id>n.id;)t--;tt.splice(t+1,0,n)}else tt.push(n);it||(it=!0,re(pt))}}(this)},ft.prototype.run=function(){if(this.active){var n=this.get();if(n!==this.value||c(n)||this.deep){var e=this.value;if(this.value=n,this.user)try{this.cb.call(this.vm,n,e)}catch(n){Nn(n,this.vm,'callback for watcher "'+this.expression+'"')}else this.cb.call(this.vm,n,e)}}},ft.prototype.evaluate=function(){this.value=this.get(),this.dirty=!1},ft.prototype.depend=function(){for(var n=this.deps.length;n--;)this.deps[n].depend()},ft.prototype.teardown=function(){if(this.active){this.vm._isBeingDestroyed||y(this.vm._watchers,this);for(var n=this.deps.length;n--;)this.deps[n].removeSub(this);this.active=!1}};var ht={enumerable:!0,configurable:!0,get:P,set:P};function mt(n,e,t){ht.get=function(){return this[e][t]},ht.set=function(n){this[e][t]=n},Object.defineProperty(n,t,ht)}function gt(n){n._watchers=[];var e=n.$options;e.props&&function(n,e){var t=n.$options.propsData||{},r=n._props={},o=n.$options._propKeys=[];n.$parent&&An(!1);var i=function(i){o.push(i);var a=Un(i,e,t,n);kn(r,i,a),i in n||mt(n,"_props",i)};for(var a in e)i(a);An(!0)}(n,e.props),e.methods&&function(n,e){n.$options.props;for(var t in e)n[t]="function"!=typeof e[t]?P:k(e[t],n)}(n,e.methods),e.data?function(n){var e=n.$options.data;p(e=n._data="function"==typeof e?function(n,e){hn();try{return n.call(e,e)}catch(n){return Nn(n,e,"data()"),{}}finally{mn()}}(e,n):e||{})||(e={});var t=Object.keys(e),r=n.$options.props,o=(n.$options.methods,t.length);for(;o--;){var i=t[o];0,r&&x(r,i)||(a=void 0,36!==(a=(i+"").charCodeAt(0))&&95!==a&&mt(n,"_data",i))}var a;Bn(e,!0)}(n):Bn(n._data={},!0),e.computed&&function(n,e){var t=n._computedWatchers=Object.create(null),r=on();for(var o in e){var i=e[o],a="function"==typeof i?i:i.get;0,r||(t[o]=new ft(n,a||P,P,vt)),o in n||bt(n,o,i)}}(n,e.computed),e.watch&&e.watch!==en&&function(n,e){for(var t in e){var r=e[t];if(Array.isArray(r))for(var o=0;o<r.length;o++)xt(n,t,r[o]);else xt(n,t,r)}}(n,e.watch)}var vt={lazy:!0};function bt(n,e,t){var r=!on();"function"==typeof t?(ht.get=r?yt(e):Et(t),ht.set=P):(ht.get=t.get?r&&!1!==t.cache?yt(e):Et(t.get):P,ht.set=t.set||P),Object.defineProperty(n,e,ht)}function yt(n){return function(){var e=this._computedWatchers&&this._computedWatchers[n];if(e)return e.dirty&&e.evaluate(),dn.target&&e.depend(),e.value}}function Et(n){return function(){return n.call(this,this)}}function xt(n,e,t,r){return p(t)&&(r=t,t=t.handler),"string"==typeof t&&(t=n[t]),n.$watch(e,t,r)}var Ct=0;function $t(n){var e=n.options;if(n.super){var t=$t(n.super);if(t!==n.superOptions){n.superOptions=t;var r=function(n){var e,t=n.options,r=n.sealedOptions;for(var o in t)t[o]!==r[o]&&(e||(e={}),e[o]=t[o]);return e}(n);r&&I(n.extendOptions,r),(e=n.options=qn(t,n.extendOptions)).name&&(e.components[e.name]=n)}}return e}function wt(n){this._init(n)}function At(n){n.cid=0;var e=1;n.extend=function(n){n=n||{};var t=this,r=t.cid,o=n._Ctor||(n._Ctor={});if(o[r])return o[r];var i=n.name||t.options.name;var a=function(n){this._init(n)};return(a.prototype=Object.create(t.prototype)).constructor=a,a.cid=e++,a.options=qn(t.options,n),a.super=t,a.options.props&&function(n){var e=n.options.props;for(var t in e)mt(n.prototype,"_props",t)}(a),a.options.computed&&function(n){var e=n.options.computed;for(var t in e)bt(n.prototype,t,e[t])}(a),a.extend=t.extend,a.mixin=t.mixin,a.use=t.use,q.forEach((function(n){a[n]=t[n]})),i&&(a.options.components[i]=a),a.superOptions=t.options,a.extendOptions=n,a.sealedOptions=I({},a.options),o[r]=a,a}}function _t(n){return n&&(n.Ctor.options.name||n.tag)}function Bt(n,e){return Array.isArray(n)?n.indexOf(e)>-1:"string"==typeof n?n.split(",").indexOf(e)>-1:!!d(n)&&n.test(e)}function kt(n,e){var t=n.cache,r=n.keys,o=n._vnode;for(var i in t){var a=t[i];if(a){var s=_t(a.componentOptions);s&&!e(s)&&jt(t,i,r,o)}}}function jt(n,e,t,r){var o=n[e];!o||r&&o.tag===r.tag||o.componentInstance.$destroy(),n[e]=null,y(t,e)}wt.prototype._init=function(n){var e=this;e._uid=Ct++,e._isVue=!0,n&&n._isComponent?function(n,e){var t=n.$options=Object.create(n.constructor.options),r=e._parentVnode;t.parent=e.parent,t._parentVnode=r;var o=r.componentOptions;t.propsData=o.propsData,t._parentListeners=o.listeners,t._renderChildren=o.children,t._componentTag=o.tag,e.render&&(t.render=e.render,t.staticRenderFns=e.staticRenderFns)}(e,n):e.$options=qn($t(e.constructor),n||{},e),e._renderProxy=e,e._self=e,function(n){var e=n.$options,t=e.parent;if(t&&!e.abstract){for(;t.$options.abstract&&t.$parent;)t=t.$parent;t.$children.push(n)}n.$parent=t,n.$root=t?t.$root:n,n.$children=[],n.$refs={},n._watcher=null,n._inactive=null,n._directInactive=!1,n._isMounted=!1,n._isDestroyed=!1,n._isBeingDestroyed=!1}(e),function(n){n._events=Object.create(null),n._hasHookEvent=!1;var e=n.$options._parentListeners;e&&Ye(n,e)}(e),function(n){n._vnode=null,n._staticTrees=null;var e=n.$options,t=n.$vnode=e._parentVnode,r=t&&t.context;n.$slots=he(e._renderChildren,r),n.$scopedSlots=o,n._c=function(e,t,r,o){return Me(n,e,t,r,o,!1)},n.$createElement=function(e,t,r,o){return Me(n,e,t,r,o,!0)};var i=t&&t.data;kn(n,"$attrs",i&&i.attrs||o,null,!0),kn(n,"$listeners",e._parentListeners||o,null,!0)}(e),et(e,"beforeCreate"),function(n){var e=fe(n.$options.inject,n);e&&(An(!1),Object.keys(e).forEach((function(t){kn(n,t,e[t])})),An(!0))}(e),gt(e),function(n){var e=n.$options.provide;e&&(n._provided="function"==typeof e?e.call(n):e)}(e),et(e,"created"),e.$options.el&&e.$mount(e.$options.el)},function(n){var e={get:function(){return this._data}},t={get:function(){return this._props}};Object.defineProperty(n.prototype,"$data",e),Object.defineProperty(n.prototype,"$props",t),n.prototype.$set=jn,n.prototype.$delete=In,n.prototype.$watch=function(n,e,t){if(p(e))return xt(this,n,e,t);(t=t||{}).user=!0;var r=new ft(this,n,e,t);if(t.immediate)try{e.call(this,r.value)}catch(n){Nn(n,this,'callback for immediate watcher "'+r.expression+'"')}return function(){r.teardown()}}}(wt),function(n){var e=/^hook:/;n.prototype.$on=function(n,t){var r=this;if(Array.isArray(n))for(var o=0,i=n.length;o<i;o++)r.$on(n[o],t);else(r._events[n]||(r._events[n]=[])).push(t),e.test(n)&&(r._hasHookEvent=!0);return r},n.prototype.$once=function(n,e){var t=this;function r(){t.$off(n,r),e.apply(t,arguments)}return r.fn=e,t.$on(n,r),t},n.prototype.$off=function(n,e){var t=this;if(!arguments.length)return t._events=Object.create(null),t;if(Array.isArray(n)){for(var r=0,o=n.length;r<o;r++)t.$off(n[r],e);return t}var i,a=t._events[n];if(!a)return t;if(!e)return t._events[n]=null,t;for(var s=a.length;s--;)if((i=a[s])===e||i.fn===e){a.splice(s,1);break}return t},n.prototype.$emit=function(n){var e=this,t=e._events[n];if(t){t=t.length>1?j(t):t;for(var r=j(arguments,1),o='event handler for "'+n+'"',i=0,a=t.length;i<a;i++)Gn(t[i],e,r,e,o)}return e}}(wt),function(n){n.prototype._update=function(n,e){var t=this,r=t.$el,o=t._vnode,i=Qe(t);t._vnode=n,t.$el=o?t.__patch__(o,n):t.__patch__(t.$el,n,e,!1),i(),r&&(r.__vue__=null),t.$el&&(t.$el.__vue__=t),t.$vnode&&t.$parent&&t.$vnode===t.$parent._vnode&&(t.$parent.$el=t.$el)},n.prototype.$forceUpdate=function(){this._watcher&&this._watcher.update()},n.prototype.$destroy=function(){var n=this;if(!n._isBeingDestroyed){et(n,"beforeDestroy"),n._isBeingDestroyed=!0;var e=n.$parent;!e||e._isBeingDestroyed||n.$options.abstract||y(e.$children,n),n._watcher&&n._watcher.teardown();for(var t=n._watchers.length;t--;)n._watchers[t].teardown();n._data.__ob__&&n._data.__ob__.vmCount--,n._isDestroyed=!0,n.__patch__(n._vnode,null),et(n,"destroyed"),n.$off(),n.$el&&(n.$el.__vue__=null),n.$vnode&&(n.$vnode.parent=null)}}}(wt),function(n){De(n.prototype),n.prototype.$nextTick=function(n){return re(n,this)},n.prototype._render=function(){var n,e=this,t=e.$options,r=t.render,o=t._parentVnode;o&&(e.$scopedSlots=ge(o.data.scopedSlots,e.$slots,e.$scopedSlots)),e.$vnode=o;try{He=e,n=r.call(e._renderProxy,e.$createElement)}catch(t){Nn(t,e,"render"),n=e._vnode}finally{He=null}return Array.isArray(n)&&1===n.length&&(n=n[0]),n instanceof gn||(n=bn()),n.parent=o,n}}(wt);var It=[String,RegExp,Array],St={KeepAlive:{name:"keep-alive",abstract:!0,props:{include:It,exclude:It,max:[String,Number]},created:function(){this.cache=Object.create(null),this.keys=[]},destroyed:function(){for(var n in this.cache)jt(this.cache,n,this.keys)},mounted:function(){var n=this;this.$watch("include",(function(e){kt(n,(function(n){return Bt(e,n)}))})),this.$watch("exclude",(function(e){kt(n,(function(n){return!Bt(e,n)}))}))},render:function(){var n=this.$slots.default,e=ze(n),t=e&&e.componentOptions;if(t){var r=_t(t),o=this.include,i=this.exclude;if(o&&(!r||!Bt(o,r))||i&&r&&Bt(i,r))return e;var a=this.cache,s=this.keys,l=null==e.key?t.Ctor.cid+(t.tag?"::"+t.tag:""):e.key;a[l]?(e.componentInstance=a[l].componentInstance,y(s,l),s.push(l)):(a[l]=e,s.push(l),this.max&&s.length>parseInt(this.max)&&jt(a,s[0],s,this._vnode)),e.data.keepAlive=!0}return e||n&&n[0]}}};!function(n){var e={get:function(){return U}};Object.defineProperty(n,"config",e),n.util={warn:un,extend:I,mergeOptions:qn,defineReactive:kn},n.set=jn,n.delete=In,n.nextTick=re,n.observable=function(n){return Bn(n),n},n.options=Object.create(null),q.forEach((function(e){n.options[e+"s"]=Object.create(null)})),n.options._base=n,I(n.options.components,St),function(n){n.use=function(n){var e=this._installedPlugins||(this._installedPlugins=[]);if(e.indexOf(n)>-1)return this;var t=j(arguments,1);return t.unshift(this),"function"==typeof n.install?n.install.apply(n,t):"function"==typeof n&&n.apply(null,t),e.push(n),this}}(n),function(n){n.mixin=function(n){return this.options=qn(this.options,n),this}}(n),At(n),function(n){q.forEach((function(e){n[e]=function(n,t){return t?("component"===e&&p(t)&&(t.name=t.name||n,t=this.options._base.extend(t)),"directive"===e&&"function"==typeof t&&(t={bind:t,update:t}),this.options[e+"s"][n]=t,t):this.options[e+"s"][n]}}))}(n)}(wt),Object.defineProperty(wt.prototype,"$isServer",{get:on}),Object.defineProperty(wt.prototype,"$ssrContext",{get:function(){return this.$vnode&&this.$vnode.ssrContext}}),Object.defineProperty(wt,"FunctionalRenderContext",{value:Xe}),wt.version="2.6.11";var Pt=v("style,class"),Dt=v("input,textarea,option,select,progress"),Xt=v("contenteditable,draggable,spellcheck"),Lt=v("events,caret,typing,plaintext-only"),Tt=v("allowfullscreen,async,autofocus,autoplay,checked,compact,controls,declare,default,defaultchecked,defaultmuted,defaultselected,defer,disabled,enabled,formnovalidate,hidden,indeterminate,inert,ismap,itemscope,loop,multiple,muted,nohref,noresize,noshade,novalidate,nowrap,open,pauseonexit,readonly,required,reversed,scoped,seamless,selected,sortable,translate,truespeed,typemustmatch,visible"),Rt="http://www.w3.org/1999/xlink",qt=function(n){return":"===n.charAt(5)&&"xlink"===n.slice(0,5)},Ot=function(n){return qt(n)?n.slice(6,n.length):""},Ut=function(n){return null==n||!1===n};function Mt(n){for(var e=n.data,t=n,r=n;a(r.componentInstance);)(r=r.componentInstance._vnode)&&r.data&&(e=Ft(r.data,e));for(;a(t=t.parent);)t&&t.data&&(e=Ft(e,t.data));return function(n,e){if(a(n)||a(e))return Ht(n,Nt(e));return""}(e.staticClass,e.class)}function Ft(n,e){return{staticClass:Ht(n.staticClass,e.staticClass),class:a(n.class)?[n.class,e.class]:e.class}}function Ht(n,e){return n?e?n+" "+e:n:e||""}function Nt(n){return Array.isArray(n)?function(n){for(var e,t="",r=0,o=n.length;r<o;r++)a(e=Nt(n[r]))&&""!==e&&(t&&(t+=" "),t+=e);return t}(n):c(n)?function(n){var e="";for(var t in n)n[t]&&(e&&(e+=" "),e+=t);return e}(n):"string"==typeof n?n:""}var Gt={svg:"http://www.w3.org/2000/svg",math:"http://www.w3.org/1998/Math/MathML"},zt=v("html,body,base,head,link,meta,style,title,address,article,aside,footer,header,h1,h2,h3,h4,h5,h6,hgroup,nav,section,div,dd,dl,dt,figcaption,figure,picture,hr,img,li,main,ol,p,pre,ul,a,b,abbr,bdi,bdo,br,cite,code,data,dfn,em,i,kbd,mark,q,rp,rt,rtc,ruby,s,samp,small,span,strong,sub,sup,time,u,var,wbr,area,audio,map,track,video,embed,object,param,source,canvas,script,noscript,del,ins,caption,col,colgroup,table,thead,tbody,td,th,tr,button,datalist,fieldset,form,input,label,legend,meter,optgroup,option,output,progress,select,textarea,details,dialog,menu,menuitem,summary,content,element,shadow,template,blockquote,iframe,tfoot"),Vt=v("svg,animate,circle,clippath,cursor,defs,desc,ellipse,filter,font-face,foreignObject,g,glyph,image,line,marker,mask,missing-glyph,path,pattern,polygon,polyline,rect,switch,symbol,text,textpath,tspan,use,view",!0),Wt=function(n){return zt(n)||Vt(n)};var Jt=Object.create(null);var Yt=v("text,number,password,search,email,tel,url");var Kt=Object.freeze({createElement:function(n,e){var t=document.createElement(n);return"select"!==n||e.data&&e.data.attrs&&void 0!==e.data.attrs.multiple&&t.setAttribute("multiple","multiple"),t},createElementNS:function(n,e){return document.createElementNS(Gt[n],e)},createTextNode:function(n){return document.createTextNode(n)},createComment:function(n){return document.createComment(n)},insertBefore:function(n,e,t){n.insertBefore(e,t)},removeChild:function(n,e){n.removeChild(e)},appendChild:function(n,e){n.appendChild(e)},parentNode:function(n){return n.parentNode},nextSibling:function(n){return n.nextSibling},tagName:function(n){return n.tagName},setTextContent:function(n,e){n.textContent=e},setStyleScope:function(n,e){n.setAttribute(e,"")}}),Qt={create:function(n,e){Zt(e)},update:function(n,e){n.data.ref!==e.data.ref&&(Zt(n,!0),Zt(e))},destroy:function(n){Zt(n,!0)}};function Zt(n,e){var t=n.data.ref;if(a(t)){var r=n.context,o=n.componentInstance||n.elm,i=r.$refs;e?Array.isArray(i[t])?y(i[t],o):i[t]===o&&(i[t]=void 0):n.data.refInFor?Array.isArray(i[t])?i[t].indexOf(o)<0&&i[t].push(o):i[t]=[o]:i[t]=o}}var nr=new gn("",{},[]),er=["create","activate","update","remove","destroy"];function tr(n,e){return n.key===e.key&&(n.tag===e.tag&&n.isComment===e.isComment&&a(n.data)===a(e.data)&&function(n,e){if("input"!==n.tag)return!0;var t,r=a(t=n.data)&&a(t=t.attrs)&&t.type,o=a(t=e.data)&&a(t=t.attrs)&&t.type;return r===o||Yt(r)&&Yt(o)}(n,e)||s(n.isAsyncPlaceholder)&&n.asyncFactory===e.asyncFactory&&i(e.asyncFactory.error))}function rr(n,e,t){var r,o,i={};for(r=e;r<=t;++r)a(o=n[r].key)&&(i[o]=r);return i}var or={create:ir,update:ir,destroy:function(n){ir(n,nr)}};function ir(n,e){(n.data.directives||e.data.directives)&&function(n,e){var t,r,o,i=n===nr,a=e===nr,s=sr(n.data.directives,n.context),l=sr(e.data.directives,e.context),c=[],u=[];for(t in l)r=s[t],o=l[t],r?(o.oldValue=r.value,o.oldArg=r.arg,cr(o,"update",e,n),o.def&&o.def.componentUpdated&&u.push(o)):(cr(o,"bind",e,n),o.def&&o.def.inserted&&c.push(o));if(c.length){var p=function(){for(var t=0;t<c.length;t++)cr(c[t],"inserted",e,n)};i?ce(e,"insert",p):p()}u.length&&ce(e,"postpatch",(function(){for(var t=0;t<u.length;t++)cr(u[t],"componentUpdated",e,n)}));if(!i)for(t in s)l[t]||cr(s[t],"unbind",n,n,a)}(n,e)}var ar=Object.create(null);function sr(n,e){var t,r,o=Object.create(null);if(!n)return o;for(t=0;t<n.length;t++)(r=n[t]).modifiers||(r.modifiers=ar),o[lr(r)]=r,r.def=On(e.$options,"directives",r.name);return o}function lr(n){return n.rawName||n.name+"."+Object.keys(n.modifiers||{}).join(".")}function cr(n,e,t,r,o){var i=n.def&&n.def[e];if(i)try{i(t.elm,n,t,r,o)}catch(r){Nn(r,t.context,"directive "+n.name+" "+e+" hook")}}var ur=[Qt,or];function pr(n,e){var t=e.componentOptions;if(!(a(t)&&!1===t.Ctor.options.inheritAttrs||i(n.data.attrs)&&i(e.data.attrs))){var r,o,s=e.elm,l=n.data.attrs||{},c=e.data.attrs||{};for(r in a(c.__ob__)&&(c=e.data.attrs=I({},c)),c)o=c[r],l[r]!==o&&dr(s,r,o);for(r in(Y||Q)&&c.value!==l.value&&dr(s,"value",c.value),l)i(c[r])&&(qt(r)?s.removeAttributeNS(Rt,Ot(r)):Xt(r)||s.removeAttribute(r))}}function dr(n,e,t){n.tagName.indexOf("-")>-1?fr(n,e,t):Tt(e)?Ut(t)?n.removeAttribute(e):(t="allowfullscreen"===e&&"EMBED"===n.tagName?"true":e,n.setAttribute(e,t)):Xt(e)?n.setAttribute(e,function(n,e){return Ut(e)||"false"===e?"false":"contenteditable"===n&&Lt(e)?e:"true"}(e,t)):qt(e)?Ut(t)?n.removeAttributeNS(Rt,Ot(e)):n.setAttributeNS(Rt,e,t):fr(n,e,t)}function fr(n,e,t){if(Ut(t))n.removeAttribute(e);else{if(Y&&!K&&"TEXTAREA"===n.tagName&&"placeholder"===e&&""!==t&&!n.__ieph){var r=function(e){e.stopImmediatePropagation(),n.removeEventListener("input",r)};n.addEventListener("input",r),n.__ieph=!0}n.setAttribute(e,t)}}var hr={create:pr,update:pr};function mr(n,e){var t=e.elm,r=e.data,o=n.data;if(!(i(r.staticClass)&&i(r.class)&&(i(o)||i(o.staticClass)&&i(o.class)))){var s=Mt(e),l=t._transitionClasses;a(l)&&(s=Ht(s,Nt(l))),s!==t._prevClass&&(t.setAttribute("class",s),t._prevClass=s)}}var gr,vr={create:mr,update:mr};function br(n,e,t){var r=gr;return function o(){var i=e.apply(null,arguments);null!==i&&xr(n,o,t,r)}}var yr=Jn&&!(nn&&Number(nn[1])<=53);function Er(n,e,t,r){if(yr){var o=lt,i=e;e=i._wrapper=function(n){if(n.target===n.currentTarget||n.timeStamp>=o||n.timeStamp<=0||n.target.ownerDocument!==document)return i.apply(this,arguments)}}gr.addEventListener(n,e,tn?{capture:t,passive:r}:t)}function xr(n,e,t,r){(r||gr).removeEventListener(n,e._wrapper||e,t)}function Cr(n,e){if(!i(n.data.on)||!i(e.data.on)){var t=e.data.on||{},r=n.data.on||{};gr=e.elm,function(n){if(a(n.__r)){var e=Y?"change":"input";n[e]=[].concat(n.__r,n[e]||[]),delete n.__r}a(n.__c)&&(n.change=[].concat(n.__c,n.change||[]),delete n.__c)}(t),le(t,r,Er,xr,br,e.context),gr=void 0}}var $r,wr={create:Cr,update:Cr};function Ar(n,e){if(!i(n.data.domProps)||!i(e.data.domProps)){var t,r,o=e.elm,s=n.data.domProps||{},l=e.data.domProps||{};for(t in a(l.__ob__)&&(l=e.data.domProps=I({},l)),s)t in l||(o[t]="");for(t in l){if(r=l[t],"textContent"===t||"innerHTML"===t){if(e.children&&(e.children.length=0),r===s[t])continue;1===o.childNodes.length&&o.removeChild(o.childNodes[0])}if("value"===t&&"PROGRESS"!==o.tagName){o._value=r;var c=i(r)?"":String(r);_r(o,c)&&(o.value=c)}else if("innerHTML"===t&&Vt(o.tagName)&&i(o.innerHTML)){($r=$r||document.createElement("div")).innerHTML="<svg>"+r+"</svg>";for(var u=$r.firstChild;o.firstChild;)o.removeChild(o.firstChild);for(;u.firstChild;)o.appendChild(u.firstChild)}else if(r!==s[t])try{o[t]=r}catch(n){}}}}function _r(n,e){return!n.composing&&("OPTION"===n.tagName||function(n,e){var t=!0;try{t=document.activeElement!==n}catch(n){}return t&&n.value!==e}(n,e)||function(n,e){var t=n.value,r=n._vModifiers;if(a(r)){if(r.number)return g(t)!==g(e);if(r.trim)return t.trim()!==e.trim()}return t!==e}(n,e))}var Br={create:Ar,update:Ar},kr=C((function(n){var e={},t=/:(.+)/;return n.split(/;(?![^(]*\))/g).forEach((function(n){if(n){var r=n.split(t);r.length>1&&(e[r[0].trim()]=r[1].trim())}})),e}));function jr(n){var e=Ir(n.style);return n.staticStyle?I(n.staticStyle,e):e}function Ir(n){return Array.isArray(n)?S(n):"string"==typeof n?kr(n):n}var Sr,Pr=/^--/,Dr=/\s*!important$/,Xr=function(n,e,t){if(Pr.test(e))n.style.setProperty(e,t);else if(Dr.test(t))n.style.setProperty(B(e),t.replace(Dr,""),"important");else{var r=Tr(e);if(Array.isArray(t))for(var o=0,i=t.length;o<i;o++)n.style[r]=t[o];else n.style[r]=t}},Lr=["Webkit","Moz","ms"],Tr=C((function(n){if(Sr=Sr||document.createElement("div").style,"filter"!==(n=w(n))&&n in Sr)return n;for(var e=n.charAt(0).toUpperCase()+n.slice(1),t=0;t<Lr.length;t++){var r=Lr[t]+e;if(r in Sr)return r}}));function Rr(n,e){var t=e.data,r=n.data;if(!(i(t.staticStyle)&&i(t.style)&&i(r.staticStyle)&&i(r.style))){var o,s,l=e.elm,c=r.staticStyle,u=r.normalizedStyle||r.style||{},p=c||u,d=Ir(e.data.style)||{};e.data.normalizedStyle=a(d.__ob__)?I({},d):d;var f=function(n,e){var t,r={};if(e)for(var o=n;o.componentInstance;)(o=o.componentInstance._vnode)&&o.data&&(t=jr(o.data))&&I(r,t);(t=jr(n.data))&&I(r,t);for(var i=n;i=i.parent;)i.data&&(t=jr(i.data))&&I(r,t);return r}(e,!0);for(s in p)i(f[s])&&Xr(l,s,"");for(s in f)(o=f[s])!==p[s]&&Xr(l,s,null==o?"":o)}}var qr={create:Rr,update:Rr},Or=/\s+/;function Ur(n,e){if(e&&(e=e.trim()))if(n.classList)e.indexOf(" ")>-1?e.split(Or).forEach((function(e){return n.classList.add(e)})):n.classList.add(e);else{var t=" "+(n.getAttribute("class")||"")+" ";t.indexOf(" "+e+" ")<0&&n.setAttribute("class",(t+e).trim())}}function Mr(n,e){if(e&&(e=e.trim()))if(n.classList)e.indexOf(" ")>-1?e.split(Or).forEach((function(e){return n.classList.remove(e)})):n.classList.remove(e),n.classList.length||n.removeAttribute("class");else{for(var t=" "+(n.getAttribute("class")||"")+" ",r=" "+e+" ";t.indexOf(r)>=0;)t=t.replace(r," ");(t=t.trim())?n.setAttribute("class",t):n.removeAttribute("class")}}function Fr(n){if(n){if("object"==typeof n){var e={};return!1!==n.css&&I(e,Hr(n.name||"v")),I(e,n),e}return"string"==typeof n?Hr(n):void 0}}var Hr=C((function(n){return{enterClass:n+"-enter",enterToClass:n+"-enter-to",enterActiveClass:n+"-enter-active",leaveClass:n+"-leave",leaveToClass:n+"-leave-to",leaveActiveClass:n+"-leave-active"}})),Nr=z&&!K,Gr="transition",zr="transitionend",Vr="animation",Wr="animationend";Nr&&(void 0===window.ontransitionend&&void 0!==window.onwebkittransitionend&&(Gr="WebkitTransition",zr="webkitTransitionEnd"),void 0===window.onanimationend&&void 0!==window.onwebkitanimationend&&(Vr="WebkitAnimation",Wr="webkitAnimationEnd"));var Jr=z?window.requestAnimationFrame?window.requestAnimationFrame.bind(window):setTimeout:function(n){return n()};function Yr(n){Jr((function(){Jr(n)}))}function Kr(n,e){var t=n._transitionClasses||(n._transitionClasses=[]);t.indexOf(e)<0&&(t.push(e),Ur(n,e))}function Qr(n,e){n._transitionClasses&&y(n._transitionClasses,e),Mr(n,e)}function Zr(n,e,t){var r=eo(n,e),o=r.type,i=r.timeout,a=r.propCount;if(!o)return t();var s="transition"===o?zr:Wr,l=0,c=function(){n.removeEventListener(s,u),t()},u=function(e){e.target===n&&++l>=a&&c()};setTimeout((function(){l<a&&c()}),i+1),n.addEventListener(s,u)}var no=/\b(transform|all)(,|$)/;function eo(n,e){var t,r=window.getComputedStyle(n),o=(r[Gr+"Delay"]||"").split(", "),i=(r[Gr+"Duration"]||"").split(", "),a=to(o,i),s=(r[Vr+"Delay"]||"").split(", "),l=(r[Vr+"Duration"]||"").split(", "),c=to(s,l),u=0,p=0;return"transition"===e?a>0&&(t="transition",u=a,p=i.length):"animation"===e?c>0&&(t="animation",u=c,p=l.length):p=(t=(u=Math.max(a,c))>0?a>c?"transition":"animation":null)?"transition"===t?i.length:l.length:0,{type:t,timeout:u,propCount:p,hasTransform:"transition"===t&&no.test(r[Gr+"Property"])}}function to(n,e){for(;n.length<e.length;)n=n.concat(n);return Math.max.apply(null,e.map((function(e,t){return ro(e)+ro(n[t])})))}function ro(n){return 1e3*Number(n.slice(0,-1).replace(",","."))}function oo(n,e){var t=n.elm;a(t._leaveCb)&&(t._leaveCb.cancelled=!0,t._leaveCb());var r=Fr(n.data.transition);if(!i(r)&&!a(t._enterCb)&&1===t.nodeType){for(var o=r.css,s=r.type,l=r.enterClass,u=r.enterToClass,p=r.enterActiveClass,d=r.appearClass,f=r.appearToClass,h=r.appearActiveClass,m=r.beforeEnter,v=r.enter,b=r.afterEnter,y=r.enterCancelled,E=r.beforeAppear,x=r.appear,C=r.afterAppear,$=r.appearCancelled,w=r.duration,A=Ke,_=Ke.$vnode;_&&_.parent;)A=_.context,_=_.parent;var B=!A._isMounted||!n.isRootInsert;if(!B||x||""===x){var k=B&&d?d:l,j=B&&h?h:p,I=B&&f?f:u,S=B&&E||m,P=B&&"function"==typeof x?x:v,D=B&&C||b,X=B&&$||y,L=g(c(w)?w.enter:w);0;var T=!1!==o&&!K,q=so(P),O=t._enterCb=R((function(){T&&(Qr(t,I),Qr(t,j)),O.cancelled?(T&&Qr(t,k),X&&X(t)):D&&D(t),t._enterCb=null}));n.data.show||ce(n,"insert",(function(){var e=t.parentNode,r=e&&e._pending&&e._pending[n.key];r&&r.tag===n.tag&&r.elm._leaveCb&&r.elm._leaveCb(),P&&P(t,O)})),S&&S(t),T&&(Kr(t,k),Kr(t,j),Yr((function(){Qr(t,k),O.cancelled||(Kr(t,I),q||(ao(L)?setTimeout(O,L):Zr(t,s,O)))}))),n.data.show&&(e&&e(),P&&P(t,O)),T||q||O()}}}function io(n,e){var t=n.elm;a(t._enterCb)&&(t._enterCb.cancelled=!0,t._enterCb());var r=Fr(n.data.transition);if(i(r)||1!==t.nodeType)return e();if(!a(t._leaveCb)){var o=r.css,s=r.type,l=r.leaveClass,u=r.leaveToClass,p=r.leaveActiveClass,d=r.beforeLeave,f=r.leave,h=r.afterLeave,m=r.leaveCancelled,v=r.delayLeave,b=r.duration,y=!1!==o&&!K,E=so(f),x=g(c(b)?b.leave:b);0;var C=t._leaveCb=R((function(){t.parentNode&&t.parentNode._pending&&(t.parentNode._pending[n.key]=null),y&&(Qr(t,u),Qr(t,p)),C.cancelled?(y&&Qr(t,l),m&&m(t)):(e(),h&&h(t)),t._leaveCb=null}));v?v($):$()}function $(){C.cancelled||(!n.data.show&&t.parentNode&&((t.parentNode._pending||(t.parentNode._pending={}))[n.key]=n),d&&d(t),y&&(Kr(t,l),Kr(t,p),Yr((function(){Qr(t,l),C.cancelled||(Kr(t,u),E||(ao(x)?setTimeout(C,x):Zr(t,s,C)))}))),f&&f(t,C),y||E||C())}}function ao(n){return"number"==typeof n&&!isNaN(n)}function so(n){if(i(n))return!1;var e=n.fns;return a(e)?so(Array.isArray(e)?e[0]:e):(n._length||n.length)>1}function lo(n,e){!0!==e.data.show&&oo(e)}var co=function(n){var e,t,r={},o=n.modules,c=n.nodeOps;for(e=0;e<er.length;++e)for(r[er[e]]=[],t=0;t<o.length;++t)a(o[t][er[e]])&&r[er[e]].push(o[t][er[e]]);function u(n){var e=c.parentNode(n);a(e)&&c.removeChild(e,n)}function p(n,e,t,o,i,l,u){if(a(n.elm)&&a(l)&&(n=l[u]=En(n)),n.isRootInsert=!i,!function(n,e,t,o){var i=n.data;if(a(i)){var l=a(n.componentInstance)&&i.keepAlive;if(a(i=i.hook)&&a(i=i.init)&&i(n,!1),a(n.componentInstance))return d(n,e),f(t,n.elm,o),s(l)&&function(n,e,t,o){var i,s=n;for(;s.componentInstance;)if(s=s.componentInstance._vnode,a(i=s.data)&&a(i=i.transition)){for(i=0;i<r.activate.length;++i)r.activate[i](nr,s);e.push(s);break}f(t,n.elm,o)}(n,e,t,o),!0}}(n,e,t,o)){var p=n.data,m=n.children,v=n.tag;a(v)?(n.elm=n.ns?c.createElementNS(n.ns,v):c.createElement(v,n),b(n),h(n,m,e),a(p)&&g(n,e),f(t,n.elm,o)):s(n.isComment)?(n.elm=c.createComment(n.text),f(t,n.elm,o)):(n.elm=c.createTextNode(n.text),f(t,n.elm,o))}}function d(n,e){a(n.data.pendingInsert)&&(e.push.apply(e,n.data.pendingInsert),n.data.pendingInsert=null),n.elm=n.componentInstance.$el,m(n)?(g(n,e),b(n)):(Zt(n),e.push(n))}function f(n,e,t){a(n)&&(a(t)?c.parentNode(t)===n&&c.insertBefore(n,e,t):c.appendChild(n,e))}function h(n,e,t){if(Array.isArray(e)){0;for(var r=0;r<e.length;++r)p(e[r],t,n.elm,null,!0,e,r)}else l(n.text)&&c.appendChild(n.elm,c.createTextNode(String(n.text)))}function m(n){for(;n.componentInstance;)n=n.componentInstance._vnode;return a(n.tag)}function g(n,t){for(var o=0;o<r.create.length;++o)r.create[o](nr,n);a(e=n.data.hook)&&(a(e.create)&&e.create(nr,n),a(e.insert)&&t.push(n))}function b(n){var e;if(a(e=n.fnScopeId))c.setStyleScope(n.elm,e);else for(var t=n;t;)a(e=t.context)&&a(e=e.$options._scopeId)&&c.setStyleScope(n.elm,e),t=t.parent;a(e=Ke)&&e!==n.context&&e!==n.fnContext&&a(e=e.$options._scopeId)&&c.setStyleScope(n.elm,e)}function y(n,e,t,r,o,i){for(;r<=o;++r)p(t[r],i,n,e,!1,t,r)}function E(n){var e,t,o=n.data;if(a(o))for(a(e=o.hook)&&a(e=e.destroy)&&e(n),e=0;e<r.destroy.length;++e)r.destroy[e](n);if(a(e=n.children))for(t=0;t<n.children.length;++t)E(n.children[t])}function x(n,e,t){for(;e<=t;++e){var r=n[e];a(r)&&(a(r.tag)?(C(r),E(r)):u(r.elm))}}function C(n,e){if(a(e)||a(n.data)){var t,o=r.remove.length+1;for(a(e)?e.listeners+=o:e=function(n,e){function t(){0==--t.listeners&&u(n)}return t.listeners=e,t}(n.elm,o),a(t=n.componentInstance)&&a(t=t._vnode)&&a(t.data)&&C(t,e),t=0;t<r.remove.length;++t)r.remove[t](n,e);a(t=n.data.hook)&&a(t=t.remove)?t(n,e):e()}else u(n.elm)}function $(n,e,t,r){for(var o=t;o<r;o++){var i=e[o];if(a(i)&&tr(n,i))return o}}function w(n,e,t,o,l,u){if(n!==e){a(e.elm)&&a(o)&&(e=o[l]=En(e));var d=e.elm=n.elm;if(s(n.isAsyncPlaceholder))a(e.asyncFactory.resolved)?B(n.elm,e,t):e.isAsyncPlaceholder=!0;else if(s(e.isStatic)&&s(n.isStatic)&&e.key===n.key&&(s(e.isCloned)||s(e.isOnce)))e.componentInstance=n.componentInstance;else{var f,h=e.data;a(h)&&a(f=h.hook)&&a(f=f.prepatch)&&f(n,e);var g=n.children,v=e.children;if(a(h)&&m(e)){for(f=0;f<r.update.length;++f)r.update[f](n,e);a(f=h.hook)&&a(f=f.update)&&f(n,e)}i(e.text)?a(g)&&a(v)?g!==v&&function(n,e,t,r,o){var s,l,u,d=0,f=0,h=e.length-1,m=e[0],g=e[h],v=t.length-1,b=t[0],E=t[v],C=!o;for(0;d<=h&&f<=v;)i(m)?m=e[++d]:i(g)?g=e[--h]:tr(m,b)?(w(m,b,r,t,f),m=e[++d],b=t[++f]):tr(g,E)?(w(g,E,r,t,v),g=e[--h],E=t[--v]):tr(m,E)?(w(m,E,r,t,v),C&&c.insertBefore(n,m.elm,c.nextSibling(g.elm)),m=e[++d],E=t[--v]):tr(g,b)?(w(g,b,r,t,f),C&&c.insertBefore(n,g.elm,m.elm),g=e[--h],b=t[++f]):(i(s)&&(s=rr(e,d,h)),i(l=a(b.key)?s[b.key]:$(b,e,d,h))?p(b,r,n,m.elm,!1,t,f):tr(u=e[l],b)?(w(u,b,r,t,f),e[l]=void 0,C&&c.insertBefore(n,u.elm,m.elm)):p(b,r,n,m.elm,!1,t,f),b=t[++f]);d>h?y(n,i(t[v+1])?null:t[v+1].elm,t,f,v,r):f>v&&x(e,d,h)}(d,g,v,t,u):a(v)?(a(n.text)&&c.setTextContent(d,""),y(d,null,v,0,v.length-1,t)):a(g)?x(g,0,g.length-1):a(n.text)&&c.setTextContent(d,""):n.text!==e.text&&c.setTextContent(d,e.text),a(h)&&a(f=h.hook)&&a(f=f.postpatch)&&f(n,e)}}}function A(n,e,t){if(s(t)&&a(n.parent))n.parent.data.pendingInsert=e;else for(var r=0;r<e.length;++r)e[r].data.hook.insert(e[r])}var _=v("attrs,class,staticClass,staticStyle,key");function B(n,e,t,r){var o,i=e.tag,l=e.data,c=e.children;if(r=r||l&&l.pre,e.elm=n,s(e.isComment)&&a(e.asyncFactory))return e.isAsyncPlaceholder=!0,!0;if(a(l)&&(a(o=l.hook)&&a(o=o.init)&&o(e,!0),a(o=e.componentInstance)))return d(e,t),!0;if(a(i)){if(a(c))if(n.hasChildNodes())if(a(o=l)&&a(o=o.domProps)&&a(o=o.innerHTML)){if(o!==n.innerHTML)return!1}else{for(var u=!0,p=n.firstChild,f=0;f<c.length;f++){if(!p||!B(p,c[f],t,r)){u=!1;break}p=p.nextSibling}if(!u||p)return!1}else h(e,c,t);if(a(l)){var m=!1;for(var v in l)if(!_(v)){m=!0,g(e,t);break}!m&&l.class&&ie(l.class)}}else n.data!==e.text&&(n.data=e.text);return!0}return function(n,e,t,o){if(!i(e)){var l,u=!1,d=[];if(i(n))u=!0,p(e,d);else{var f=a(n.nodeType);if(!f&&tr(n,e))w(n,e,d,null,null,o);else{if(f){if(1===n.nodeType&&n.hasAttribute("data-server-rendered")&&(n.removeAttribute("data-server-rendered"),t=!0),s(t)&&B(n,e,d))return A(e,d,!0),n;l=n,n=new gn(c.tagName(l).toLowerCase(),{},[],void 0,l)}var h=n.elm,g=c.parentNode(h);if(p(e,d,h._leaveCb?null:g,c.nextSibling(h)),a(e.parent))for(var v=e.parent,b=m(e);v;){for(var y=0;y<r.destroy.length;++y)r.destroy[y](v);if(v.elm=e.elm,b){for(var C=0;C<r.create.length;++C)r.create[C](nr,v);var $=v.data.hook.insert;if($.merged)for(var _=1;_<$.fns.length;_++)$.fns[_]()}else Zt(v);v=v.parent}a(g)?x([n],0,0):a(n.tag)&&E(n)}}return A(e,d,u),e.elm}a(n)&&E(n)}}({nodeOps:Kt,modules:[hr,vr,wr,Br,qr,z?{create:lo,activate:lo,remove:function(n,e){!0!==n.data.show?io(n,e):e()}}:{}].concat(ur)});K&&document.addEventListener("selectionchange",(function(){var n=document.activeElement;n&&n.vmodel&&bo(n,"input")}));var uo={inserted:function(n,e,t,r){"select"===t.tag?(r.elm&&!r.elm._vOptions?ce(t,"postpatch",(function(){uo.componentUpdated(n,e,t)})):po(n,e,t.context),n._vOptions=[].map.call(n.options,mo)):("textarea"===t.tag||Yt(n.type))&&(n._vModifiers=e.modifiers,e.modifiers.lazy||(n.addEventListener("compositionstart",go),n.addEventListener("compositionend",vo),n.addEventListener("change",vo),K&&(n.vmodel=!0)))},componentUpdated:function(n,e,t){if("select"===t.tag){po(n,e,t.context);var r=n._vOptions,o=n._vOptions=[].map.call(n.options,mo);if(o.some((function(n,e){return!L(n,r[e])})))(n.multiple?e.value.some((function(n){return ho(n,o)})):e.value!==e.oldValue&&ho(e.value,o))&&bo(n,"change")}}};function po(n,e,t){fo(n,e,t),(Y||Q)&&setTimeout((function(){fo(n,e,t)}),0)}function fo(n,e,t){var r=e.value,o=n.multiple;if(!o||Array.isArray(r)){for(var i,a,s=0,l=n.options.length;s<l;s++)if(a=n.options[s],o)i=T(r,mo(a))>-1,a.selected!==i&&(a.selected=i);else if(L(mo(a),r))return void(n.selectedIndex!==s&&(n.selectedIndex=s));o||(n.selectedIndex=-1)}}function ho(n,e){return e.every((function(e){return!L(e,n)}))}function mo(n){return"_value"in n?n._value:n.value}function go(n){n.target.composing=!0}function vo(n){n.target.composing&&(n.target.composing=!1,bo(n.target,"input"))}function bo(n,e){var t=document.createEvent("HTMLEvents");t.initEvent(e,!0,!0),n.dispatchEvent(t)}function yo(n){return!n.componentInstance||n.data&&n.data.transition?n:yo(n.componentInstance._vnode)}var Eo={model:uo,show:{bind:function(n,e,t){var r=e.value,o=(t=yo(t)).data&&t.data.transition,i=n.__vOriginalDisplay="none"===n.style.display?"":n.style.display;r&&o?(t.data.show=!0,oo(t,(function(){n.style.display=i}))):n.style.display=r?i:"none"},update:function(n,e,t){var r=e.value;!r!=!e.oldValue&&((t=yo(t)).data&&t.data.transition?(t.data.show=!0,r?oo(t,(function(){n.style.display=n.__vOriginalDisplay})):io(t,(function(){n.style.display="none"}))):n.style.display=r?n.__vOriginalDisplay:"none")},unbind:function(n,e,t,r,o){o||(n.style.display=n.__vOriginalDisplay)}}},xo={name:String,appear:Boolean,css:Boolean,mode:String,type:String,enterClass:String,leaveClass:String,enterToClass:String,leaveToClass:String,enterActiveClass:String,leaveActiveClass:String,appearClass:String,appearActiveClass:String,appearToClass:String,duration:[Number,String,Object]};function Co(n){var e=n&&n.componentOptions;return e&&e.Ctor.options.abstract?Co(ze(e.children)):n}function $o(n){var e={},t=n.$options;for(var r in t.propsData)e[r]=n[r];var o=t._parentListeners;for(var i in o)e[w(i)]=o[i];return e}function wo(n,e){if(/\d-keep-alive$/.test(e.tag))return n("keep-alive",{props:e.componentOptions.propsData})}var Ao=function(n){return n.tag||Ge(n)},_o=function(n){return"show"===n.name},Bo={name:"transition",props:xo,abstract:!0,render:function(n){var e=this,t=this.$slots.default;if(t&&(t=t.filter(Ao)).length){0;var r=this.mode;0;var o=t[0];if(function(n){for(;n=n.parent;)if(n.data.transition)return!0}(this.$vnode))return o;var i=Co(o);if(!i)return o;if(this._leaving)return wo(n,o);var a="__transition-"+this._uid+"-";i.key=null==i.key?i.isComment?a+"comment":a+i.tag:l(i.key)?0===String(i.key).indexOf(a)?i.key:a+i.key:i.key;var s=(i.data||(i.data={})).transition=$o(this),c=this._vnode,u=Co(c);if(i.data.directives&&i.data.directives.some(_o)&&(i.data.show=!0),u&&u.data&&!function(n,e){return e.key===n.key&&e.tag===n.tag}(i,u)&&!Ge(u)&&(!u.componentInstance||!u.componentInstance._vnode.isComment)){var p=u.data.transition=I({},s);if("out-in"===r)return this._leaving=!0,ce(p,"afterLeave",(function(){e._leaving=!1,e.$forceUpdate()})),wo(n,o);if("in-out"===r){if(Ge(i))return c;var d,f=function(){d()};ce(s,"afterEnter",f),ce(s,"enterCancelled",f),ce(p,"delayLeave",(function(n){d=n}))}}return o}}},ko=I({tag:String,moveClass:String},xo);function jo(n){n.elm._moveCb&&n.elm._moveCb(),n.elm._enterCb&&n.elm._enterCb()}function Io(n){n.data.newPos=n.elm.getBoundingClientRect()}function So(n){var e=n.data.pos,t=n.data.newPos,r=e.left-t.left,o=e.top-t.top;if(r||o){n.data.moved=!0;var i=n.elm.style;i.transform=i.WebkitTransform="translate("+r+"px,"+o+"px)",i.transitionDuration="0s"}}delete ko.mode;var Po={Transition:Bo,TransitionGroup:{props:ko,beforeMount:function(){var n=this,e=this._update;this._update=function(t,r){var o=Qe(n);n.__patch__(n._vnode,n.kept,!1,!0),n._vnode=n.kept,o(),e.call(n,t,r)}},render:function(n){for(var e=this.tag||this.$vnode.data.tag||"span",t=Object.create(null),r=this.prevChildren=this.children,o=this.$slots.default||[],i=this.children=[],a=$o(this),s=0;s<o.length;s++){var l=o[s];if(l.tag)if(null!=l.key&&0!==String(l.key).indexOf("__vlist"))i.push(l),t[l.key]=l,(l.data||(l.data={})).transition=a;else;}if(r){for(var c=[],u=[],p=0;p<r.length;p++){var d=r[p];d.data.transition=a,d.data.pos=d.elm.getBoundingClientRect(),t[d.key]?c.push(d):u.push(d)}this.kept=n(e,null,c),this.removed=u}return n(e,null,i)},updated:function(){var n=this.prevChildren,e=this.moveClass||(this.name||"v")+"-move";n.length&&this.hasMove(n[0].elm,e)&&(n.forEach(jo),n.forEach(Io),n.forEach(So),this._reflow=document.body.offsetHeight,n.forEach((function(n){if(n.data.moved){var t=n.elm,r=t.style;Kr(t,e),r.transform=r.WebkitTransform=r.transitionDuration="",t.addEventListener(zr,t._moveCb=function n(r){r&&r.target!==t||r&&!/transform$/.test(r.propertyName)||(t.removeEventListener(zr,n),t._moveCb=null,Qr(t,e))})}})))},methods:{hasMove:function(n,e){if(!Nr)return!1;if(this._hasMove)return this._hasMove;var t=n.cloneNode();n._transitionClasses&&n._transitionClasses.forEach((function(n){Mr(t,n)})),Ur(t,e),t.style.display="none",this.$el.appendChild(t);var r=eo(t);return this.$el.removeChild(t),this._hasMove=r.hasTransform}}}};wt.config.mustUseProp=function(n,e,t){return"value"===t&&Dt(n)&&"button"!==e||"selected"===t&&"option"===n||"checked"===t&&"input"===n||"muted"===t&&"video"===n},wt.config.isReservedTag=Wt,wt.config.isReservedAttr=Pt,wt.config.getTagNamespace=function(n){return Vt(n)?"svg":"math"===n?"math":void 0},wt.config.isUnknownElement=function(n){if(!z)return!0;if(Wt(n))return!1;if(n=n.toLowerCase(),null!=Jt[n])return Jt[n];var e=document.createElement(n);return n.indexOf("-")>-1?Jt[n]=e.constructor===window.HTMLUnknownElement||e.constructor===window.HTMLElement:Jt[n]=/HTMLUnknownElement/.test(e.toString())},I(wt.options.directives,Eo),I(wt.options.components,Po),wt.prototype.__patch__=z?co:P,wt.prototype.$mount=function(n,e){return function(n,e,t){var r;return n.$el=e,n.$options.render||(n.$options.render=bn),et(n,"beforeMount"),r=function(){n._update(n._render(),t)},new ft(n,r,P,{before:function(){n._isMounted&&!n._isDestroyed&&et(n,"beforeUpdate")}},!0),t=!1,null==n.$vnode&&(n._isMounted=!0,et(n,"mounted")),n}(this,n=n&&z?function(n){if("string"==typeof n){var e=document.querySelector(n);return e||document.createElement("div")}return n}(n):void 0,e)},z&&setTimeout((function(){U.devtools&&an&&an.emit("init",wt)}),0);var Do=wt;
/*!
  * vue-router v3.3.1
  * (c) 2020 Evan You
  * @license MIT
  */function Xo(n){return Object.prototype.toString.call(n).indexOf("Error")>-1}function Lo(n,e){return Xo(n)&&n._isRouter&&(null==e||n.type===e)}function To(n,e){for(var t in e)n[t]=e[t];return n}var Ro={name:"RouterView",functional:!0,props:{name:{type:String,default:"default"}},render:function(n,e){var t=e.props,r=e.children,o=e.parent,i=e.data;i.routerView=!0;for(var a=o.$createElement,s=t.name,l=o.$route,c=o._routerViewCache||(o._routerViewCache={}),u=0,p=!1;o&&o._routerRoot!==o;){var d=o.$vnode?o.$vnode.data:{};d.routerView&&u++,d.keepAlive&&o._directInactive&&o._inactive&&(p=!0),o=o.$parent}if(i.routerViewDepth=u,p){var f=c[s],h=f&&f.component;return h?(f.configProps&&qo(h,i,f.route,f.configProps),a(h,i,r)):a()}var m=l.matched[u],g=m&&m.components[s];if(!m||!g)return c[s]=null,a();c[s]={component:g},i.registerRouteInstance=function(n,e){var t=m.instances[s];(e&&t!==n||!e&&t===n)&&(m.instances[s]=e)},(i.hook||(i.hook={})).prepatch=function(n,e){m.instances[s]=e.componentInstance},i.hook.init=function(n){n.data.keepAlive&&n.componentInstance&&n.componentInstance!==m.instances[s]&&(m.instances[s]=n.componentInstance)};var v=m.props&&m.props[s];return v&&(To(c[s],{route:l,configProps:v}),qo(g,i,l,v)),a(g,i,r)}};function qo(n,e,t,r){var o=e.props=function(n,e){switch(typeof e){case"undefined":return;case"object":return e;case"function":return e(n);case"boolean":return e?n.params:void 0;default:0}}(t,r);if(o){o=e.props=To({},o);var i=e.attrs=e.attrs||{};for(var a in o)n.props&&a in n.props||(i[a]=o[a],delete o[a])}}var Oo=/[!'()*]/g,Uo=function(n){return"%"+n.charCodeAt(0).toString(16)},Mo=/%2C/g,Fo=function(n){return encodeURIComponent(n).replace(Oo,Uo).replace(Mo,",")},Ho=decodeURIComponent;function No(n){var e={};return(n=n.trim().replace(/^(\?|#|&)/,""))?(n.split("&").forEach((function(n){var t=n.replace(/\+/g," ").split("="),r=Ho(t.shift()),o=t.length>0?Ho(t.join("=")):null;void 0===e[r]?e[r]=o:Array.isArray(e[r])?e[r].push(o):e[r]=[e[r],o]})),e):e}function Go(n){var e=n?Object.keys(n).map((function(e){var t=n[e];if(void 0===t)return"";if(null===t)return Fo(e);if(Array.isArray(t)){var r=[];return t.forEach((function(n){void 0!==n&&(null===n?r.push(Fo(e)):r.push(Fo(e)+"="+Fo(n)))})),r.join("&")}return Fo(e)+"="+Fo(t)})).filter((function(n){return n.length>0})).join("&"):null;return e?"?"+e:""}var zo=/\/?$/;function Vo(n,e,t,r){var o=r&&r.options.stringifyQuery,i=e.query||{};try{i=Wo(i)}catch(n){}var a={name:e.name||n&&n.name,meta:n&&n.meta||{},path:e.path||"/",hash:e.hash||"",query:i,params:e.params||{},fullPath:Ko(e,o),matched:n?Yo(n):[]};return t&&(a.redirectedFrom=Ko(t,o)),Object.freeze(a)}function Wo(n){if(Array.isArray(n))return n.map(Wo);if(n&&"object"==typeof n){var e={};for(var t in n)e[t]=Wo(n[t]);return e}return n}var Jo=Vo(null,{path:"/"});function Yo(n){for(var e=[];n;)e.unshift(n),n=n.parent;return e}function Ko(n,e){var t=n.path,r=n.query;void 0===r&&(r={});var o=n.hash;return void 0===o&&(o=""),(t||"/")+(e||Go)(r)+o}function Qo(n,e){return e===Jo?n===e:!!e&&(n.path&&e.path?n.path.replace(zo,"")===e.path.replace(zo,"")&&n.hash===e.hash&&Zo(n.query,e.query):!(!n.name||!e.name)&&(n.name===e.name&&n.hash===e.hash&&Zo(n.query,e.query)&&Zo(n.params,e.params)))}function Zo(n,e){if(void 0===n&&(n={}),void 0===e&&(e={}),!n||!e)return n===e;var t=Object.keys(n),r=Object.keys(e);return t.length===r.length&&t.every((function(t){var r=n[t],o=e[t];return"object"==typeof r&&"object"==typeof o?Zo(r,o):String(r)===String(o)}))}function ni(n,e,t){var r=n.charAt(0);if("/"===r)return n;if("?"===r||"#"===r)return e+n;var o=e.split("/");t&&o[o.length-1]||o.pop();for(var i=n.replace(/^\//,"").split("/"),a=0;a<i.length;a++){var s=i[a];".."===s?o.pop():"."!==s&&o.push(s)}return""!==o[0]&&o.unshift(""),o.join("/")}function ei(n){return n.replace(/\/\//g,"/")}var ti=Array.isArray||function(n){return"[object Array]"==Object.prototype.toString.call(n)},ri=vi,oi=ci,ii=function(n,e){return pi(ci(n,e),e)},ai=pi,si=gi,li=new RegExp(["(\\\\.)","([\\/.])?(?:(?:\\:(\\w+)(?:\\(((?:\\\\.|[^\\\\()])+)\\))?|\\(((?:\\\\.|[^\\\\()])+)\\))([+*?])?|(\\*))"].join("|"),"g");function ci(n,e){for(var t,r=[],o=0,i=0,a="",s=e&&e.delimiter||"/";null!=(t=li.exec(n));){var l=t[0],c=t[1],u=t.index;if(a+=n.slice(i,u),i=u+l.length,c)a+=c[1];else{var p=n[i],d=t[2],f=t[3],h=t[4],m=t[5],g=t[6],v=t[7];a&&(r.push(a),a="");var b=null!=d&&null!=p&&p!==d,y="+"===g||"*"===g,E="?"===g||"*"===g,x=t[2]||s,C=h||m;r.push({name:f||o++,prefix:d||"",delimiter:x,optional:E,repeat:y,partial:b,asterisk:!!v,pattern:C?fi(C):v?".*":"[^"+di(x)+"]+?"})}}return i<n.length&&(a+=n.substr(i)),a&&r.push(a),r}function ui(n){return encodeURI(n).replace(/[\/?#]/g,(function(n){return"%"+n.charCodeAt(0).toString(16).toUpperCase()}))}function pi(n,e){for(var t=new Array(n.length),r=0;r<n.length;r++)"object"==typeof n[r]&&(t[r]=new RegExp("^(?:"+n[r].pattern+")$",mi(e)));return function(e,r){for(var o="",i=e||{},a=(r||{}).pretty?ui:encodeURIComponent,s=0;s<n.length;s++){var l=n[s];if("string"!=typeof l){var c,u=i[l.name];if(null==u){if(l.optional){l.partial&&(o+=l.prefix);continue}throw new TypeError('Expected "'+l.name+'" to be defined')}if(ti(u)){if(!l.repeat)throw new TypeError('Expected "'+l.name+'" to not repeat, but received `'+JSON.stringify(u)+"`");if(0===u.length){if(l.optional)continue;throw new TypeError('Expected "'+l.name+'" to not be empty')}for(var p=0;p<u.length;p++){if(c=a(u[p]),!t[s].test(c))throw new TypeError('Expected all "'+l.name+'" to match "'+l.pattern+'", but received `'+JSON.stringify(c)+"`");o+=(0===p?l.prefix:l.delimiter)+c}}else{if(c=l.asterisk?encodeURI(u).replace(/[?#]/g,(function(n){return"%"+n.charCodeAt(0).toString(16).toUpperCase()})):a(u),!t[s].test(c))throw new TypeError('Expected "'+l.name+'" to match "'+l.pattern+'", but received "'+c+'"');o+=l.prefix+c}}else o+=l}return o}}function di(n){return n.replace(/([.+*?=^!:${}()[\]|\/\\])/g,"\\$1")}function fi(n){return n.replace(/([=!:$\/()])/g,"\\$1")}function hi(n,e){return n.keys=e,n}function mi(n){return n&&n.sensitive?"":"i"}function gi(n,e,t){ti(e)||(t=e||t,e=[]);for(var r=(t=t||{}).strict,o=!1!==t.end,i="",a=0;a<n.length;a++){var s=n[a];if("string"==typeof s)i+=di(s);else{var l=di(s.prefix),c="(?:"+s.pattern+")";e.push(s),s.repeat&&(c+="(?:"+l+c+")*"),i+=c=s.optional?s.partial?l+"("+c+")?":"(?:"+l+"("+c+"))?":l+"("+c+")"}}var u=di(t.delimiter||"/"),p=i.slice(-u.length)===u;return r||(i=(p?i.slice(0,-u.length):i)+"(?:"+u+"(?=$))?"),i+=o?"$":r&&p?"":"(?="+u+"|$)",hi(new RegExp("^"+i,mi(t)),e)}function vi(n,e,t){return ti(e)||(t=e||t,e=[]),t=t||{},n instanceof RegExp?function(n,e){var t=n.source.match(/\((?!\?)/g);if(t)for(var r=0;r<t.length;r++)e.push({name:r,prefix:null,delimiter:null,optional:!1,repeat:!1,partial:!1,asterisk:!1,pattern:null});return hi(n,e)}(n,e):ti(n)?function(n,e,t){for(var r=[],o=0;o<n.length;o++)r.push(vi(n[o],e,t).source);return hi(new RegExp("(?:"+r.join("|")+")",mi(t)),e)}(n,e,t):function(n,e,t){return gi(ci(n,t),e,t)}(n,e,t)}ri.parse=oi,ri.compile=ii,ri.tokensToFunction=ai,ri.tokensToRegExp=si;var bi=Object.create(null);function yi(n,e,t){e=e||{};try{var r=bi[n]||(bi[n]=ri.compile(n));return"string"==typeof e.pathMatch&&(e[0]=e.pathMatch),r(e,{pretty:!0})}catch(n){return""}finally{delete e[0]}}function Ei(n,e,t,r){var o="string"==typeof n?{path:n}:n;if(o._normalized)return o;if(o.name){var i=(o=To({},n)).params;return i&&"object"==typeof i&&(o.params=To({},i)),o}if(!o.path&&o.params&&e){(o=To({},o))._normalized=!0;var a=To(To({},e.params),o.params);if(e.name)o.name=e.name,o.params=a;else if(e.matched.length){var s=e.matched[e.matched.length-1].path;o.path=yi(s,a,e.path)}else 0;return o}var l=function(n){var e="",t="",r=n.indexOf("#");r>=0&&(e=n.slice(r),n=n.slice(0,r));var o=n.indexOf("?");return o>=0&&(t=n.slice(o+1),n=n.slice(0,o)),{path:n,query:t,hash:e}}(o.path||""),c=e&&e.path||"/",u=l.path?ni(l.path,c,t||o.append):c,p=function(n,e,t){void 0===e&&(e={});var r,o=t||No;try{r=o(n||"")}catch(n){r={}}for(var i in e)r[i]=e[i];return r}(l.query,o.query,r&&r.options.parseQuery),d=o.hash||l.hash;return d&&"#"!==d.charAt(0)&&(d="#"+d),{_normalized:!0,path:u,query:p,hash:d}}var xi,Ci=function(){},$i={name:"RouterLink",props:{to:{type:[String,Object],required:!0},tag:{type:String,default:"a"},exact:Boolean,append:Boolean,replace:Boolean,activeClass:String,exactActiveClass:String,ariaCurrentValue:{type:String,default:"page"},event:{type:[String,Array],default:"click"}},render:function(n){var e=this,t=this.$router,r=this.$route,o=t.resolve(this.to,r,this.append),i=o.location,a=o.route,s=o.href,l={},c=t.options.linkActiveClass,u=t.options.linkExactActiveClass,p=null==c?"router-link-active":c,d=null==u?"router-link-exact-active":u,f=null==this.activeClass?p:this.activeClass,h=null==this.exactActiveClass?d:this.exactActiveClass,m=a.redirectedFrom?Vo(null,Ei(a.redirectedFrom),null,t):a;l[h]=Qo(r,m),l[f]=this.exact?l[h]:function(n,e){return 0===n.path.replace(zo,"/").indexOf(e.path.replace(zo,"/"))&&(!e.hash||n.hash===e.hash)&&function(n,e){for(var t in e)if(!(t in n))return!1;return!0}(n.query,e.query)}(r,m);var g=l[h]?this.ariaCurrentValue:null,v=function(n){wi(n)&&(e.replace?t.replace(i,Ci):t.push(i,Ci))},b={click:wi};Array.isArray(this.event)?this.event.forEach((function(n){b[n]=v})):b[this.event]=v;var y={class:l},E=!this.$scopedSlots.$hasNormal&&this.$scopedSlots.default&&this.$scopedSlots.default({href:s,route:a,navigate:v,isActive:l[f],isExactActive:l[h]});if(E){if(1===E.length)return E[0];if(E.length>1||!E.length)return 0===E.length?n():n("span",{},E)}if("a"===this.tag)y.on=b,y.attrs={href:s,"aria-current":g};else{var x=function n(e){var t;if(e)for(var r=0;r<e.length;r++){if("a"===(t=e[r]).tag)return t;if(t.children&&(t=n(t.children)))return t}}(this.$slots.default);if(x){x.isStatic=!1;var C=x.data=To({},x.data);for(var $ in C.on=C.on||{},C.on){var w=C.on[$];$ in b&&(C.on[$]=Array.isArray(w)?w:[w])}for(var A in b)A in C.on?C.on[A].push(b[A]):C.on[A]=v;var _=x.data.attrs=To({},x.data.attrs);_.href=s,_["aria-current"]=g}else y.on=b}return n(this.tag,y,this.$slots.default)}};function wi(n){if(!(n.metaKey||n.altKey||n.ctrlKey||n.shiftKey||n.defaultPrevented||void 0!==n.button&&0!==n.button)){if(n.currentTarget&&n.currentTarget.getAttribute){var e=n.currentTarget.getAttribute("target");if(/\b_blank\b/i.test(e))return}return n.preventDefault&&n.preventDefault(),!0}}var Ai="undefined"!=typeof window;function _i(n,e,t,r){var o=e||[],i=t||Object.create(null),a=r||Object.create(null);n.forEach((function(n){!function n(e,t,r,o,i,a){var s=o.path,l=o.name;0;var c=o.pathToRegexpOptions||{},u=function(n,e,t){t||(n=n.replace(/\/$/,""));if("/"===n[0])return n;if(null==e)return n;return ei(e.path+"/"+n)}(s,i,c.strict);"boolean"==typeof o.caseSensitive&&(c.sensitive=o.caseSensitive);var p={path:u,regex:Bi(u,c),components:o.components||{default:o.component},instances:{},name:l,parent:i,matchAs:a,redirect:o.redirect,beforeEnter:o.beforeEnter,meta:o.meta||{},props:null==o.props?{}:o.components?o.props:{default:o.props}};o.children&&o.children.forEach((function(o){var i=a?ei(a+"/"+o.path):void 0;n(e,t,r,o,p,i)}));t[p.path]||(e.push(p.path),t[p.path]=p);if(void 0!==o.alias)for(var d=Array.isArray(o.alias)?o.alias:[o.alias],f=0;f<d.length;++f){0;var h={path:d[f],children:o.children};n(e,t,r,h,i,p.path||"/")}l&&(r[l]||(r[l]=p))}(o,i,a,n)}));for(var s=0,l=o.length;s<l;s++)"*"===o[s]&&(o.push(o.splice(s,1)[0]),l--,s--);return{pathList:o,pathMap:i,nameMap:a}}function Bi(n,e){return ri(n,[],e)}function ki(n,e){var t=_i(n),r=t.pathList,o=t.pathMap,i=t.nameMap;function a(n,t,a){var s=Ei(n,t,!1,e),c=s.name;if(c){var u=i[c];if(!u)return l(null,s);var p=u.regex.keys.filter((function(n){return!n.optional})).map((function(n){return n.name}));if("object"!=typeof s.params&&(s.params={}),t&&"object"==typeof t.params)for(var d in t.params)!(d in s.params)&&p.indexOf(d)>-1&&(s.params[d]=t.params[d]);return s.path=yi(u.path,s.params),l(u,s,a)}if(s.path){s.params={};for(var f=0;f<r.length;f++){var h=r[f],m=o[h];if(ji(m.regex,s.path,s.params))return l(m,s,a)}}return l(null,s)}function s(n,t){var r=n.redirect,o="function"==typeof r?r(Vo(n,t,null,e)):r;if("string"==typeof o&&(o={path:o}),!o||"object"!=typeof o)return l(null,t);var s=o,c=s.name,u=s.path,p=t.query,d=t.hash,f=t.params;if(p=s.hasOwnProperty("query")?s.query:p,d=s.hasOwnProperty("hash")?s.hash:d,f=s.hasOwnProperty("params")?s.params:f,c){i[c];return a({_normalized:!0,name:c,query:p,hash:d,params:f},void 0,t)}if(u){var h=function(n,e){return ni(n,e.parent?e.parent.path:"/",!0)}(u,n);return a({_normalized:!0,path:yi(h,f),query:p,hash:d},void 0,t)}return l(null,t)}function l(n,t,r){return n&&n.redirect?s(n,r||t):n&&n.matchAs?function(n,e,t){var r=a({_normalized:!0,path:yi(t,e.params)});if(r){var o=r.matched,i=o[o.length-1];return e.params=r.params,l(i,e)}return l(null,e)}(0,t,n.matchAs):Vo(n,t,r,e)}return{match:a,addRoutes:function(n){_i(n,r,o,i)}}}function ji(n,e,t){var r=e.match(n);if(!r)return!1;if(!t)return!0;for(var o=1,i=r.length;o<i;++o){var a=n.keys[o-1],s="string"==typeof r[o]?decodeURIComponent(r[o]):r[o];a&&(t[a.name||"pathMatch"]=s)}return!0}var Ii=Ai&&window.performance&&window.performance.now?window.performance:Date;function Si(){return Ii.now().toFixed(3)}var Pi=Si();function Di(){return Pi}function Xi(n){return Pi=n}var Li=Object.create(null);function Ti(){"scrollRestoration"in window.history&&(window.history.scrollRestoration="manual");var n=window.location.protocol+"//"+window.location.host,e=window.location.href.replace(n,""),t=To({},window.history.state);return t.key=Di(),window.history.replaceState(t,"",e),window.addEventListener("popstate",Oi),function(){window.removeEventListener("popstate",Oi)}}function Ri(n,e,t,r){if(n.app){var o=n.options.scrollBehavior;o&&n.app.$nextTick((function(){var i=function(){var n=Di();if(n)return Li[n]}(),a=o.call(n,e,t,r?i:null);a&&("function"==typeof a.then?a.then((function(n){Ni(n,i)})).catch((function(n){0})):Ni(a,i))}))}}function qi(){var n=Di();n&&(Li[n]={x:window.pageXOffset,y:window.pageYOffset})}function Oi(n){qi(),n.state&&n.state.key&&Xi(n.state.key)}function Ui(n){return Fi(n.x)||Fi(n.y)}function Mi(n){return{x:Fi(n.x)?n.x:window.pageXOffset,y:Fi(n.y)?n.y:window.pageYOffset}}function Fi(n){return"number"==typeof n}var Hi=/^#\d/;function Ni(n,e){var t,r="object"==typeof n;if(r&&"string"==typeof n.selector){var o=Hi.test(n.selector)?document.getElementById(n.selector.slice(1)):document.querySelector(n.selector);if(o){var i=n.offset&&"object"==typeof n.offset?n.offset:{};e=function(n,e){var t=document.documentElement.getBoundingClientRect(),r=n.getBoundingClientRect();return{x:r.left-t.left-e.x,y:r.top-t.top-e.y}}(o,i={x:Fi((t=i).x)?t.x:0,y:Fi(t.y)?t.y:0})}else Ui(n)&&(e=Mi(n))}else r&&Ui(n)&&(e=Mi(n));e&&window.scrollTo(e.x,e.y)}var Gi,zi=Ai&&((-1===(Gi=window.navigator.userAgent).indexOf("Android 2.")&&-1===Gi.indexOf("Android 4.0")||-1===Gi.indexOf("Mobile Safari")||-1!==Gi.indexOf("Chrome")||-1!==Gi.indexOf("Windows Phone"))&&window.history&&"function"==typeof window.history.pushState);function Vi(n,e){qi();var t=window.history;try{if(e){var r=To({},t.state);r.key=Di(),t.replaceState(r,"",n)}else t.pushState({key:Xi(Si())},"",n)}catch(t){window.location[e?"replace":"assign"](n)}}function Wi(n){Vi(n,!0)}function Ji(n,e,t){var r=function(o){o>=n.length?t():n[o]?e(n[o],(function(){r(o+1)})):r(o+1)};r(0)}function Yi(n){return function(e,t,r){var o=!1,i=0,a=null;Ki(n,(function(n,e,t,s){if("function"==typeof n&&void 0===n.cid){o=!0,i++;var l,c=na((function(e){var o;((o=e).__esModule||Zi&&"Module"===o[Symbol.toStringTag])&&(e=e.default),n.resolved="function"==typeof e?e:xi.extend(e),t.components[s]=e,--i<=0&&r()})),u=na((function(n){var e="Failed to resolve async component "+s+": "+n;a||(a=Xo(n)?n:new Error(e),r(a))}));try{l=n(c,u)}catch(n){u(n)}if(l)if("function"==typeof l.then)l.then(c,u);else{var p=l.component;p&&"function"==typeof p.then&&p.then(c,u)}}})),o||r()}}function Ki(n,e){return Qi(n.map((function(n){return Object.keys(n.components).map((function(t){return e(n.components[t],n.instances[t],n,t)}))})))}function Qi(n){return Array.prototype.concat.apply([],n)}var Zi="function"==typeof Symbol&&"symbol"==typeof Symbol.toStringTag;function na(n){var e=!1;return function(){for(var t=[],r=arguments.length;r--;)t[r]=arguments[r];if(!e)return e=!0,n.apply(this,t)}}var ea=1,ta=2,ra=3,oa=4;function ia(n,e){return aa(n,e,ea,'Redirected from "'+n.fullPath+'" to "'+function(n){if("string"==typeof n)return n;if("path"in n)return n.path;var e={};return sa.forEach((function(t){t in n&&(e[t]=n[t])})),JSON.stringify(e,null,2)}(e)+'" via a navigation guard.')}function aa(n,e,t,r){var o=new Error(r);o._isRouter=!0,o.from=n,o.to=e,o.type=t;var i=o.stack.split("\n");return i.splice(1,2),o.stack=i.join("\n"),o}var sa=["params","query","hash"];var la=function(n,e){this.router=n,this.base=function(n){if(!n)if(Ai){var e=document.querySelector("base");n=(n=e&&e.getAttribute("href")||"/").replace(/^https?:\/\/[^\/]+/,"")}else n="/";"/"!==n.charAt(0)&&(n="/"+n);return n.replace(/\/$/,"")}(e),this.current=Jo,this.pending=null,this.ready=!1,this.readyCbs=[],this.readyErrorCbs=[],this.errorCbs=[],this.listeners=[]};function ca(n,e,t,r){var o=Ki(n,(function(n,r,o,i){var a=function(n,e){"function"!=typeof n&&(n=xi.extend(n));return n.options[e]}(n,e);if(a)return Array.isArray(a)?a.map((function(n){return t(n,r,o,i)})):t(a,r,o,i)}));return Qi(r?o.reverse():o)}function ua(n,e){if(e)return function(){return n.apply(e,arguments)}}la.prototype.listen=function(n){this.cb=n},la.prototype.onReady=function(n,e){this.ready?n():(this.readyCbs.push(n),e&&this.readyErrorCbs.push(e))},la.prototype.onError=function(n){this.errorCbs.push(n)},la.prototype.transitionTo=function(n,e,t){var r=this,o=this.router.match(n,this.current);this.confirmTransition(o,(function(){var n=r.current;r.updateRoute(o),e&&e(o),r.ensureURL(),r.router.afterHooks.forEach((function(e){e&&e(o,n)})),r.ready||(r.ready=!0,r.readyCbs.forEach((function(n){n(o)})))}),(function(n){t&&t(n),n&&!r.ready&&(r.ready=!0,r.readyErrorCbs.forEach((function(e){e(n)})))}))},la.prototype.confirmTransition=function(n,e,t){var r,o=this,i=this.current,a=function(n){!Lo(n)&&Xo(n)&&(o.errorCbs.length?o.errorCbs.forEach((function(e){e(n)})):console.error(n)),t&&t(n)};if(Qo(n,i)&&n.matched.length===i.matched.length)return this.ensureURL(),a(aa(r=i,n,oa,'Avoided redundant navigation to current location: "'+r.fullPath+'".'));var s=function(n,e){var t,r=Math.max(n.length,e.length);for(t=0;t<r&&n[t]===e[t];t++);return{updated:e.slice(0,t),activated:e.slice(t),deactivated:n.slice(t)}}(this.current.matched,n.matched),l=s.updated,c=s.deactivated,u=s.activated,p=[].concat(function(n){return ca(n,"beforeRouteLeave",ua,!0)}(c),this.router.beforeHooks,function(n){return ca(n,"beforeRouteUpdate",ua)}(l),u.map((function(n){return n.beforeEnter})),Yi(u));this.pending=n;var d=function(e,t){if(o.pending!==n)return a(function(n,e){return aa(n,e,ra,'Navigation cancelled from "'+n.fullPath+'" to "'+e.fullPath+'" with a new navigation.')}(i,n));try{e(n,i,(function(e){!1===e?(o.ensureURL(!0),a(function(n,e){return aa(n,e,ta,'Navigation aborted from "'+n.fullPath+'" to "'+e.fullPath+'" via a navigation guard.')}(i,n))):Xo(e)?(o.ensureURL(!0),a(e)):"string"==typeof e||"object"==typeof e&&("string"==typeof e.path||"string"==typeof e.name)?(a(ia(i,n)),"object"==typeof e&&e.replace?o.replace(e):o.push(e)):t(e)}))}catch(n){a(n)}};Ji(p,d,(function(){var t=[];Ji(function(n,e,t){return ca(n,"beforeRouteEnter",(function(n,r,o,i){return function(n,e,t,r,o){return function(i,a,s){return n(i,a,(function(n){"function"==typeof n&&r.push((function(){!function n(e,t,r,o){t[r]&&!t[r]._isBeingDestroyed?e(t[r]):o()&&setTimeout((function(){n(e,t,r,o)}),16)}(n,e.instances,t,o)})),s(n)}))}}(n,o,i,e,t)}))}(u,t,(function(){return o.current===n})).concat(o.router.resolveHooks),d,(function(){if(o.pending!==n)return a();o.pending=null,e(n),o.router.app&&o.router.app.$nextTick((function(){t.forEach((function(n){n()}))}))}))}))},la.prototype.updateRoute=function(n){this.current=n,this.cb&&this.cb(n)},la.prototype.setupListeners=function(){},la.prototype.teardownListeners=function(){this.listeners.forEach((function(n){n()})),this.listeners=[]};var pa=function(n){function e(e,t){n.call(this,e,t),this._startLocation=da(this.base)}return n&&(e.__proto__=n),e.prototype=Object.create(n&&n.prototype),e.prototype.constructor=e,e.prototype.setupListeners=function(){var n=this;if(!(this.listeners.length>0)){var e=this.router,t=e.options.scrollBehavior,r=zi&&t;r&&this.listeners.push(Ti());var o=function(){var t=n.current,o=da(n.base);n.current===Jo&&o===n._startLocation||n.transitionTo(o,(function(n){r&&Ri(e,n,t,!0)}))};window.addEventListener("popstate",o),this.listeners.push((function(){window.removeEventListener("popstate",o)}))}},e.prototype.go=function(n){window.history.go(n)},e.prototype.push=function(n,e,t){var r=this,o=this.current;this.transitionTo(n,(function(n){Vi(ei(r.base+n.fullPath)),Ri(r.router,n,o,!1),e&&e(n)}),t)},e.prototype.replace=function(n,e,t){var r=this,o=this.current;this.transitionTo(n,(function(n){Wi(ei(r.base+n.fullPath)),Ri(r.router,n,o,!1),e&&e(n)}),t)},e.prototype.ensureURL=function(n){if(da(this.base)!==this.current.fullPath){var e=ei(this.base+this.current.fullPath);n?Vi(e):Wi(e)}},e.prototype.getCurrentLocation=function(){return da(this.base)},e}(la);function da(n){var e=decodeURI(window.location.pathname);return n&&0===e.toLowerCase().indexOf(n.toLowerCase())&&(e=e.slice(n.length)),(e||"/")+window.location.search+window.location.hash}var fa=function(n){function e(e,t,r){n.call(this,e,t),r&&function(n){var e=da(n);if(!/^\/#/.test(e))return window.location.replace(ei(n+"/#"+e)),!0}(this.base)||ha()}return n&&(e.__proto__=n),e.prototype=Object.create(n&&n.prototype),e.prototype.constructor=e,e.prototype.setupListeners=function(){var n=this;if(!(this.listeners.length>0)){var e=this.router.options.scrollBehavior,t=zi&&e;t&&this.listeners.push(Ti());var r=function(){var e=n.current;ha()&&n.transitionTo(ma(),(function(r){t&&Ri(n.router,r,e,!0),zi||ba(r.fullPath)}))},o=zi?"popstate":"hashchange";window.addEventListener(o,r),this.listeners.push((function(){window.removeEventListener(o,r)}))}},e.prototype.push=function(n,e,t){var r=this,o=this.current;this.transitionTo(n,(function(n){va(n.fullPath),Ri(r.router,n,o,!1),e&&e(n)}),t)},e.prototype.replace=function(n,e,t){var r=this,o=this.current;this.transitionTo(n,(function(n){ba(n.fullPath),Ri(r.router,n,o,!1),e&&e(n)}),t)},e.prototype.go=function(n){window.history.go(n)},e.prototype.ensureURL=function(n){var e=this.current.fullPath;ma()!==e&&(n?va(e):ba(e))},e.prototype.getCurrentLocation=function(){return ma()},e}(la);function ha(){var n=ma();return"/"===n.charAt(0)||(ba("/"+n),!1)}function ma(){var n=window.location.href,e=n.indexOf("#");if(e<0)return"";var t=(n=n.slice(e+1)).indexOf("?");if(t<0){var r=n.indexOf("#");n=r>-1?decodeURI(n.slice(0,r))+n.slice(r):decodeURI(n)}else n=decodeURI(n.slice(0,t))+n.slice(t);return n}function ga(n){var e=window.location.href,t=e.indexOf("#");return(t>=0?e.slice(0,t):e)+"#"+n}function va(n){zi?Vi(ga(n)):window.location.hash=n}function ba(n){zi?Wi(ga(n)):window.location.replace(ga(n))}var ya=function(n){function e(e,t){n.call(this,e,t),this.stack=[],this.index=-1}return n&&(e.__proto__=n),e.prototype=Object.create(n&&n.prototype),e.prototype.constructor=e,e.prototype.push=function(n,e,t){var r=this;this.transitionTo(n,(function(n){r.stack=r.stack.slice(0,r.index+1).concat(n),r.index++,e&&e(n)}),t)},e.prototype.replace=function(n,e,t){var r=this;this.transitionTo(n,(function(n){r.stack=r.stack.slice(0,r.index).concat(n),e&&e(n)}),t)},e.prototype.go=function(n){var e=this,t=this.index+n;if(!(t<0||t>=this.stack.length)){var r=this.stack[t];this.confirmTransition(r,(function(){e.index=t,e.updateRoute(r)}),(function(n){Lo(n,oa)&&(e.index=t)}))}},e.prototype.getCurrentLocation=function(){var n=this.stack[this.stack.length-1];return n?n.fullPath:"/"},e.prototype.ensureURL=function(){},e}(la),Ea=function(n){void 0===n&&(n={}),this.app=null,this.apps=[],this.options=n,this.beforeHooks=[],this.resolveHooks=[],this.afterHooks=[],this.matcher=ki(n.routes||[],this);var e=n.mode||"hash";switch(this.fallback="history"===e&&!zi&&!1!==n.fallback,this.fallback&&(e="hash"),Ai||(e="abstract"),this.mode=e,e){case"history":this.history=new pa(this,n.base);break;case"hash":this.history=new fa(this,n.base,this.fallback);break;case"abstract":this.history=new ya(this,n.base);break;default:0}},xa={currentRoute:{configurable:!0}};function Ca(n,e){return n.push(e),function(){var t=n.indexOf(e);t>-1&&n.splice(t,1)}}Ea.prototype.match=function(n,e,t){return this.matcher.match(n,e,t)},xa.currentRoute.get=function(){return this.history&&this.history.current},Ea.prototype.init=function(n){var e=this;if(this.apps.push(n),n.$once("hook:destroyed",(function(){var t=e.apps.indexOf(n);t>-1&&e.apps.splice(t,1),e.app===n&&(e.app=e.apps[0]||null),e.app||e.history.teardownListeners()})),!this.app){this.app=n;var t=this.history;if(t instanceof pa||t instanceof fa){var r=function(){t.setupListeners()};t.transitionTo(t.getCurrentLocation(),r,r)}t.listen((function(n){e.apps.forEach((function(e){e._route=n}))}))}},Ea.prototype.beforeEach=function(n){return Ca(this.beforeHooks,n)},Ea.prototype.beforeResolve=function(n){return Ca(this.resolveHooks,n)},Ea.prototype.afterEach=function(n){return Ca(this.afterHooks,n)},Ea.prototype.onReady=function(n,e){this.history.onReady(n,e)},Ea.prototype.onError=function(n){this.history.onError(n)},Ea.prototype.push=function(n,e,t){var r=this;if(!e&&!t&&"undefined"!=typeof Promise)return new Promise((function(e,t){r.history.push(n,e,t)}));this.history.push(n,e,t)},Ea.prototype.replace=function(n,e,t){var r=this;if(!e&&!t&&"undefined"!=typeof Promise)return new Promise((function(e,t){r.history.replace(n,e,t)}));this.history.replace(n,e,t)},Ea.prototype.go=function(n){this.history.go(n)},Ea.prototype.back=function(){this.go(-1)},Ea.prototype.forward=function(){this.go(1)},Ea.prototype.getMatchedComponents=function(n){var e=n?n.matched?n:this.resolve(n).route:this.currentRoute;return e?[].concat.apply([],e.matched.map((function(n){return Object.keys(n.components).map((function(e){return n.components[e]}))}))):[]},Ea.prototype.resolve=function(n,e,t){var r=Ei(n,e=e||this.history.current,t,this),o=this.match(r,e),i=o.redirectedFrom||o.fullPath;return{location:r,route:o,href:function(n,e,t){var r="hash"===t?"#"+e:e;return n?ei(n+"/"+r):r}(this.history.base,i,this.mode),normalizedTo:r,resolved:o}},Ea.prototype.addRoutes=function(n){this.matcher.addRoutes(n),this.history.current!==Jo&&this.history.transitionTo(this.history.getCurrentLocation())},Object.defineProperties(Ea.prototype,xa),Ea.install=function n(e){if(!n.installed||xi!==e){n.installed=!0,xi=e;var t=function(n){return void 0!==n},r=function(n,e){var r=n.$options._parentVnode;t(r)&&t(r=r.data)&&t(r=r.registerRouteInstance)&&r(n,e)};e.mixin({beforeCreate:function(){t(this.$options.router)?(this._routerRoot=this,this._router=this.$options.router,this._router.init(this),e.util.defineReactive(this,"_route",this._router.history.current)):this._routerRoot=this.$parent&&this.$parent._routerRoot||this,r(this,this)},destroyed:function(){r(this)}}),Object.defineProperty(e.prototype,"$router",{get:function(){return this._routerRoot._router}}),Object.defineProperty(e.prototype,"$route",{get:function(){return this._routerRoot._route}}),e.component("RouterView",Ro),e.component("RouterLink",$i);var o=e.config.optionMergeStrategies;o.beforeRouteEnter=o.beforeRouteLeave=o.beforeRouteUpdate=o.created}},Ea.version="3.3.1",Ai&&window.Vue&&window.Vue.use(Ea);var $a=Ea;t(96),t(196),t(198),t(177),t(134),t(93),t(200),t(97);function wa(n){n.locales&&Object.keys(n.locales).forEach((function(e){n.locales[e].path=e})),Object.freeze(n)}t(178),t(137),t(44),t(180),t(67),t(48),t(57),t(82);function Aa(n){return(Aa="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(n){return typeof n}:function(n){return n&&"function"==typeof Symbol&&n.constructor===Symbol&&n!==Symbol.prototype?"symbol":typeof n})(n)}var _a=t(41),Ba={NotFound:function(){return t.e(13).then(t.bind(null,372))},Layout:function(){return Promise.all([t.e(0),t.e(2)]).then(t.bind(null,371))}},ka={"v-12f49ed1":function(){return t.e(14).then(t.bind(null,373))},"v-2399df71":function(){return t.e(15).then(t.bind(null,374))},"v-17653de5":function(){return t.e(16).then(t.bind(null,375))},"v-748d7c51":function(){return t.e(17).then(t.bind(null,376))},"v-e6fe431e":function(){return t.e(5).then(t.bind(null,377))},"v-50769dd1":function(){return t.e(18).then(t.bind(null,378))},"v-d8292974":function(){return t.e(19).then(t.bind(null,379))},"v-43e69ee6":function(){return t.e(20).then(t.bind(null,380))},"v-1a6a2074":function(){return t.e(21).then(t.bind(null,381))},"v-4cd237d8":function(){return t.e(22).then(t.bind(null,382))},"v-2db98706":function(){return t.e(23).then(t.bind(null,383))},"v-a651c290":function(){return t.e(6).then(t.bind(null,384))},"v-7d1aff74":function(){return t.e(24).then(t.bind(null,385))},"v-cb6b8858":function(){return t.e(25).then(t.bind(null,386))},"v-174bb19a":function(){return t.e(27).then(t.bind(null,387))},"v-4e50b4e8":function(){return t.e(26).then(t.bind(null,388))},"v-7f2bdd74":function(){return t.e(3).then(t.bind(null,389))},"v-53fe9b06":function(){return t.e(28).then(t.bind(null,390))},"v-4987e38a":function(){return t.e(7).then(t.bind(null,391))},"v-10992fca":function(){return t.e(29).then(t.bind(null,392))},"v-0b5b6499":function(){return t.e(31).then(t.bind(null,393))},"v-93dc3e0a":function(){return t.e(30).then(t.bind(null,394))},"v-1e0a44bd":function(){return t.e(32).then(t.bind(null,395))},"v-083339fd":function(){return t.e(33).then(t.bind(null,396))},"v-70ed3056":function(){return t.e(34).then(t.bind(null,397))},"v-03b9b5c6":function(){return t.e(8).then(t.bind(null,398))},"v-364f4d5d":function(){return t.e(35).then(t.bind(null,399))},"v-fc9616fa":function(){return t.e(36).then(t.bind(null,400))},"v-1f1b2916":function(){return t.e(37).then(t.bind(null,401))},"v-df345ac6":function(){return t.e(38).then(t.bind(null,402))},"v-47441701":function(){return t.e(39).then(t.bind(null,403))},"v-c4b477ae":function(){return t.e(40).then(t.bind(null,404))},"v-8e55b9c6":function(){return t.e(41).then(t.bind(null,405))},"v-1bf73dc6":function(){return t.e(42).then(t.bind(null,406))},"v-73232377":function(){return t.e(43).then(t.bind(null,407))},"v-5a42ab6a":function(){return t.e(44).then(t.bind(null,408))},"v-03e2b4b5":function(){return t.e(45).then(t.bind(null,409))},"v-24deb4fa":function(){return t.e(9).then(t.bind(null,410))},"v-776b6326":function(){return t.e(46).then(t.bind(null,411))},"v-cd05e336":function(){return t.e(47).then(t.bind(null,412))},"v-bfa7b8ea":function(){return t.e(48).then(t.bind(null,413))},"v-6186256b":function(){return t.e(49).then(t.bind(null,414))},"v-78ce2cd2":function(){return t.e(51).then(t.bind(null,415))},"v-7738ead3":function(){return t.e(50).then(t.bind(null,416))},"v-6432b42b":function(){return t.e(53).then(t.bind(null,417))},"v-3989122b":function(){return t.e(52).then(t.bind(null,418))},"v-511cc0ab":function(){return t.e(54).then(t.bind(null,419))},"v-39eb2c48":function(){return t.e(10).then(t.bind(null,420))},"v-182fb532":function(){return t.e(58).then(t.bind(null,421))},"v-04f64614":function(){return t.e(57).then(t.bind(null,422))},"v-e52ddb10":function(){return t.e(59).then(t.bind(null,423))},"v-ed7a53e4":function(){return t.e(60).then(t.bind(null,424))},"v-08103096":function(){return t.e(61).then(t.bind(null,425))},"v-beda24f0":function(){return t.e(11).then(t.bind(null,426))},"v-6a18f668":function(){return t.e(62).then(t.bind(null,427))},"v-71304e8e":function(){return t.e(12).then(t.bind(null,428))},"v-51816c30":function(){return t.e(63).then(t.bind(null,429))},"v-69924ac0":function(){return t.e(64).then(t.bind(null,430))},"v-d02f1876":function(){return t.e(65).then(t.bind(null,431))},"v-63f29e3b":function(){return t.e(66).then(t.bind(null,432))},"v-5df07c1a":function(){return t.e(67).then(t.bind(null,433))},"v-27f6cb2f":function(){return t.e(68).then(t.bind(null,434))},"v-09fe8e85":function(){return t.e(69).then(t.bind(null,435))},"v-479e0941":function(){return t.e(70).then(t.bind(null,436))},"v-100debfe":function(){return t.e(71).then(t.bind(null,437))},"v-769231f6":function(){return t.e(72).then(t.bind(null,438))},"v-156051be":function(){return t.e(73).then(t.bind(null,439))},"v-41185547":function(){return t.e(74).then(t.bind(null,440))},"v-cb2067da":function(){return t.e(75).then(t.bind(null,441))},"v-43fe63ca":function(){return t.e(76).then(t.bind(null,442))},"v-c8197536":function(){return t.e(77).then(t.bind(null,443))},"v-5f3bc395":function(){return t.e(78).then(t.bind(null,444))},"v-19276ec9":function(){return t.e(79).then(t.bind(null,445))},"v-63a33ee5":function(){return t.e(80).then(t.bind(null,446))},"v-6b3f43f6":function(){return t.e(81).then(t.bind(null,447))},"v-72184f33":function(){return t.e(82).then(t.bind(null,448))},"v-1f51f799":function(){return t.e(83).then(t.bind(null,449))},"v-24f28a45":function(){return t.e(84).then(t.bind(null,450))},"v-0a30c23a":function(){return t.e(85).then(t.bind(null,451))},"v-10396345":function(){return t.e(86).then(t.bind(null,452))},"v-7e466545":function(){return t.e(87).then(t.bind(null,453))},"v-5d4d6cc5":function(){return t.e(88).then(t.bind(null,454))},"v-bb3bbe52":function(){return t.e(89).then(t.bind(null,455))},"v-24fd19eb":function(){return t.e(90).then(t.bind(null,456))},"v-e5101580":function(){return t.e(91).then(t.bind(null,457))},"v-1d2914e0":function(){return t.e(92).then(t.bind(null,458))},"v-41494f00":function(){return t.e(93).then(t.bind(null,459))},"v-8c98cf00":function(){return t.e(94).then(t.bind(null,460))},"v-51e0a908":function(){return t.e(95).then(t.bind(null,461))},"v-3683c842":function(){return t.e(96).then(t.bind(null,462))},"v-ae688c46":function(){return t.e(97).then(t.bind(null,463))},"v-23dd47c4":function(){return t.e(98).then(t.bind(null,464))},"v-12c92a2b":function(){return t.e(55).then(t.bind(null,465))},"v-4053356b":function(){return t.e(56).then(t.bind(null,466))}};function ja(n){var e=Object.create(null);return function(t){return e[t]||(e[t]=n(t))}}var Ia=/-(\w)/g,Sa=ja((function(n){return n.replace(Ia,(function(n,e){return e?e.toUpperCase():""}))})),Pa=/\B([A-Z])/g,Da=ja((function(n){return n.replace(Pa,"-$1").toLowerCase()})),Xa=ja((function(n){return n.charAt(0).toUpperCase()+n.slice(1)}));function La(n,e){if(e)return n(e)?n(e):e.includes("-")?n(Xa(Sa(e))):n(Xa(e))||n(Da(e))}var Ta=Object.assign({},Ba,ka),Ra=function(n){return Ta[n]},qa=function(n){return ka[n]},Oa=function(n){return Ba[n]},Ua=function(n){return Do.component(n)};function Ma(n){return La(qa,n)}function Fa(n){return La(Oa,n)}function Ha(n){return La(Ra,n)}function Na(n){return La(Ua,n)}function Ga(){for(var n=arguments.length,e=new Array(n),t=0;t<n;t++)e[t]=arguments[t];return Promise.all(e.filter((function(n){return n})).map(function(){var n=Object(r.a)(regeneratorRuntime.mark((function n(e){var t;return regeneratorRuntime.wrap((function(n){for(;;)switch(n.prev=n.next){case 0:if(Na(e)||!Ha(e)){n.next=5;break}return n.next=3,Ha(e)();case 3:t=n.sent,Do.component(e,t.default);case 5:case"end":return n.stop()}}),n)})));return function(e){return n.apply(this,arguments)}}()))}function za(n,e){"undefined"!=typeof window&&window.__VUEPRESS__&&(window.__VUEPRESS__[n]=e)}t(172),t(173),t(98);var Va=t(64);function Wa(n,e){return function(n){if(Array.isArray(n))return n}(n)||function(n,e){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(n)){var t=[],r=!0,o=!1,i=void 0;try{for(var a,s=n[Symbol.iterator]();!(r=(a=s.next()).done)&&(t.push(a.value),!e||t.length!==e);r=!0);}catch(n){o=!0,i=n}finally{try{r||null==s.return||s.return()}finally{if(o)throw i}}return t}}(n,e)||Object(Va.a)(n,e)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}var Ja=t(164),Ya=t.n(Ja),Ka={created:function(){if(this.siteMeta=this.$site.headTags.filter((function(n){return"meta"===Wa(n,1)[0]})).map((function(n){var e=Wa(n,2);e[0];return e[1]})),this.$ssrContext){var n=this.getMergedMetaTags();this.$ssrContext.title=this.$title,this.$ssrContext.lang=this.$lang,this.$ssrContext.pageMeta=(e=n)?e.map((function(n){var e="<meta";return Object.keys(n).forEach((function(t){e+=" ".concat(t,'="').concat(n[t],'"')})),e+">"})).join("\n    "):""}var e},mounted:function(){this.currentMetaTags=Object(_a.a)(document.querySelectorAll("meta")),this.updateMeta()},methods:{updateMeta:function(){document.title=this.$title,document.documentElement.lang=this.$lang;var n=this.getMergedMetaTags();this.currentMetaTags=Qa(n,this.currentMetaTags)},getMergedMetaTags:function(){var n=this.$page.frontmatter.meta||[];return Ya()([{name:"description",content:this.$description}],n,this.siteMeta,Za)}},watch:{$page:function(){this.updateMeta()}},beforeDestroy:function(){Qa(null,this.currentMetaTags)}};function Qa(n,e){if(e&&Object(_a.a)(e).forEach((function(n){document.head.removeChild(n)})),n)return n.map((function(n){var e=document.createElement("meta");return Object.keys(n).forEach((function(t){e.setAttribute(t,n[t])})),document.head.appendChild(e),e}))}function Za(n){for(var e=0,t=["name","property","itemprop"];e<t.length;e++){var r=t[e];if(n.hasOwnProperty(r))return n[r]+r}return JSON.stringify(n)}t(166);var ns=t(165),es={mounted:function(){window.addEventListener("scroll",this.onScroll)},methods:{onScroll:t.n(ns)()((function(){this.setActiveHash()}),300),setActiveHash:function(){for(var n=this,e=[].slice.call(document.querySelectorAll(".sidebar-link")),t=[].slice.call(document.querySelectorAll(".header-anchor")).filter((function(n){return e.some((function(e){return e.hash===n.hash}))})),r=Math.max(window.pageYOffset,document.documentElement.scrollTop,document.body.scrollTop),o=Math.max(document.documentElement.scrollHeight,document.body.scrollHeight),i=window.innerHeight+r,a=0;a<t.length;a++){var s=t[a],l=t[a+1],c=0===a&&0===r||r>=s.parentElement.offsetTop+10&&(!l||r<l.parentElement.offsetTop-10),u=decodeURIComponent(this.$route.hash);if(c&&u!==decodeURIComponent(s.hash)){var p=s;if(i===o)for(var d=a+1;d<t.length;d++)if(u===decodeURIComponent(t[d].hash))return;return this.$vuepress.$set("disableScrollBehavior",!0),void this.$router.replace(decodeURIComponent(p.hash),(function(){n.$nextTick((function(){n.$vuepress.$set("disableScrollBehavior",!1)}))}))}}}},beforeDestroy:function(){window.removeEventListener("scroll",this.onScroll)}},ts=(t(83),t(65)),rs=t.n(ts),os=[Ka,es,{mounted:function(){var n=this;rs.a.configure({showSpinner:!1}),this.$router.beforeEach((function(n,e,t){n.path===e.path||Do.component(n.name)||rs.a.start(),t()})),this.$router.afterEach((function(){rs.a.done(),n.isSidebarOpen=!1}))}}],is={name:"GlobalLayout",computed:{layout:function(){var n=this.getLayout();return za("layout",n),Do.component(n)}},methods:{getLayout:function(){if(this.$page.path){var n=this.$page.frontmatter.layout;return n&&(this.$vuepress.getLayoutAsyncComponent(n)||this.$vuepress.getVueComponent(n))?n:"Layout"}return"NotFound"}}},as=t(43),ss=Object(as.a)(is,(function(){var n=this.$createElement;return(this._self._c||n)(this.layout,{tag:"component"})}),[],!1,null,null,null).exports;!function(n,e,t){var r;switch(e){case"components":n[e]||(n[e]={}),Object.assign(n[e],t);break;case"mixins":n[e]||(n[e]=[]),(r=n[e]).push.apply(r,Object(_a.a)(t));break;default:throw new Error("Unknown option name.")}}(ss,"mixins",os);var ls=[{name:"v-12f49ed1",path:"/01.%20%EC%8B%9C%EC%9E%91%ED%95%98%EA%B8%B0/Recommended-Specifications.html",component:ss,beforeEnter:function(n,e,t){Ga("Layout","v-12f49ed1").then(t)}},{path:"/01. 시작하기/Recommended-Specifications.html",redirect:"/01.%20%EC%8B%9C%EC%9E%91%ED%95%98%EA%B8%B0/Recommended-Specifications.html"},{name:"v-2399df71",path:"/01.%20%EC%8B%9C%EC%9E%91%ED%95%98%EA%B8%B0/core-debug.html",component:ss,beforeEnter:function(n,e,t){Ga("Layout","v-2399df71").then(t)}},{path:"/01. 시작하기/core-debug.html",redirect:"/01.%20%EC%8B%9C%EC%9E%91%ED%95%98%EA%B8%B0/core-debug.html"},{name:"v-17653de5",path:"/01.%20%EC%8B%9C%EC%9E%91%ED%95%98%EA%B8%B0/core-update.html",component:ss,beforeEnter:function(n,e,t){Ga("Layout","v-17653de5").then(t)}},{path:"/01. 시작하기/core-update.html",redirect:"/01.%20%EC%8B%9C%EC%9E%91%ED%95%98%EA%B8%B0/core-update.html"},{name:"v-748d7c51",path:"/01.%20%EC%8B%9C%EC%9E%91%ED%95%98%EA%B8%B0/installation-console.html",component:ss,beforeEnter:function(n,e,t){Ga("Layout","v-748d7c51").then(t)}},{path:"/01. 시작하기/installation-console.html",redirect:"/01.%20%EC%8B%9C%EC%9E%91%ED%95%98%EA%B8%B0/installation-console.html"},{name:"v-e6fe431e",path:"/01.%20%EC%8B%9C%EC%9E%91%ED%95%98%EA%B8%B0/installation-web.html",component:ss,beforeEnter:function(n,e,t){Ga("Layout","v-e6fe431e").then(t)}},{path:"/01. 시작하기/installation-web.html",redirect:"/01.%20%EC%8B%9C%EC%9E%91%ED%95%98%EA%B8%B0/installation-web.html"},{name:"v-50769dd1",path:"/01.%20%EC%8B%9C%EC%9E%91%ED%95%98%EA%B8%B0/use_composer.html",component:ss,beforeEnter:function(n,e,t){Ga("Layout","v-50769dd1").then(t)}},{path:"/01. 시작하기/use_composer.html",redirect:"/01.%20%EC%8B%9C%EC%9E%91%ED%95%98%EA%B8%B0/use_composer.html"},{name:"v-d8292974",path:"/02.%20%EC%82%AC%EC%9D%B4%ED%8A%B8%20%EC%84%A4%EC%A0%95/administrator-password.html",component:ss,beforeEnter:function(n,e,t){Ga("Layout","v-d8292974").then(t)}},{path:"/02. 사이트 설정/administrator-password.html",redirect:"/02.%20%EC%82%AC%EC%9D%B4%ED%8A%B8%20%EC%84%A4%EC%A0%95/administrator-password.html"},{name:"v-43e69ee6",path:"/02.%20%EC%82%AC%EC%9D%B4%ED%8A%B8%20%EC%84%A4%EC%A0%95/capcha_setup.html",component:ss,beforeEnter:function(n,e,t){Ga("Layout","v-43e69ee6").then(t)}},{path:"/02. 사이트 설정/capcha_setup.html",redirect:"/02.%20%EC%82%AC%EC%9D%B4%ED%8A%B8%20%EC%84%A4%EC%A0%95/capcha_setup.html"},{name:"v-1a6a2074",path:"/02.%20%EC%82%AC%EC%9D%B4%ED%8A%B8%20%EC%84%A4%EC%A0%95/content-management.html",component:ss,beforeEnter:function(n,e,t){Ga("Layout","v-1a6a2074").then(t)}},{path:"/02. 사이트 설정/content-management.html",redirect:"/02.%20%EC%82%AC%EC%9D%B4%ED%8A%B8%20%EC%84%A4%EC%A0%95/content-management.html"},{name:"v-4cd237d8",path:"/02.%20%EC%82%AC%EC%9D%B4%ED%8A%B8%20%EC%84%A4%EC%A0%95/default-theme-setting.html",component:ss,beforeEnter:function(n,e,t){Ga("Layout","v-4cd237d8").then(t)}},{path:"/02. 사이트 설정/default-theme-setting.html",redirect:"/02.%20%EC%82%AC%EC%9D%B4%ED%8A%B8%20%EC%84%A4%EC%A0%95/default-theme-setting.html"},{name:"v-2db98706",path:"/02.%20%EC%82%AC%EC%9D%B4%ED%8A%B8%20%EC%84%A4%EC%A0%95/extension-install-update.html",component:ss,beforeEnter:function(n,e,t){Ga("Layout","v-2db98706").then(t)}},{path:"/02. 사이트 설정/extension-install-update.html",redirect:"/02.%20%EC%82%AC%EC%9D%B4%ED%8A%B8%20%EC%84%A4%EC%A0%95/extension-install-update.html"},{name:"v-a651c290",path:"/02.%20%EC%82%AC%EC%9D%B4%ED%8A%B8%20%EC%84%A4%EC%A0%95/extern_page.html",component:ss,beforeEnter:function(n,e,t){Ga("Layout","v-a651c290").then(t)}},{path:"/02. 사이트 설정/extern_page.html",redirect:"/02.%20%EC%82%AC%EC%9D%B4%ED%8A%B8%20%EC%84%A4%EC%A0%95/extern_page.html"},{name:"v-7d1aff74",path:"/02.%20%EC%82%AC%EC%9D%B4%ED%8A%B8%20%EC%84%A4%EC%A0%95/language-setting.html",component:ss,beforeEnter:function(n,e,t){Ga("Layout","v-7d1aff74").then(t)}},{path:"/02. 사이트 설정/language-setting.html",redirect:"/02.%20%EC%82%AC%EC%9D%B4%ED%8A%B8%20%EC%84%A4%EC%A0%95/language-setting.html"},{name:"v-cb6b8858",path:"/02.%20%EC%82%AC%EC%9D%B4%ED%8A%B8%20%EC%84%A4%EC%A0%95/media_library.html",component:ss,beforeEnter:function(n,e,t){Ga("Layout","v-cb6b8858").then(t)}},{path:"/02. 사이트 설정/media_library.html",redirect:"/02.%20%EC%82%AC%EC%9D%B4%ED%8A%B8%20%EC%84%A4%EC%A0%95/media_library.html"},{name:"v-174bb19a",path:"/02.%20%EC%82%AC%EC%9D%B4%ED%8A%B8%20%EC%84%A4%EC%A0%95/seo.html",component:ss,beforeEnter:function(n,e,t){Ga("Layout","v-174bb19a").then(t)}},{path:"/02. 사이트 설정/seo.html",redirect:"/02.%20%EC%82%AC%EC%9D%B4%ED%8A%B8%20%EC%84%A4%EC%A0%95/seo.html"},{name:"v-4e50b4e8",path:"/02.%20%EC%82%AC%EC%9D%B4%ED%8A%B8%20%EC%84%A4%EC%A0%95/member-management.html",component:ss,beforeEnter:function(n,e,t){Ga("Layout","v-4e50b4e8").then(t)}},{path:"/02. 사이트 설정/member-management.html",redirect:"/02.%20%EC%82%AC%EC%9D%B4%ED%8A%B8%20%EC%84%A4%EC%A0%95/member-management.html"},{name:"v-7f2bdd74",path:"/02.%20%EC%82%AC%EC%9D%B4%ED%8A%B8%20%EC%84%A4%EC%A0%95/sitemap-management.html",component:ss,beforeEnter:function(n,e,t){Ga("Layout","v-7f2bdd74").then(t)}},{path:"/02. 사이트 설정/sitemap-management.html",redirect:"/02.%20%EC%82%AC%EC%9D%B4%ED%8A%B8%20%EC%84%A4%EC%A0%95/sitemap-management.html"},{name:"v-53fe9b06",path:"/02.%20%EC%82%AC%EC%9D%B4%ED%8A%B8%20%EC%84%A4%EC%A0%95/xe-store-token.html",component:ss,beforeEnter:function(n,e,t){Ga("Layout","v-53fe9b06").then(t)}},{path:"/02. 사이트 설정/xe-store-token.html",redirect:"/02.%20%EC%82%AC%EC%9D%B4%ED%8A%B8%20%EC%84%A4%EC%A0%95/xe-store-token.html"},{name:"v-4987e38a",path:"/03.%20%EB%B2%88%EB%93%A4%20%ED%94%8C%EB%9F%AC%EA%B7%B8%EC%9D%B8/external-page.html",component:ss,beforeEnter:function(n,e,t){Ga("Layout","v-4987e38a").then(t)}},{path:"/03. 번들 플러그인/external-page.html",redirect:"/03.%20%EB%B2%88%EB%93%A4%20%ED%94%8C%EB%9F%AC%EA%B7%B8%EC%9D%B8/external-page.html"},{name:"v-10992fca",path:"/03.%20%EB%B2%88%EB%93%A4%20%ED%94%8C%EB%9F%AC%EA%B7%B8%EC%9D%B8/media-library.html",component:ss,beforeEnter:function(n,e,t){Ga("Layout","v-10992fca").then(t)}},{path:"/03. 번들 플러그인/media-library.html",redirect:"/03.%20%EB%B2%88%EB%93%A4%20%ED%94%8C%EB%9F%AC%EA%B7%B8%EC%9D%B8/media-library.html"},{name:"v-0b5b6499",path:"/04.%20%EA%B0%9C%EB%B0%9C%EC%9E%90%20%EB%AC%B8%EC%84%9C/component.html",component:ss,beforeEnter:function(n,e,t){Ga("Layout","v-0b5b6499").then(t)}},{path:"/04. 개발자 문서/component.html",redirect:"/04.%20%EA%B0%9C%EB%B0%9C%EC%9E%90%20%EB%AC%B8%EC%84%9C/component.html"},{name:"v-93dc3e0a",path:"/03.%20%EB%B2%88%EB%93%A4%20%ED%94%8C%EB%9F%AC%EA%B7%B8%EC%9D%B8/plugin-upload.html",component:ss,beforeEnter:function(n,e,t){Ga("Layout","v-93dc3e0a").then(t)}},{path:"/03. 번들 플러그인/plugin-upload.html",redirect:"/03.%20%EB%B2%88%EB%93%A4%20%ED%94%8C%EB%9F%AC%EA%B7%B8%EC%9D%B8/plugin-upload.html"},{name:"v-1e0a44bd",path:"/04.%20%EA%B0%9C%EB%B0%9C%EC%9E%90%20%EB%AC%B8%EC%84%9C/controller.html",component:ss,beforeEnter:function(n,e,t){Ga("Layout","v-1e0a44bd").then(t)}},{path:"/04. 개발자 문서/controller.html",redirect:"/04.%20%EA%B0%9C%EB%B0%9C%EC%9E%90%20%EB%AC%B8%EC%84%9C/controller.html"},{name:"v-083339fd",path:"/04.%20%EA%B0%9C%EB%B0%9C%EC%9E%90%20%EB%AC%B8%EC%84%9C/function.html",component:ss,beforeEnter:function(n,e,t){Ga("Layout","v-083339fd").then(t)}},{path:"/04. 개발자 문서/function.html",redirect:"/04.%20%EA%B0%9C%EB%B0%9C%EC%9E%90%20%EB%AC%B8%EC%84%9C/function.html"},{name:"v-70ed3056",path:"/04.%20%EA%B0%9C%EB%B0%9C%EC%9E%90%20%EB%AC%B8%EC%84%9C/introduce.html",component:ss,beforeEnter:function(n,e,t){Ga("Layout","v-70ed3056").then(t)}},{path:"/04. 개발자 문서/introduce.html",redirect:"/04.%20%EA%B0%9C%EB%B0%9C%EC%9E%90%20%EB%AC%B8%EC%84%9C/introduce.html"},{name:"v-03b9b5c6",path:"/04.%20%EA%B0%9C%EB%B0%9C%EC%9E%90%20%EB%AC%B8%EC%84%9C/life-cycle.html",component:ss,beforeEnter:function(n,e,t){Ga("Layout","v-03b9b5c6").then(t)}},{path:"/04. 개발자 문서/life-cycle.html",redirect:"/04.%20%EA%B0%9C%EB%B0%9C%EC%9E%90%20%EB%AC%B8%EC%84%9C/life-cycle.html"},{name:"v-364f4d5d",path:"/04.%20%EA%B0%9C%EB%B0%9C%EC%9E%90%20%EB%AC%B8%EC%84%9C/plugin.html",component:ss,beforeEnter:function(n,e,t){Ga("Layout","v-364f4d5d").then(t)}},{path:"/04. 개발자 문서/plugin.html",redirect:"/04.%20%EA%B0%9C%EB%B0%9C%EC%9E%90%20%EB%AC%B8%EC%84%9C/plugin.html"},{name:"v-fc9616fa",path:"/04.%20%EA%B0%9C%EB%B0%9C%EC%9E%90%20%EB%AC%B8%EC%84%9C/presenter.html",component:ss,beforeEnter:function(n,e,t){Ga("Layout","v-fc9616fa").then(t)}},{path:"/04. 개발자 문서/presenter.html",redirect:"/04.%20%EA%B0%9C%EB%B0%9C%EC%9E%90%20%EB%AC%B8%EC%84%9C/presenter.html"},{name:"v-1f1b2916",path:"/04.%20%EA%B0%9C%EB%B0%9C%EC%9E%90%20%EB%AC%B8%EC%84%9C/request.html",component:ss,beforeEnter:function(n,e,t){Ga("Layout","v-1f1b2916").then(t)}},{path:"/04. 개발자 문서/request.html",redirect:"/04.%20%EA%B0%9C%EB%B0%9C%EC%9E%90%20%EB%AC%B8%EC%84%9C/request.html"},{name:"v-df345ac6",path:"/04.%20%EA%B0%9C%EB%B0%9C%EC%9E%90%20%EB%AC%B8%EC%84%9C/response.html",component:ss,beforeEnter:function(n,e,t){Ga("Layout","v-df345ac6").then(t)}},{path:"/04. 개발자 문서/response.html",redirect:"/04.%20%EA%B0%9C%EB%B0%9C%EC%9E%90%20%EB%AC%B8%EC%84%9C/response.html"},{name:"v-47441701",path:"/04.%20%EA%B0%9C%EB%B0%9C%EC%9E%90%20%EB%AC%B8%EC%84%9C/route.html",component:ss,beforeEnter:function(n,e,t){Ga("Layout","v-47441701").then(t)}},{path:"/04. 개발자 문서/route.html",redirect:"/04.%20%EA%B0%9C%EB%B0%9C%EC%9E%90%20%EB%AC%B8%EC%84%9C/route.html"},{name:"v-c4b477ae",path:"/04.%20%EA%B0%9C%EB%B0%9C%EC%9E%90%20%EB%AC%B8%EC%84%9C/service.html",component:ss,beforeEnter:function(n,e,t){Ga("Layout","v-c4b477ae").then(t)}},{path:"/04. 개발자 문서/service.html",redirect:"/04.%20%EA%B0%9C%EB%B0%9C%EC%9E%90%20%EB%AC%B8%EC%84%9C/service.html"},{name:"v-8e55b9c6",path:"/04.%20%EA%B0%9C%EB%B0%9C%EC%9E%90%20%EB%AC%B8%EC%84%9C/template-blade.html",component:ss,beforeEnter:function(n,e,t){Ga("Layout","v-8e55b9c6").then(t)}},{path:"/04. 개발자 문서/template-blade.html",redirect:"/04.%20%EA%B0%9C%EB%B0%9C%EC%9E%90%20%EB%AC%B8%EC%84%9C/template-blade.html"},{name:"v-1bf73dc6",path:"/04.%20%EA%B0%9C%EB%B0%9C%EC%9E%90%20%EB%AC%B8%EC%84%9C/view.html",component:ss,beforeEnter:function(n,e,t){Ga("Layout","v-1bf73dc6").then(t)}},{path:"/04. 개발자 문서/view.html",redirect:"/04.%20%EA%B0%9C%EB%B0%9C%EC%9E%90%20%EB%AC%B8%EC%84%9C/view.html"},{name:"v-73232377",path:"/04.%20%EA%B0%9C%EB%B0%9C%EC%9E%90%20%EB%AC%B8%EC%84%9C/xe-directory-info.html",component:ss,beforeEnter:function(n,e,t){Ga("Layout","v-73232377").then(t)}},{path:"/04. 개발자 문서/xe-directory-info.html",redirect:"/04.%20%EA%B0%9C%EB%B0%9C%EC%9E%90%20%EB%AC%B8%EC%84%9C/xe-directory-info.html"},{name:"v-5a42ab6a",path:"/05.%20%ED%94%8C%EB%9F%AC%EA%B7%B8%EC%9D%B8%20%EA%B0%9C%EB%B0%9C/admin-menu-extend.html",component:ss,beforeEnter:function(n,e,t){Ga("Layout","v-5a42ab6a").then(t)}},{path:"/05. 플러그인 개발/admin-menu-extend.html",redirect:"/05.%20%ED%94%8C%EB%9F%AC%EA%B7%B8%EC%9D%B8%20%EA%B0%9C%EB%B0%9C/admin-menu-extend.html"},{name:"v-03e2b4b5",path:"/05.%20%ED%94%8C%EB%9F%AC%EA%B7%B8%EC%9D%B8%20%EA%B0%9C%EB%B0%9C/common-module-make.html",component:ss,beforeEnter:function(n,e,t){Ga("Layout","v-03e2b4b5").then(t)}},{path:"/05. 플러그인 개발/common-module-make.html",redirect:"/05.%20%ED%94%8C%EB%9F%AC%EA%B7%B8%EC%9D%B8%20%EA%B0%9C%EB%B0%9C/common-module-make.html"},{name:"v-24deb4fa",path:"/05.%20%ED%94%8C%EB%9F%AC%EA%B7%B8%EC%9D%B8%20%EA%B0%9C%EB%B0%9C/common-plugin-make.html",component:ss,beforeEnter:function(n,e,t){Ga("Layout","v-24deb4fa").then(t)}},{path:"/05. 플러그인 개발/common-plugin-make.html",redirect:"/05.%20%ED%94%8C%EB%9F%AC%EA%B7%B8%EC%9D%B8%20%EA%B0%9C%EB%B0%9C/common-plugin-make.html"},{name:"v-776b6326",path:"/05.%20%ED%94%8C%EB%9F%AC%EA%B7%B8%EC%9D%B8%20%EA%B0%9C%EB%B0%9C/common-structure.html",component:ss,beforeEnter:function(n,e,t){Ga("Layout","v-776b6326").then(t)}},{path:"/05. 플러그인 개발/common-structure.html",redirect:"/05.%20%ED%94%8C%EB%9F%AC%EA%B7%B8%EC%9D%B8%20%EA%B0%9C%EB%B0%9C/common-structure.html"},{name:"v-cd05e336",path:"/05.%20%ED%94%8C%EB%9F%AC%EA%B7%B8%EC%9D%B8%20%EA%B0%9C%EB%B0%9C/common-widget-make.html",component:ss,beforeEnter:function(n,e,t){Ga("Layout","v-cd05e336").then(t)}},{path:"/05. 플러그인 개발/common-widget-make.html",redirect:"/05.%20%ED%94%8C%EB%9F%AC%EA%B7%B8%EC%9D%B8%20%EA%B0%9C%EB%B0%9C/common-widget-make.html"},{name:"v-bfa7b8ea",path:"/05.%20%ED%94%8C%EB%9F%AC%EA%B7%B8%EC%9D%B8%20%EA%B0%9C%EB%B0%9C/creator-info-edit.html",component:ss,beforeEnter:function(n,e,t){Ga("Layout","v-bfa7b8ea").then(t)}},{path:"/05. 플러그인 개발/creator-info-edit.html",redirect:"/05.%20%ED%94%8C%EB%9F%AC%EA%B7%B8%EC%9D%B8%20%EA%B0%9C%EB%B0%9C/creator-info-edit.html"},{name:"v-6186256b",path:"/05.%20%ED%94%8C%EB%9F%AC%EA%B7%B8%EC%9D%B8%20%EA%B0%9C%EB%B0%9C/dynamic-field-guide.html",component:ss,beforeEnter:function(n,e,t){Ga("Layout","v-6186256b").then(t)}},{path:"/05. 플러그인 개발/dynamic-field-guide.html",redirect:"/05.%20%ED%94%8C%EB%9F%AC%EA%B7%B8%EC%9D%B8%20%EA%B0%9C%EB%B0%9C/dynamic-field-guide.html"},{name:"v-78ce2cd2",path:"/05.%20%ED%94%8C%EB%9F%AC%EA%B7%B8%EC%9D%B8%20%EA%B0%9C%EB%B0%9C/editor-guide.html",component:ss,beforeEnter:function(n,e,t){Ga("Layout","v-78ce2cd2").then(t)}},{path:"/05. 플러그인 개발/editor-guide.html",redirect:"/05.%20%ED%94%8C%EB%9F%AC%EA%B7%B8%EC%9D%B8%20%EA%B0%9C%EB%B0%9C/editor-guide.html"},{name:"v-7738ead3",path:"/05.%20%ED%94%8C%EB%9F%AC%EA%B7%B8%EC%9D%B8%20%EA%B0%9C%EB%B0%9C/dynamic-field-skin.html",component:ss,beforeEnter:function(n,e,t){Ga("Layout","v-7738ead3").then(t)}},{path:"/05. 플러그인 개발/dynamic-field-skin.html",redirect:"/05.%20%ED%94%8C%EB%9F%AC%EA%B7%B8%EC%9D%B8%20%EA%B0%9C%EB%B0%9C/dynamic-field-skin.html"},{name:"v-6432b42b",path:"/05.%20%ED%94%8C%EB%9F%AC%EA%B7%B8%EC%9D%B8%20%EA%B0%9C%EB%B0%9C/introduce.html",component:ss,beforeEnter:function(n,e,t){Ga("Layout","v-6432b42b").then(t)}},{path:"/05. 플러그인 개발/introduce.html",redirect:"/05.%20%ED%94%8C%EB%9F%AC%EA%B7%B8%EC%9D%B8%20%EA%B0%9C%EB%B0%9C/introduce.html"},{name:"v-3989122b",path:"/05.%20%ED%94%8C%EB%9F%AC%EA%B7%B8%EC%9D%B8%20%EA%B0%9C%EB%B0%9C/editor-tool-guide.html",component:ss,beforeEnter:function(n,e,t){Ga("Layout","v-3989122b").then(t)}},{path:"/05. 플러그인 개발/editor-tool-guide.html",redirect:"/05.%20%ED%94%8C%EB%9F%AC%EA%B7%B8%EC%9D%B8%20%EA%B0%9C%EB%B0%9C/editor-tool-guide.html"},{name:"v-511cc0ab",path:"/05.%20%ED%94%8C%EB%9F%AC%EA%B7%B8%EC%9D%B8%20%EA%B0%9C%EB%B0%9C/package-information.html",component:ss,beforeEnter:function(n,e,t){Ga("Layout","v-511cc0ab").then(t)}},{path:"/05. 플러그인 개발/package-information.html",redirect:"/05.%20%ED%94%8C%EB%9F%AC%EA%B7%B8%EC%9D%B8%20%EA%B0%9C%EB%B0%9C/package-information.html"},{name:"v-39eb2c48",path:"/06.%20%ED%85%8C%EB%A7%88%20%EA%B0%9C%EB%B0%9C&%EC%A0%9C%EC%9E%91/common-theme-make.html",component:ss,beforeEnter:function(n,e,t){Ga("Layout","v-39eb2c48").then(t)}},{path:"/06. 테마 개발&제작/common-theme-make.html",redirect:"/06.%20%ED%85%8C%EB%A7%88%20%EA%B0%9C%EB%B0%9C&%EC%A0%9C%EC%9E%91/common-theme-make.html"},{name:"v-182fb532",path:"/06.%20%ED%85%8C%EB%A7%88%20%EA%B0%9C%EB%B0%9C&%EC%A0%9C%EC%9E%91/introduce.html",component:ss,beforeEnter:function(n,e,t){Ga("Layout","v-182fb532").then(t)}},{path:"/06. 테마 개발&제작/introduce.html",redirect:"/06.%20%ED%85%8C%EB%A7%88%20%EA%B0%9C%EB%B0%9C&%EC%A0%9C%EC%9E%91/introduce.html"},{name:"v-04f64614",path:"/06.%20%ED%85%8C%EB%A7%88%20%EA%B0%9C%EB%B0%9C&%EC%A0%9C%EC%9E%91/common-structure.html",component:ss,beforeEnter:function(n,e,t){Ga("Layout","v-04f64614").then(t)}},{path:"/06. 테마 개발&제작/common-structure.html",redirect:"/06.%20%ED%85%8C%EB%A7%88%20%EA%B0%9C%EB%B0%9C&%EC%A0%9C%EC%9E%91/common-structure.html"},{name:"v-e52ddb10",path:"/06.%20%ED%85%8C%EB%A7%88%20%EA%B0%9C%EB%B0%9C&%EC%A0%9C%EC%9E%91/sub-theme.html",component:ss,beforeEnter:function(n,e,t){Ga("Layout","v-e52ddb10").then(t)}},{path:"/06. 테마 개발&제작/sub-theme.html",redirect:"/06.%20%ED%85%8C%EB%A7%88%20%EA%B0%9C%EB%B0%9C&%EC%A0%9C%EC%9E%91/sub-theme.html"},{name:"v-ed7a53e4",path:"/06.%20%ED%85%8C%EB%A7%88%20%EA%B0%9C%EB%B0%9C&%EC%A0%9C%EC%9E%91/theme-config-edit.html",component:ss,beforeEnter:function(n,e,t){Ga("Layout","v-ed7a53e4").then(t)}},{path:"/06. 테마 개발&제작/theme-config-edit.html",redirect:"/06.%20%ED%85%8C%EB%A7%88%20%EA%B0%9C%EB%B0%9C&%EC%A0%9C%EC%9E%91/theme-config-edit.html"},{name:"v-08103096",path:"/06.%20%ED%85%8C%EB%A7%88%20%EA%B0%9C%EB%B0%9C&%EC%A0%9C%EC%9E%91/theme-edit.html",component:ss,beforeEnter:function(n,e,t){Ga("Layout","v-08103096").then(t)}},{path:"/06. 테마 개발&제작/theme-edit.html",redirect:"/06.%20%ED%85%8C%EB%A7%88%20%EA%B0%9C%EB%B0%9C&%EC%A0%9C%EC%9E%91/theme-edit.html"},{name:"v-beda24f0",path:"/07.%20%EC%8A%A4%ED%82%A8%20%EA%B0%9C%EB%B0%9C&%EC%A0%9C%EC%9E%91/common-skin-make.html",component:ss,beforeEnter:function(n,e,t){Ga("Layout","v-beda24f0").then(t)}},{path:"/07. 스킨 개발&제작/common-skin-make.html",redirect:"/07.%20%EC%8A%A4%ED%82%A8%20%EA%B0%9C%EB%B0%9C&%EC%A0%9C%EC%9E%91/common-skin-make.html"},{name:"v-6a18f668",path:"/07.%20%EC%8A%A4%ED%82%A8%20%EA%B0%9C%EB%B0%9C&%EC%A0%9C%EC%9E%91/common-structure.html",component:ss,beforeEnter:function(n,e,t){Ga("Layout","v-6a18f668").then(t)}},{path:"/07. 스킨 개발&제작/common-structure.html",redirect:"/07.%20%EC%8A%A4%ED%82%A8%20%EA%B0%9C%EB%B0%9C&%EC%A0%9C%EC%9E%91/common-structure.html"},{name:"v-71304e8e",path:"/07.%20%EC%8A%A4%ED%82%A8%20%EA%B0%9C%EB%B0%9C&%EC%A0%9C%EC%9E%91/introduce.html",component:ss,beforeEnter:function(n,e,t){Ga("Layout","v-71304e8e").then(t)}},{path:"/07. 스킨 개발&제작/introduce.html",redirect:"/07.%20%EC%8A%A4%ED%82%A8%20%EA%B0%9C%EB%B0%9C&%EC%A0%9C%EC%9E%91/introduce.html"},{name:"v-51816c30",path:"/07.%20%EC%8A%A4%ED%82%A8%20%EA%B0%9C%EB%B0%9C&%EC%A0%9C%EC%9E%91/skin-config-edit.html",component:ss,beforeEnter:function(n,e,t){Ga("Layout","v-51816c30").then(t)}},{path:"/07. 스킨 개발&제작/skin-config-edit.html",redirect:"/07.%20%EC%8A%A4%ED%82%A8%20%EA%B0%9C%EB%B0%9C&%EC%A0%9C%EC%9E%91/skin-config-edit.html"},{name:"v-69924ac0",path:"/08.%20%EC%84%9C%EB%B9%84%EC%8A%A4/",component:ss,beforeEnter:function(n,e,t){Ga("Layout","v-69924ac0").then(t)}},{path:"/08. 서비스/",redirect:"/08.%20%EC%84%9C%EB%B9%84%EC%8A%A4/"},{path:"/08.%20%EC%84%9C%EB%B9%84%EC%8A%A4/index.html",redirect:"/08.%20%EC%84%9C%EB%B9%84%EC%8A%A4/"},{name:"v-d02f1876",path:"/08.%20%EC%84%9C%EB%B9%84%EC%8A%A4/service-captcha.html",component:ss,beforeEnter:function(n,e,t){Ga("Layout","v-d02f1876").then(t)}},{path:"/08. 서비스/service-captcha.html",redirect:"/08.%20%EC%84%9C%EB%B9%84%EC%8A%A4/service-captcha.html"},{name:"v-63f29e3b",path:"/08.%20%EC%84%9C%EB%B9%84%EC%8A%A4/service-category.html",component:ss,beforeEnter:function(n,e,t){Ga("Layout","v-63f29e3b").then(t)}},{path:"/08. 서비스/service-category.html",redirect:"/08.%20%EC%84%9C%EB%B9%84%EC%8A%A4/service-category.html"},{name:"v-5df07c1a",path:"/08.%20%EC%84%9C%EB%B9%84%EC%8A%A4/service-config.html",component:ss,beforeEnter:function(n,e,t){Ga("Layout","v-5df07c1a").then(t)}},{path:"/08. 서비스/service-config.html",redirect:"/08.%20%EC%84%9C%EB%B9%84%EC%8A%A4/service-config.html"},{name:"v-27f6cb2f",path:"/08.%20%EC%84%9C%EB%B9%84%EC%8A%A4/service-cookie.html",component:ss,beforeEnter:function(n,e,t){Ga("Layout","v-27f6cb2f").then(t)}},{path:"/08. 서비스/service-cookie.html",redirect:"/08.%20%EC%84%9C%EB%B9%84%EC%8A%A4/service-cookie.html"},{name:"v-09fe8e85",path:"/08.%20%EC%84%9C%EB%B9%84%EC%8A%A4/service-counter.html",component:ss,beforeEnter:function(n,e,t){Ga("Layout","v-09fe8e85").then(t)}},{path:"/08. 서비스/service-counter.html",redirect:"/08.%20%EC%84%9C%EB%B9%84%EC%8A%A4/service-counter.html"},{name:"v-479e0941",path:"/08.%20%EC%84%9C%EB%B9%84%EC%8A%A4/service-database.html",component:ss,beforeEnter:function(n,e,t){Ga("Layout","v-479e0941").then(t)}},{path:"/08. 서비스/service-database.html",redirect:"/08.%20%EC%84%9C%EB%B9%84%EC%8A%A4/service-database.html"},{name:"v-100debfe",path:"/08.%20%EC%84%9C%EB%B9%84%EC%8A%A4/service-document.html",component:ss,beforeEnter:function(n,e,t){Ga("Layout","v-100debfe").then(t)}},{path:"/08. 서비스/service-document.html",redirect:"/08.%20%EC%84%9C%EB%B9%84%EC%8A%A4/service-document.html"},{name:"v-769231f6",path:"/08.%20%EC%84%9C%EB%B9%84%EC%8A%A4/service-error_catch.html",component:ss,beforeEnter:function(n,e,t){Ga("Layout","v-769231f6").then(t)}},{path:"/08. 서비스/service-error_catch.html",redirect:"/08.%20%EC%84%9C%EB%B9%84%EC%8A%A4/service-error_catch.html"},{name:"v-156051be",path:"/08.%20%EC%84%9C%EB%B9%84%EC%8A%A4/service-event_interception.html",component:ss,beforeEnter:function(n,e,t){Ga("Layout","v-156051be").then(t)}},{path:"/08. 서비스/service-event_interception.html",redirect:"/08.%20%EC%84%9C%EB%B9%84%EC%8A%A4/service-event_interception.html"},{name:"v-41185547",path:"/08.%20%EC%84%9C%EB%B9%84%EC%8A%A4/service-file_storage.html",component:ss,beforeEnter:function(n,e,t){Ga("Layout","v-41185547").then(t)}},{path:"/08. 서비스/service-file_storage.html",redirect:"/08.%20%EC%84%9C%EB%B9%84%EC%8A%A4/service-file_storage.html"},{name:"v-cb2067da",path:"/08.%20%EC%84%9C%EB%B9%84%EC%8A%A4/service-frontend.html",component:ss,beforeEnter:function(n,e,t){Ga("Layout","v-cb2067da").then(t)}},{path:"/08. 서비스/service-frontend.html",redirect:"/08.%20%EC%84%9C%EB%B9%84%EC%8A%A4/service-frontend.html"},{name:"v-43fe63ca",path:"/08.%20%EC%84%9C%EB%B9%84%EC%8A%A4/service-helper.html",component:ss,beforeEnter:function(n,e,t){Ga("Layout","v-43fe63ca").then(t)}},{path:"/08. 서비스/service-helper.html",redirect:"/08.%20%EC%84%9C%EB%B9%84%EC%8A%A4/service-helper.html"},{name:"v-c8197536",path:"/08.%20%EC%84%9C%EB%B9%84%EC%8A%A4/service-image-process.html",component:ss,beforeEnter:function(n,e,t){Ga("Layout","v-c8197536").then(t)}},{path:"/08. 서비스/service-image-process.html",redirect:"/08.%20%EC%84%9C%EB%B9%84%EC%8A%A4/service-image-process.html"},{name:"v-5f3bc395",path:"/08.%20%EC%84%9C%EB%B9%84%EC%8A%A4/service-keygen.html",component:ss,beforeEnter:function(n,e,t){Ga("Layout","v-5f3bc395").then(t)}},{path:"/08. 서비스/service-keygen.html",redirect:"/08.%20%EC%84%9C%EB%B9%84%EC%8A%A4/service-keygen.html"},{name:"v-19276ec9",path:"/08.%20%EC%84%9C%EB%B9%84%EC%8A%A4/service-mail.html",component:ss,beforeEnter:function(n,e,t){Ga("Layout","v-19276ec9").then(t)}},{path:"/08. 서비스/service-mail.html",redirect:"/08.%20%EC%84%9C%EB%B9%84%EC%8A%A4/service-mail.html"},{name:"v-63a33ee5",path:"/08.%20%EC%84%9C%EB%B9%84%EC%8A%A4/service-member_auth.html",component:ss,beforeEnter:function(n,e,t){Ga("Layout","v-63a33ee5").then(t)}},{path:"/08. 서비스/service-member_auth.html",redirect:"/08.%20%EC%84%9C%EB%B9%84%EC%8A%A4/service-member_auth.html"},{name:"v-6b3f43f6",path:"/08.%20%EC%84%9C%EB%B9%84%EC%8A%A4/service-menu_module.html",component:ss,beforeEnter:function(n,e,t){Ga("Layout","v-6b3f43f6").then(t)}},{path:"/08. 서비스/service-menu_module.html",redirect:"/08.%20%EC%84%9C%EB%B9%84%EC%8A%A4/service-menu_module.html"},{name:"v-72184f33",path:"/08.%20%EC%84%9C%EB%B9%84%EC%8A%A4/service-mobile.html",component:ss,beforeEnter:function(n,e,t){Ga("Layout","v-72184f33").then(t)}},{path:"/08. 서비스/service-mobile.html",redirect:"/08.%20%EC%84%9C%EB%B9%84%EC%8A%A4/service-mobile.html"},{name:"v-1f51f799",path:"/08.%20%EC%84%9C%EB%B9%84%EC%8A%A4/service-permission.html",component:ss,beforeEnter:function(n,e,t){Ga("Layout","v-1f51f799").then(t)}},{path:"/08. 서비스/service-permission.html",redirect:"/08.%20%EC%84%9C%EB%B9%84%EC%8A%A4/service-permission.html"},{name:"v-24f28a45",path:"/08.%20%EC%84%9C%EB%B9%84%EC%8A%A4/service-session.html",component:ss,beforeEnter:function(n,e,t){Ga("Layout","v-24f28a45").then(t)}},{path:"/08. 서비스/service-session.html",redirect:"/08.%20%EC%84%9C%EB%B9%84%EC%8A%A4/service-session.html"},{name:"v-0a30c23a",path:"/08.%20%EC%84%9C%EB%B9%84%EC%8A%A4/service-themes.html",component:ss,beforeEnter:function(n,e,t){Ga("Layout","v-0a30c23a").then(t)}},{path:"/08. 서비스/service-themes.html",redirect:"/08.%20%EC%84%9C%EB%B9%84%EC%8A%A4/service-themes.html"},{name:"v-10396345",path:"/08.%20%EC%84%9C%EB%B9%84%EC%8A%A4/service-trash.html",component:ss,beforeEnter:function(n,e,t){Ga("Layout","v-10396345").then(t)}},{path:"/08. 서비스/service-trash.html",redirect:"/08.%20%EC%84%9C%EB%B9%84%EC%8A%A4/service-trash.html"},{name:"v-7e466545",path:"/08.%20%EC%84%9C%EB%B9%84%EC%8A%A4/service-uiobject_form.html",component:ss,beforeEnter:function(n,e,t){Ga("Layout","v-7e466545").then(t)}},{path:"/08. 서비스/service-uiobject_form.html",redirect:"/08.%20%EC%84%9C%EB%B9%84%EC%8A%A4/service-uiobject_form.html"},{name:"v-5d4d6cc5",path:"/08.%20%EC%84%9C%EB%B9%84%EC%8A%A4/service-validation.html",component:ss,beforeEnter:function(n,e,t){Ga("Layout","v-5d4d6cc5").then(t)}},{path:"/08. 서비스/service-validation.html",redirect:"/08.%20%EC%84%9C%EB%B9%84%EC%8A%A4/service-validation.html"},{name:"v-bb3bbe52",path:"/08.%20%EC%84%9C%EB%B9%84%EC%8A%A4/service-widget_box.html",component:ss,beforeEnter:function(n,e,t){Ga("Layout","v-bb3bbe52").then(t)}},{path:"/08. 서비스/service-widget_box.html",redirect:"/08.%20%EC%84%9C%EB%B9%84%EC%8A%A4/service-widget_box.html"},{name:"v-24fd19eb",path:"/09.%20%ED%94%84%EB%A1%A0%ED%8A%B8%EC%97%94%EB%93%9C%20(JS)/",component:ss,beforeEnter:function(n,e,t){Ga("Layout","v-24fd19eb").then(t)}},{path:"/09. 프론트엔드 (JS)/",redirect:"/09.%20%ED%94%84%EB%A1%A0%ED%8A%B8%EC%97%94%EB%93%9C%20(JS)/"},{path:"/09.%20%ED%94%84%EB%A1%A0%ED%8A%B8%EC%97%94%EB%93%9C%20(JS)/index.html",redirect:"/09.%20%ED%94%84%EB%A1%A0%ED%8A%B8%EC%97%94%EB%93%9C%20(JS)/"},{name:"v-e5101580",path:"/09.%20%ED%94%84%EB%A1%A0%ED%8A%B8%EC%97%94%EB%93%9C%20(JS)/js.html",component:ss,beforeEnter:function(n,e,t){Ga("Layout","v-e5101580").then(t)}},{path:"/09. 프론트엔드 (JS)/js.html",redirect:"/09.%20%ED%94%84%EB%A1%A0%ED%8A%B8%EC%97%94%EB%93%9C%20(JS)/js.html"},{name:"v-1d2914e0",path:"/09.%20%ED%94%84%EB%A1%A0%ED%8A%B8%EC%97%94%EB%93%9C%20(JS)/lang.html",component:ss,beforeEnter:function(n,e,t){Ga("Layout","v-1d2914e0").then(t)}},{path:"/09. 프론트엔드 (JS)/lang.html",redirect:"/09.%20%ED%94%84%EB%A1%A0%ED%8A%B8%EC%97%94%EB%93%9C%20(JS)/lang.html"},{name:"v-41494f00",path:"/09.%20%ED%94%84%EB%A1%A0%ED%8A%B8%EC%97%94%EB%93%9C%20(JS)/page-modal.html",component:ss,beforeEnter:function(n,e,t){Ga("Layout","v-41494f00").then(t)}},{path:"/09. 프론트엔드 (JS)/page-modal.html",redirect:"/09.%20%ED%94%84%EB%A1%A0%ED%8A%B8%EC%97%94%EB%93%9C%20(JS)/page-modal.html"},{name:"v-8c98cf00",path:"/09.%20%ED%94%84%EB%A1%A0%ED%8A%B8%EC%97%94%EB%93%9C%20(JS)/page.html",component:ss,beforeEnter:function(n,e,t){Ga("Layout","v-8c98cf00").then(t)}},{path:"/09. 프론트엔드 (JS)/page.html",redirect:"/09.%20%ED%94%84%EB%A1%A0%ED%8A%B8%EC%97%94%EB%93%9C%20(JS)/page.html"},{name:"v-51e0a908",path:"/09.%20%ED%94%84%EB%A1%A0%ED%8A%B8%EC%97%94%EB%93%9C%20(JS)/request.html",component:ss,beforeEnter:function(n,e,t){Ga("Layout","v-51e0a908").then(t)}},{path:"/09. 프론트엔드 (JS)/request.html",redirect:"/09.%20%ED%94%84%EB%A1%A0%ED%8A%B8%EC%97%94%EB%93%9C%20(JS)/request.html"},{name:"v-3683c842",path:"/09.%20%ED%94%84%EB%A1%A0%ED%8A%B8%EC%97%94%EB%93%9C%20(JS)/validator.html",component:ss,beforeEnter:function(n,e,t){Ga("Layout","v-3683c842").then(t)}},{path:"/09. 프론트엔드 (JS)/validator.html",redirect:"/09.%20%ED%94%84%EB%A1%A0%ED%8A%B8%EC%97%94%EB%93%9C%20(JS)/validator.html"},{name:"v-ae688c46",path:"/LICENSE.html",component:ss,beforeEnter:function(n,e,t){Ga("Layout","v-ae688c46").then(t)}},{name:"v-23dd47c4",path:"/",component:ss,beforeEnter:function(n,e,t){Ga("Layout","v-23dd47c4").then(t)}},{path:"/index.html",redirect:"/"},{name:"v-12c92a2b",path:"/05.%20%ED%94%8C%EB%9F%AC%EA%B7%B8%EC%9D%B8%20%EA%B0%9C%EB%B0%9C/toggle-menu-guide.html",component:ss,beforeEnter:function(n,e,t){Ga("Layout","v-12c92a2b").then(t)}},{path:"/05. 플러그인 개발/toggle-menu-guide.html",redirect:"/05.%20%ED%94%8C%EB%9F%AC%EA%B7%B8%EC%9D%B8%20%EA%B0%9C%EB%B0%9C/toggle-menu-guide.html"},{name:"v-4053356b",path:"/05.%20%ED%94%8C%EB%9F%AC%EA%B7%B8%EC%9D%B8%20%EA%B0%9C%EB%B0%9C/ui-object-guide.html",component:ss,beforeEnter:function(n,e,t){Ga("Layout","v-4053356b").then(t)}},{path:"/05. 플러그인 개발/ui-object-guide.html",redirect:"/05.%20%ED%94%8C%EB%9F%AC%EA%B7%B8%EC%9D%B8%20%EA%B0%9C%EB%B0%9C/ui-object-guide.html"},{path:"*",component:ss}],cs={title:"XE3 가이드 문서",description:"XE3 가이드 문서",base:"/xe3-doc/",headTags:[],pages:[{title:"권장사양",frontmatter:{},regularPath:"/01.%20%EC%8B%9C%EC%9E%91%ED%95%98%EA%B8%B0/Recommended-Specifications.html",relativePath:"01. 시작하기/Recommended-Specifications.md",key:"v-12f49ed1",path:"/01.%20%EC%8B%9C%EC%9E%91%ED%95%98%EA%B8%B0/Recommended-Specifications.html",headers:[{level:2,title:"서버 요구사양",slug:"서버-요구사양",charIndex:9},{level:2,title:"권장 호스팅 환경",slug:"권장-호스팅-환경",charIndex:336}],headersStr:"서버 요구사양 권장 호스팅 환경",content:"# 권장사양\n# 서버 요구사양\nXE를 설치하기 위해서는 아래의 요구사항이 만족되어야 합니다.\n\n서버 요구사양사양 설명웹 서버Apache & Nginx 등PHP 버전PHP 7 이상(XE3.0.0-beta.24 부터)PHP 모듈PDO PHP Extension \ncURL PHP Extension\nFileInfo PHP Extension\nGD PHP Extension\nMbstring PHP Extension\nOpenSSL PHP Extension\nZip PHP Extension데이터베이스MariaDB 또는 MySQL 5.1 이상디스크300M 이상 또는 500M 이상터미널(SSH)접속 가능 환경 권장# 권장 호스팅 환경\nXE 호스팅 [https://www.xpressengine.io/hosting]을 사용하여 XE를 안정적으로 운영 및 설치할 수 있습니다. 현재 일부 호스팅사에서 XE3를 사용할 수 있는 환경을 운용하는 것으로 확인되나 기능 작동에 대한 보증은 지원하지 않습니다.\n\n호스팅사호스팅 제품XE Hosting (추천)XE 호스팅 전체 상품 [https://www.xpressengine.io/hosting]Cafe24CAFE24 - 10G 광아우토반 [https://www.cafe24.com/?controller=product_page&type=basic&page=autoban]닷홈무제한 웹 호스팅 Basic 이상(Basic 포함) [https://www.dothome.co.kr/web/premium/#section1]무제한 웹 호스팅의 FREE 플랜에서는 PHP 7.0 을 설치하더라도 allow_url_fopen 과 같은 옵션을 사용할 수 없기에, Basic 이상의 상품을 신청 후 기술지원 게시판을 통해 설정 변경 요청이 필요합니다.",contentLowercase:"# 권장사양\n# 서버 요구사양\nxe를 설치하기 위해서는 아래의 요구사항이 만족되어야 합니다.\n\n서버 요구사양사양 설명웹 서버apache & nginx 등php 버전php 7 이상(xe3.0.0-beta.24 부터)php 모듈pdo php extension \ncurl php extension\nfileinfo php extension\ngd php extension\nmbstring php extension\nopenssl php extension\nzip php extension데이터베이스mariadb 또는 mysql 5.1 이상디스크300m 이상 또는 500m 이상터미널(ssh)접속 가능 환경 권장# 권장 호스팅 환경\nxe 호스팅 [https://www.xpressengine.io/hosting]을 사용하여 xe를 안정적으로 운영 및 설치할 수 있습니다. 현재 일부 호스팅사에서 xe3를 사용할 수 있는 환경을 운용하는 것으로 확인되나 기능 작동에 대한 보증은 지원하지 않습니다.\n\n호스팅사호스팅 제품xe hosting (추천)xe 호스팅 전체 상품 [https://www.xpressengine.io/hosting]cafe24cafe24 - 10g 광아우토반 [https://www.cafe24.com/?controller=product_page&type=basic&page=autoban]닷홈무제한 웹 호스팅 basic 이상(basic 포함) [https://www.dothome.co.kr/web/premium/#section1]무제한 웹 호스팅의 free 플랜에서는 php 7.0 을 설치하더라도 allow_url_fopen 과 같은 옵션을 사용할 수 없기에, basic 이상의 상품을 신청 후 기술지원 게시판을 통해 설정 변경 요청이 필요합니다.",charsets:{cjk:!0}},{title:"문제 해결\\(디버깅\\)",frontmatter:{},regularPath:"/01.%20%EC%8B%9C%EC%9E%91%ED%95%98%EA%B8%B0/core-debug.html",relativePath:"01. 시작하기/core-debug.md",key:"v-2399df71",path:"/01.%20%EC%8B%9C%EC%9E%91%ED%95%98%EA%B8%B0/core-debug.html",headers:[{level:2,title:"디버깅 모드 활성화",slug:"디버깅-모드-활성화",charIndex:452},{level:2,title:"변수값 확인하기\\(dump\\)",slug:"변수값-확인하기-dump",charIndex:924},{level:3,title:"브라우저에 출력하기",slug:"브라우저에-출력하기",charIndex:1048},{level:2,title:"로그파일에 기록하기",slug:"로그파일에-기록하기",charIndex:1324}],headersStr:"디버깅 모드 활성화 변수값 확인하기\\(dump\\) 브라우저에 출력하기 로그파일에 기록하기",content:"# 문제 해결(디버깅)\n>  이 문서에서는 창작자, 기술기업에게 문제해결을 위하여 전달해야하는 내용이 있을때 사용할 수 있는 문서입니다.\n디버깅 모드를 활성화 해 놓으면, 일반 사용자도 오류가 발생할 경우, 브라우저에서 오류의 자세한 내용을 볼 수 있으므로, 보안상 문제가 될 수 있습니다. 실 서비스 운영시에는 민감정보가 노출되지 않도록 유의하여 사용해 주시기 바랍니다. \n\n\nXE3가 예상대로 설치되지 않거나 작동하지 않으면, 사용자 환경 시스템 요구 사항을 충족하는지 확인해야합니다 . XE3가 실행해야하는 항목이 누락되면 먼저 해결해야합니다.\n\n그런 다음 QnA와 커뮤니티를 검색하려면 몇 분이 걸릴 수 있습니다. 누군가가 이미 문제를 보고 했을 가능성이 있으며 해결 방법이 있거나 사용할 수 있습니다. 철저하게 검색했지만 문제에 대한 정보를 찾을 수 없는 경우 문제 해결을 시작할 시간입니다.\n\n# 디버깅 모드 활성화\nXE3를 디버깅모드로 설정하면 오류가 발생한 경우, 브라우저에 오류의 자세한 정보가 바로 출력됩니다. 디버그 모드를 활성화 하기위해서는 config/production/app.php 파일의 debug 값을 true로 설정해야 합니다.\n\n현재 환경에 맞는 config 파일을 열어 값을 변경합니다.\n\n//in config/production/app.php\n  ...\n  'debug' => true,\n  ...\n\n\n.env 파일에 debug 모드를 지정할 수도 있습니다.\n\n// in config/production/app.php\n  ...\n  'debug' => env('APP_DEBUG', true)\n  ...\n\n\n위와 같이 config/production/app.php 파일을 설정하고, XE3의 루트디렉토리의 .env 파일에는 아래와 같이 작성합니다.\n\n# in .env file\nAPP_DEBUG=true\n\n\n\n# 변수값 확인하기(dump)\n디버깅을 위해 특정시점에서 변수의 값이나 함수의 반환값 등을 확인할 필요가 있습니다. XE3는 변수의 값을 브라우저에 곧바로 출력하거나 로그 파일에 기록해 놓을 수 있는 기능을 제공합니다.\n\n# 브라우저에 출력하기\nXE3는 dump 와 dd 함수를 제공하고 있습니다. dump는 php 의 내장함수인 var_dump 와 유사하지만 브라우저 상에서 좀 더 보기 좋은 형태로 표현해 줍니다. dd 는 dump & die 의 약어로 dump 처리 후 라이프사이클을 중단시킵니다.\n\ndump($var);\ndd($var);\n\n\n여러가지 값을 동시에 확인하고자 한다면 해당 변수들을 인자로 나열하면 됩니다.\n\ndump($foo, $bar, $baz);\ndd($foo, $bar, $baz);\n\n\n# 로그파일에 기록하기\nXE3에서는 디버그 모드를 활성화 할 경우 별다른 설정이 없다면, 최대 5개의 로그 파일을 날짜별로 저장하는 daily 설정을 기본으로 두고 있습니다.\n\nXE3는 php의 강력한 로깅시스템인 monolog를 사용하고 있습니다.single , daily , syslog , errorlog 타입 설정을 활용하면 파일 하나에 로깅하는것, 일별로 로깅하는것, 시스템 자체에도 로깅할 수 있습니다.\n\n// in config/app.php\n\n//Single Mode laravel.log\n'log' => env('APP_LOG', 'single'),\n\n//Daily Mode - laravel-yyyy-mm-dd.log\n'log' => env('APP_LOG', 'daily'),\n\n//Syslog Mode\n'log' => env('APP_LOG', 'syslog'),\n\n//Errorlog Mode\n'log' => env('APP_LOG', 'errorlog'),\n\n\n\nLog 파사드를 이용해 로그 파일에 내용을 기록할 수 있습니다. 로그 파일의 위치는 storage/log/laravel-yyyy-mm-dd.log입니다.\n\n$var = 'a';\n$bar = 'b';\n\\Log::info($var . ' ' . $bar); // [0000-00-00 00:00:00] production.INFO: a b\n\n\n>  log 파일에는 사용자의 호출에 의한 기록 이외에도 장애시 발생한 오류 정보 등이 기록되어 있습니다.",contentLowercase:"# 문제 해결(디버깅)\n>  이 문서에서는 창작자, 기술기업에게 문제해결을 위하여 전달해야하는 내용이 있을때 사용할 수 있는 문서입니다.\n디버깅 모드를 활성화 해 놓으면, 일반 사용자도 오류가 발생할 경우, 브라우저에서 오류의 자세한 내용을 볼 수 있으므로, 보안상 문제가 될 수 있습니다. 실 서비스 운영시에는 민감정보가 노출되지 않도록 유의하여 사용해 주시기 바랍니다. \n\n\nxe3가 예상대로 설치되지 않거나 작동하지 않으면, 사용자 환경 시스템 요구 사항을 충족하는지 확인해야합니다 . xe3가 실행해야하는 항목이 누락되면 먼저 해결해야합니다.\n\n그런 다음 qna와 커뮤니티를 검색하려면 몇 분이 걸릴 수 있습니다. 누군가가 이미 문제를 보고 했을 가능성이 있으며 해결 방법이 있거나 사용할 수 있습니다. 철저하게 검색했지만 문제에 대한 정보를 찾을 수 없는 경우 문제 해결을 시작할 시간입니다.\n\n# 디버깅 모드 활성화\nxe3를 디버깅모드로 설정하면 오류가 발생한 경우, 브라우저에 오류의 자세한 정보가 바로 출력됩니다. 디버그 모드를 활성화 하기위해서는 config/production/app.php 파일의 debug 값을 true로 설정해야 합니다.\n\n현재 환경에 맞는 config 파일을 열어 값을 변경합니다.\n\n//in config/production/app.php\n  ...\n  'debug' => true,\n  ...\n\n\n.env 파일에 debug 모드를 지정할 수도 있습니다.\n\n// in config/production/app.php\n  ...\n  'debug' => env('app_debug', true)\n  ...\n\n\n위와 같이 config/production/app.php 파일을 설정하고, xe3의 루트디렉토리의 .env 파일에는 아래와 같이 작성합니다.\n\n# in .env file\napp_debug=true\n\n\n\n# 변수값 확인하기(dump)\n디버깅을 위해 특정시점에서 변수의 값이나 함수의 반환값 등을 확인할 필요가 있습니다. xe3는 변수의 값을 브라우저에 곧바로 출력하거나 로그 파일에 기록해 놓을 수 있는 기능을 제공합니다.\n\n# 브라우저에 출력하기\nxe3는 dump 와 dd 함수를 제공하고 있습니다. dump는 php 의 내장함수인 var_dump 와 유사하지만 브라우저 상에서 좀 더 보기 좋은 형태로 표현해 줍니다. dd 는 dump & die 의 약어로 dump 처리 후 라이프사이클을 중단시킵니다.\n\ndump($var);\ndd($var);\n\n\n여러가지 값을 동시에 확인하고자 한다면 해당 변수들을 인자로 나열하면 됩니다.\n\ndump($foo, $bar, $baz);\ndd($foo, $bar, $baz);\n\n\n# 로그파일에 기록하기\nxe3에서는 디버그 모드를 활성화 할 경우 별다른 설정이 없다면, 최대 5개의 로그 파일을 날짜별로 저장하는 daily 설정을 기본으로 두고 있습니다.\n\nxe3는 php의 강력한 로깅시스템인 monolog를 사용하고 있습니다.single , daily , syslog , errorlog 타입 설정을 활용하면 파일 하나에 로깅하는것, 일별로 로깅하는것, 시스템 자체에도 로깅할 수 있습니다.\n\n// in config/app.php\n\n//single mode laravel.log\n'log' => env('app_log', 'single'),\n\n//daily mode - laravel-yyyy-mm-dd.log\n'log' => env('app_log', 'daily'),\n\n//syslog mode\n'log' => env('app_log', 'syslog'),\n\n//errorlog mode\n'log' => env('app_log', 'errorlog'),\n\n\n\nlog 파사드를 이용해 로그 파일에 내용을 기록할 수 있습니다. 로그 파일의 위치는 storage/log/laravel-yyyy-mm-dd.log입니다.\n\n$var = 'a';\n$bar = 'b';\n\\log::info($var . ' ' . $bar); // [0000-00-00 00:00:00] production.info: a b\n\n\n>  log 파일에는 사용자의 호출에 의한 기록 이외에도 장애시 발생한 오류 정보 등이 기록되어 있습니다.",charsets:{cjk:!0}},{title:"업데이트",frontmatter:{},regularPath:"/01.%20%EC%8B%9C%EC%9E%91%ED%95%98%EA%B8%B0/core-update.html",relativePath:"01. 시작하기/core-update.md",key:"v-17653de5",path:"/01.%20%EC%8B%9C%EC%9E%91%ED%95%98%EA%B8%B0/core-update.html",headers:[{level:2,title:"웹 페이지에서 업데이트 적용",slug:"웹-페이지에서-업데이트-적용",charIndex:363},{level:3,title:"SSH(터미널)에서 업데이트 적용",slug:"ssh-터미널-에서-업데이트-적용",charIndex:733},{level:2,title:"최신버전 다운로드",slug:"최신버전-다운로드",charIndex:983},{level:2,title:"설치된 플러그인의 업데이트",slug:"설치된-플러그인의-업데이트",charIndex:1324}],headersStr:"웹 페이지에서 업데이트 적용 SSH(터미널)에서 업데이트 적용 최신버전 다운로드 설치된 플러그인의 업데이트",content:"# 업데이트\n>  XE 3.0.0-rc.8 버전에서는 deprecated 코드가 삭제 [https://www.xpressengine.io/blog/XE-300-rc8-배포-안내]되었습니다. 코어 업데이트 전에 플러그인 업데이트 및 개별 제작 사용된 플러그인에 관련코드를 수정하시기 바랍니다.\nXE 3.0.0 버전 업데이트에서는 migration update 코드가 삭제 [https://www.xpressengine.io/blog/XE-300-배포-안내]되었습니다. 3.0.0 으로 업데이트 하기전에 rc.8 버전으로 업데이트를 수행하신 후 3.0.0 으로 업데이트 하시기 바랍니다.\n\n\nXE 업데이트는 웹페이지에서 업데이트 할 수 있습니다.\n\n# 웹 페이지에서 업데이트 적용\n>  만약, XE소스코드나 플러그인 소스코드를 수정했다면 미리 백업해두시길 바랍니다.\nallow_url_fopen PHP옵션이 비활성화 되어 있는 경우 업데이트를 진행할 수 없습니다. 꼭 확인해주세요. \n\n\n'관리자사이트 > 대시보드 > 업데이트' 페이지에서 업데이트 할 수 있습니다.\n\n웹을 통한 업데이트는 서버 환경마다 소요되는 시간이 다르며, 약 5분 ~ 10분 정도 소요될 수 있습니다. 현재 설치된 XE3 코어 버전과 업데이트 될 버전의 코어 버전을 확인 후, 하단의 지금 업데이트 하기 버튼을 눌러주세요.\n\n사이트가 업데이트 되는 동안은 유지관리 모드가 되며, 업데이트가 완료되는 대로 사이트는 정상으로 돌아옵니다.\n\n# SSH(터미널)에서 업데이트 적용\nSSH를 사용한 콘솔 환경에서 업데이트를 할 수 있습니다.\n\n 1. SSH에 접속해, XE3가 설치된 디렉토리로 이동합니다.\n 2. php artisan xe:update 를 입력합니다.\n 3. 업데이트가 진행됩니다.\n 4. 끝!\n\n>  php artisan xe:update 에 버전을 명시하면 예) php artisan xe:update 3.0.2\n해당 명시한 버전으로 업데이트 할 수 있습니다 :) \n\n\n# 최신버전 다운로드\n우선 XE 최신버전을 다운로드 받은 후, 압축을 풀어서 XE가 설치된 디렉토리에 덮어씌웁니다.\n\n만약 최신버전 바로 이전의 버전을 설치하여 사용하고 계셨다면, 최신버전에서 변경된 파일만 덮어씌우셔도 됩니다. 변경된 파일은 XE3의 Github 릴리즈 페이지 [https://github.com/xpressengine/xpressengine/releases]에서 다운로드 받을 수 있습니다. 변경된 파일 모음은 각 릴리즈마다 changed.xxx.zip의 형식으로 첨부되어 있습니다.\n\n>  만약 XE소스코드나 플러그인 소스코드를 수정했다면 변경된 코드를 미리 백업해두시길 바랍니다. \n\n\n# 설치된 플러그인의 업데이트\n'관리자사이트 > 대시보드 > 업데이트' 페이지에서 업데이트 할 수 있습니다. 하단의 업데이트 되는 플러그인의 정보를 확인한 후, 플러그인 업데이트 하기를 통해 업데이트 할 수 있습니다.",contentLowercase:"# 업데이트\n>  xe 3.0.0-rc.8 버전에서는 deprecated 코드가 삭제 [https://www.xpressengine.io/blog/xe-300-rc8-배포-안내]되었습니다. 코어 업데이트 전에 플러그인 업데이트 및 개별 제작 사용된 플러그인에 관련코드를 수정하시기 바랍니다.\nxe 3.0.0 버전 업데이트에서는 migration update 코드가 삭제 [https://www.xpressengine.io/blog/xe-300-배포-안내]되었습니다. 3.0.0 으로 업데이트 하기전에 rc.8 버전으로 업데이트를 수행하신 후 3.0.0 으로 업데이트 하시기 바랍니다.\n\n\nxe 업데이트는 웹페이지에서 업데이트 할 수 있습니다.\n\n# 웹 페이지에서 업데이트 적용\n>  만약, xe소스코드나 플러그인 소스코드를 수정했다면 미리 백업해두시길 바랍니다.\nallow_url_fopen php옵션이 비활성화 되어 있는 경우 업데이트를 진행할 수 없습니다. 꼭 확인해주세요. \n\n\n'관리자사이트 > 대시보드 > 업데이트' 페이지에서 업데이트 할 수 있습니다.\n\n웹을 통한 업데이트는 서버 환경마다 소요되는 시간이 다르며, 약 5분 ~ 10분 정도 소요될 수 있습니다. 현재 설치된 xe3 코어 버전과 업데이트 될 버전의 코어 버전을 확인 후, 하단의 지금 업데이트 하기 버튼을 눌러주세요.\n\n사이트가 업데이트 되는 동안은 유지관리 모드가 되며, 업데이트가 완료되는 대로 사이트는 정상으로 돌아옵니다.\n\n# ssh(터미널)에서 업데이트 적용\nssh를 사용한 콘솔 환경에서 업데이트를 할 수 있습니다.\n\n 1. ssh에 접속해, xe3가 설치된 디렉토리로 이동합니다.\n 2. php artisan xe:update 를 입력합니다.\n 3. 업데이트가 진행됩니다.\n 4. 끝!\n\n>  php artisan xe:update 에 버전을 명시하면 예) php artisan xe:update 3.0.2\n해당 명시한 버전으로 업데이트 할 수 있습니다 :) \n\n\n# 최신버전 다운로드\n우선 xe 최신버전을 다운로드 받은 후, 압축을 풀어서 xe가 설치된 디렉토리에 덮어씌웁니다.\n\n만약 최신버전 바로 이전의 버전을 설치하여 사용하고 계셨다면, 최신버전에서 변경된 파일만 덮어씌우셔도 됩니다. 변경된 파일은 xe3의 github 릴리즈 페이지 [https://github.com/xpressengine/xpressengine/releases]에서 다운로드 받을 수 있습니다. 변경된 파일 모음은 각 릴리즈마다 changed.xxx.zip의 형식으로 첨부되어 있습니다.\n\n>  만약 xe소스코드나 플러그인 소스코드를 수정했다면 변경된 코드를 미리 백업해두시길 바랍니다. \n\n\n# 설치된 플러그인의 업데이트\n'관리자사이트 > 대시보드 > 업데이트' 페이지에서 업데이트 할 수 있습니다. 하단의 업데이트 되는 플러그인의 정보를 확인한 후, 플러그인 업데이트 하기를 통해 업데이트 할 수 있습니다.",charsets:{cjk:!0}},{title:"설치하기",frontmatter:{},regularPath:"/01.%20%EC%8B%9C%EC%9E%91%ED%95%98%EA%B8%B0/installation-console.html",relativePath:"01. 시작하기/installation-console.md",key:"v-748d7c51",path:"/01.%20%EC%8B%9C%EC%9E%91%ED%95%98%EA%B8%B0/installation-console.html",headers:[{level:2,title:"터미널(SSH) 환경 설치 방법",slug:"터미널-ssh-환경-설치-방법",charIndex:9},{level:2,title:"Git",slug:"git",charIndex:163},{level:2,title:"설치 정보 입력",slug:"설치-정보-입력",charIndex:460},{level:3,title:"1. 데이터베이스, 사이트 정보 입력",slug:"_1-데이터베이스-사이트-정보-입력",charIndex:471},{level:3,title:"2. 관리자 정보 입력",slug:"_2-관리자-정보-입력",charIndex:1013},{level:3,title:"3. 디렉토리 권한 및 서버 정보 수집 동의",slug:"_3-디렉토리-권한-및-서버-정보-수집-동의",charIndex:1126},{level:2,title:"설정 파일을 이용한 설치",slug:"설정-파일을-이용한-설치",charIndex:1519},{level:3,title:"설치옵션",slug:"설치옵션",charIndex:1872}],headersStr:"터미널(SSH) 환경 설치 방법 Git 설치 정보 입력 1. 데이터베이스, 사이트 정보 입력 2. 관리자 정보 입력 3. 디렉토리 권한 및 서버 정보 수집 동의 설정 파일을 이용한 설치 설치옵션",content:"# 설치하기\n# 터미널(SSH) 환경 설치 방법\n터미널에서 아래와 같이 명령어를 실행합니다.\n\n$ php -r \"copy('http://start.xpressengine.io/download/installer', 'installer');\" && php installer install\n\n\n# Git\n>  Git을 사용하면 업데이트 및 현재 개발중인 코드를 손쉽게 적용할 수 있습니다. 코어 버전 업데이트할 때 FTP 없이 Git 을 통해 업데이트 할 수 있습니다. \n\n\nGithub 저장소 파일을 이용해 설치합니다\n\n$ git clone https://github.com/xpressengine/xpressengine.git\n$ cd xpressengine\n$ composer install\n...\n$ php artisan xe:install\n...\n\n\n위 명령어 실행하면 인스톨이 시작되면 설치 정보를 입력합니다.\n\n# 설치 정보 입력\n# 1. 데이터베이스, 사이트 정보 입력\n인스톨러가 Database 및 기본 설정 파일을 생성합니다. 이 작업은 시간이 오래 걸릴 수 있습니다.\n\n항목설명 및 기본 값 (미 입력시)Hostlocalhost 또는 127.0.0.1 DB 서버의 IP또는 도메인 입력Port데이터베이스 포트 기본 값 : 3306DB NAME데이터 베이스 이름 기본 값 없음UserID데이터 베이스 USER ID 기본 값 :rootPassword데이터 베이스 PW 기본 값 없음site urlhttp://mysite.com 또는 https://mysite.com 홈페이지 주소 입력 하위 디렉토리인 경우 도메인에 디렉토리를 입력해야합니다.TimeZone타임존 정보 [http://php.net/manual/kr/timezones.php]를 입력합니다 기본 값 : Asia/SeoulLocale언어를 입력합니다. 영어, 한국어 총 두가지를 지원합니다. 기본 값 : ko / 영어 : en>  Locale의 경우 다른 언어의 설치는 인스톨 후에 언어팩을 업로드 하여 사용 할 수 있습니다. \n\n\n# 2. 관리자 정보 입력\n항목설명 및 기본 값 (미 입력시)Email관리자 이메일 주소Name관리자 이름 기본 값 : adminPassword관리자 비밀번호Password Again관리자 비밀번호 확인# 3. 디렉토리 권한 및 서버 정보 수집 동의\n폴더 목록권한 및 설명./storage미디어 첨부 및 로그 저장 파일 경로 기본 권한 0707./bootstrap ./bootstrap/cache기본 권한 0707./config ./config/productionXE의 기본설정 폴더 기본 권한 0707./vendorcomposer등 XE 라이브러리 폴더 기본 권한 0707./pluginsXE 플러그인 폴더 기본 권한 0707그외 루트 파일XE최상위 파일(index.php, composer.phar 등) 기본 권한 0707>  더 나이은 제품 및 서비스 제공을 위하여 XE가 설치된 서버의 환경을 수집하고 있습니다. 수집하는 항목은 서버, 웹서버, PHP, DB 등의 정보를 수집하고 있습니다. \n\n\n# 설정 파일을 이용한 설치\n설정파일을 사용하면 더욱 쉽게 설치할 수 있습니다. 설치하기 전에 아래와 같이 커맨드를 실행하여 설정파일을 생성합니다.\n\n$ copy('http://start.xpressengine.io/installer', 'installer');\" && php installer make\n\n\nxe_install_config.yaml 파일이 생성됩니다. 파일을 열고 설치 정보를 입력하세요. 설치 커맨드를 실행합니다. --config 및 --no-interact 옵션을 사용하십시오.\n\n$ php installer install --config=.xe_install_config.yaml --no-interact\n\n\n# 설치옵션\n * --config=< configfile> 설정파일을 지정합니다.\n * --no-interact 대화형입력을 사용하지 않고 설정파일의 정보를 사용하여 자동으로 설치합니다. 이 옵션을 --config옵션과 같이 사용해야 합니다.\n * --install-dir 설치경로를 지정합니다. 지정하지 않을 경우 현재 디렉토리에 설치합니다.",contentLowercase:"# 설치하기\n# 터미널(ssh) 환경 설치 방법\n터미널에서 아래와 같이 명령어를 실행합니다.\n\n$ php -r \"copy('http://start.xpressengine.io/download/installer', 'installer');\" && php installer install\n\n\n# git\n>  git을 사용하면 업데이트 및 현재 개발중인 코드를 손쉽게 적용할 수 있습니다. 코어 버전 업데이트할 때 ftp 없이 git 을 통해 업데이트 할 수 있습니다. \n\n\ngithub 저장소 파일을 이용해 설치합니다\n\n$ git clone https://github.com/xpressengine/xpressengine.git\n$ cd xpressengine\n$ composer install\n...\n$ php artisan xe:install\n...\n\n\n위 명령어 실행하면 인스톨이 시작되면 설치 정보를 입력합니다.\n\n# 설치 정보 입력\n# 1. 데이터베이스, 사이트 정보 입력\n인스톨러가 database 및 기본 설정 파일을 생성합니다. 이 작업은 시간이 오래 걸릴 수 있습니다.\n\n항목설명 및 기본 값 (미 입력시)hostlocalhost 또는 127.0.0.1 db 서버의 ip또는 도메인 입력port데이터베이스 포트 기본 값 : 3306db name데이터 베이스 이름 기본 값 없음userid데이터 베이스 user id 기본 값 :rootpassword데이터 베이스 pw 기본 값 없음site urlhttp://mysite.com 또는 https://mysite.com 홈페이지 주소 입력 하위 디렉토리인 경우 도메인에 디렉토리를 입력해야합니다.timezone타임존 정보 [http://php.net/manual/kr/timezones.php]를 입력합니다 기본 값 : asia/seoullocale언어를 입력합니다. 영어, 한국어 총 두가지를 지원합니다. 기본 값 : ko / 영어 : en>  locale의 경우 다른 언어의 설치는 인스톨 후에 언어팩을 업로드 하여 사용 할 수 있습니다. \n\n\n# 2. 관리자 정보 입력\n항목설명 및 기본 값 (미 입력시)email관리자 이메일 주소name관리자 이름 기본 값 : adminpassword관리자 비밀번호password again관리자 비밀번호 확인# 3. 디렉토리 권한 및 서버 정보 수집 동의\n폴더 목록권한 및 설명./storage미디어 첨부 및 로그 저장 파일 경로 기본 권한 0707./bootstrap ./bootstrap/cache기본 권한 0707./config ./config/productionxe의 기본설정 폴더 기본 권한 0707./vendorcomposer등 xe 라이브러리 폴더 기본 권한 0707./pluginsxe 플러그인 폴더 기본 권한 0707그외 루트 파일xe최상위 파일(index.php, composer.phar 등) 기본 권한 0707>  더 나이은 제품 및 서비스 제공을 위하여 xe가 설치된 서버의 환경을 수집하고 있습니다. 수집하는 항목은 서버, 웹서버, php, db 등의 정보를 수집하고 있습니다. \n\n\n# 설정 파일을 이용한 설치\n설정파일을 사용하면 더욱 쉽게 설치할 수 있습니다. 설치하기 전에 아래와 같이 커맨드를 실행하여 설정파일을 생성합니다.\n\n$ copy('http://start.xpressengine.io/installer', 'installer');\" && php installer make\n\n\nxe_install_config.yaml 파일이 생성됩니다. 파일을 열고 설치 정보를 입력하세요. 설치 커맨드를 실행합니다. --config 및 --no-interact 옵션을 사용하십시오.\n\n$ php installer install --config=.xe_install_config.yaml --no-interact\n\n\n# 설치옵션\n * --config=< configfile> 설정파일을 지정합니다.\n * --no-interact 대화형입력을 사용하지 않고 설정파일의 정보를 사용하여 자동으로 설치합니다. 이 옵션을 --config옵션과 같이 사용해야 합니다.\n * --install-dir 설치경로를 지정합니다. 지정하지 않을 경우 현재 디렉토리에 설치합니다.",charsets:{cjk:!0}},{title:"설치하기",frontmatter:{},regularPath:"/01.%20%EC%8B%9C%EC%9E%91%ED%95%98%EA%B8%B0/installation-web.html",relativePath:"01. 시작하기/installation-web.md",key:"v-e6fe431e",path:"/01.%20%EC%8B%9C%EC%9E%91%ED%95%98%EA%B8%B0/installation-web.html",headers:[{level:2,title:"웹 / FTP 환경에서 설치하기",slug:"웹-ftp-환경에서-설치하기",charIndex:9},{level:3,title:"FTP에 업로드",slug:"ftp에-업로드",charIndex:387},{level:3,title:"디렉토리 권한 설정",slug:"디렉토리-권한-설정",charIndex:563},{level:3,title:"웹 인스톨러 실행",slug:"웹-인스톨러-실행",charIndex:978},{level:2,title:"알려진 문제점",slug:"알려진-문제점",charIndex:1329},{level:3,title:"FTP의 파일 업로드 오류",slug:"ftp의-파일-업로드-오류",charIndex:1339},{level:3,title:"웹 서버 타임아웃",slug:"웹-서버-타임아웃",charIndex:1557}],headersStr:"웹 / FTP 환경에서 설치하기 FTP에 업로드 디렉토리 권한 설정 웹 인스톨러 실행 알려진 문제점 FTP의 파일 업로드 오류 웹 서버 타임아웃",content:"# 설치하기\n# 웹 / FTP 환경에서 설치하기\n>   http://start.xpressengine.io/download/latest.zip 을 다운로드 [http://start.xpressengine.io/download/latest.zip] 합니다. 다운로드 받은 zip 파일의 압축을 풀고 서버에 업로드 합니다.\n\n 공식 홈페이지 [https://www.xpressengine.io/]에서 다운로드 받은 파일은 composer 및 기타 라이브러리가 빌드된 상태의 파일입니다. (약 100MB)\n빌드 된 상태가 아닌 XE 코어만 필요하신 경우 XE 깃허브 [https://github.com/xpressengine/xpressengine]에서 다운로드 해주세요. (약 6MB) \n\n\n# FTP에 업로드\nFTP는 FileZila 를 사용해서 설명합니다. FileZila 는 무료로 사용이 가능한 프로그램 입니다. 다운로드 [https://filezilla-project.org/download.php?type=client]\n모든 파일은 압축을 풀어 웹 서버 디렉토리에 바로 업로드할 수 있습니다.\n\n# 디렉토리 권한 설정\n폴더 목록권한 및 설명./storage미디어 첨부 및 로그 저장 파일 경로\n기본 권한 0707./bootstrap\n./bootstrap/cache기본 권한 0707./config\n./config/productionXE의 기본설정 폴더\n기본 권한 0707./vendorcomposer등 XE 라이브러리 폴더\n기본 권한 0707./pluginsXE 플러그인 폴더\n기본 권한 0707그외 루트 파일XE최상위 파일(index.php, composer.phar 등)\n기본 권한 0707상단에 나온 폴더 하위 및 모든 파일에 권한 0707을 부여합니다.\n\n>  더 나은 제품 경험을 위해 설치된 서버의 환경을 수집하고 있습니다.\n권한 설정할 때 하위 디렉터리로 이동, 모든 파일과 디렉터리에 적용 을 반드시 체크해 주세요. \n\n\n# 웹 인스톨러 실행\nFTP에 파일이 누락된 것이 없다면, 내 사이트로 접속하여 설치를 진행할 수 있습니다. 아래의 화면은 XE를 설치하는 모습입니다.\n\n>  만약 하위 디렉토리에 설치할 경우는 해당 디렉토리로 접속해 주세요.\n\n\n>  DB 접속 정보를 모르거나, 정확히 입력해도 진행되지 않는다면 사용하고 있는 호스팅 회사에 접속 방법을 문의하세요.\n기본 포트와 호스트, DB 이름과 사용자 계정명이 설명한 설치 가이드와 다르게 입력할 수 있습니다.\n\n웹 서버 환경에 따라 cURL 확장 기능이 방화벽으로 차단되어 있는 경우가 있습니다. 사용하는 호스팅 회사에 cURL 사용가능 여부를 확인해주시기 바랍니다.</p>\n\n\n\n\n\n# 알려진 문제점\n# FTP의 파일 업로드 오류\n파일 업로드 및 디렉토리 설정을 완료하고 웹 인스톨러 접근할 때 오류가 발생하는 경우가 있습니다. 이 문제는 FTP 파일 업로드 중 누락된 파일이 있어 발생할 수 있는 문제 입니다. 해결하기 위해서 FTP로 다시 업로드 해야합니다. 동일 조건을 업로드할 경우 비슷한 오류가 계속해서 발생할 수 있으므로 중복파일 건너뛰기 옵션으로 업로드 해보는걸 권장합니다.\n\n# 웹 서버 타임아웃\n서버 성능에 따라 웹 서버 타임아웃 설정에 의해 설치에 실패할 가능성이 있습니다. 이 문제는 사용하고 있는 호스팅 회사 또는 서버 관리자에게 문의하시기 바랍니다.",contentLowercase:"# 설치하기\n# 웹 / ftp 환경에서 설치하기\n>   http://start.xpressengine.io/download/latest.zip 을 다운로드 [http://start.xpressengine.io/download/latest.zip] 합니다. 다운로드 받은 zip 파일의 압축을 풀고 서버에 업로드 합니다.\n\n 공식 홈페이지 [https://www.xpressengine.io/]에서 다운로드 받은 파일은 composer 및 기타 라이브러리가 빌드된 상태의 파일입니다. (약 100mb)\n빌드 된 상태가 아닌 xe 코어만 필요하신 경우 xe 깃허브 [https://github.com/xpressengine/xpressengine]에서 다운로드 해주세요. (약 6mb) \n\n\n# ftp에 업로드\nftp는 filezila 를 사용해서 설명합니다. filezila 는 무료로 사용이 가능한 프로그램 입니다. 다운로드 [https://filezilla-project.org/download.php?type=client]\n모든 파일은 압축을 풀어 웹 서버 디렉토리에 바로 업로드할 수 있습니다.\n\n# 디렉토리 권한 설정\n폴더 목록권한 및 설명./storage미디어 첨부 및 로그 저장 파일 경로\n기본 권한 0707./bootstrap\n./bootstrap/cache기본 권한 0707./config\n./config/productionxe의 기본설정 폴더\n기본 권한 0707./vendorcomposer등 xe 라이브러리 폴더\n기본 권한 0707./pluginsxe 플러그인 폴더\n기본 권한 0707그외 루트 파일xe최상위 파일(index.php, composer.phar 등)\n기본 권한 0707상단에 나온 폴더 하위 및 모든 파일에 권한 0707을 부여합니다.\n\n>  더 나은 제품 경험을 위해 설치된 서버의 환경을 수집하고 있습니다.\n권한 설정할 때 하위 디렉터리로 이동, 모든 파일과 디렉터리에 적용 을 반드시 체크해 주세요. \n\n\n# 웹 인스톨러 실행\nftp에 파일이 누락된 것이 없다면, 내 사이트로 접속하여 설치를 진행할 수 있습니다. 아래의 화면은 xe를 설치하는 모습입니다.\n\n>  만약 하위 디렉토리에 설치할 경우는 해당 디렉토리로 접속해 주세요.\n\n\n>  db 접속 정보를 모르거나, 정확히 입력해도 진행되지 않는다면 사용하고 있는 호스팅 회사에 접속 방법을 문의하세요.\n기본 포트와 호스트, db 이름과 사용자 계정명이 설명한 설치 가이드와 다르게 입력할 수 있습니다.\n\n웹 서버 환경에 따라 curl 확장 기능이 방화벽으로 차단되어 있는 경우가 있습니다. 사용하는 호스팅 회사에 curl 사용가능 여부를 확인해주시기 바랍니다.</p>\n\n\n\n\n\n# 알려진 문제점\n# ftp의 파일 업로드 오류\n파일 업로드 및 디렉토리 설정을 완료하고 웹 인스톨러 접근할 때 오류가 발생하는 경우가 있습니다. 이 문제는 ftp 파일 업로드 중 누락된 파일이 있어 발생할 수 있는 문제 입니다. 해결하기 위해서 ftp로 다시 업로드 해야합니다. 동일 조건을 업로드할 경우 비슷한 오류가 계속해서 발생할 수 있으므로 중복파일 건너뛰기 옵션으로 업로드 해보는걸 권장합니다.\n\n# 웹 서버 타임아웃\n서버 성능에 따라 웹 서버 타임아웃 설정에 의해 설치에 실패할 가능성이 있습니다. 이 문제는 사용하고 있는 호스팅 회사 또는 서버 관리자에게 문의하시기 바랍니다.",charsets:{cjk:!0}},{title:"Composer 사용 방법",frontmatter:{},regularPath:"/01.%20%EC%8B%9C%EC%9E%91%ED%95%98%EA%B8%B0/use_composer.html",relativePath:"01. 시작하기/use_composer.md",key:"v-50769dd1",path:"/01.%20%EC%8B%9C%EC%9E%91%ED%95%98%EA%B8%B0/use_composer.html",headers:[{level:2,title:"Composer 확인하기",slug:"composer-확인하기",charIndex:249},{level:2,title:"Composer 설치하기",slug:"composer-설치하기",charIndex:463},{level:2,title:"설치할 수 없는 상황이라면",slug:"설치할-수-없는-상황이라면",charIndex:877},{level:2,title:"사용하기",slug:"사용하기",charIndex:268},{level:3,title:"설치 또는 사용 가능 한 환경에서는",slug:"설치-또는-사용-가능-한-환경에서는",charIndex:1486},{level:3,title:"XE3 빌트인 컴포저를 사용할 때에는",slug:"xe3-빌트인-컴포저를-사용할-때에는",charIndex:1666}],headersStr:"Composer 확인하기 Composer 설치하기 설치할 수 없는 상황이라면 사용하기 설치 또는 사용 가능 한 환경에서는 XE3 빌트인 컴포저를 사용할 때에는",content:"# Composer 사용 방법\nXpressEngine에서는 플러그인들의 의존성 관리 및 버전 관리를 위하여 composer를 사용하고 있습니다. composer를 설치할 수 있는 환경과 하지 못하는 환경에서 사용할 수 있는 방법을 제공하는 문서입니다.\n\n> 이 매뉴얼은 웹상에서 실행하는 웹쉘에 대한 내용이 아닌 직접 터미널(SSH)에 접근하여 처리해야 하는 내용을 담은 문서입니다. 터미널로 접속 가능한 환경에서 시도해주시기 바랍니다.\n\n\n# Composer 확인하기\nXE3를 사용하기 위해서는 composer(컴포저)가 설치 되어 있어야 합니다. 터미널(SSH)에서 아래의 명령어를 실행하여 컴포저가 설치되어 있는지 확인합니다.\n\n$ composer\n\n그 이후 composer와 관련된 명령어와 설명이 나열된 화면이 표시된다면 설치된 것입니다. 별다른 서버의 설정이 필요 없으며, 바로 설치하여 사용하실 수 있습니다.\n\n# Composer 설치하기\nCurl 또는 sudo를 실행할 수 있는 환경이거나, 가상 서버 등의 환경이라면 composer를 설치하여 손쉽게 Composer를 사용할 수 있습니다.\n\n 1. composer 설치$ curl -sS https://getcomposer.org/installer | sudo php\n 2. 전역 변수로 사용하기 위한 디렉토리 이동$ mv composer.phar /usr/local/bin/\n 3. composer를 입력하여 사용하기 위한 심볼릭 링크 생성$ sudo ln -s /usr/local/bin/composer.phar /usr/local/bin/composer\n 4. 설치확인$ composer명령어를 입력 후, composer와 관련된 설명과 명령어가 나열된다면 정상적으로 사용할 수 있습니다.\n\n# 설치할 수 없는 상황이라면\n모든 서버가 내 서버라면 얼마나 좋을까요, 모든 CMS가 요구하는 패키지를 설치하고, 자유롭게 내 사이트를 만들고 일할 수만 있다면 말이에요.\n\n아쉽게도 서버 관리자 아니거나, 웹호스팅 제공사에서 컴포저를 제공하지 않아서 설치가 안 될까 걱정이신가요? 그런 걱정을 덜기 위하여 모든 배포본에 컴포저를 빌드하여 제공하고 있습니다.\n\n다만, 이 기능들을 사용하기 위해서는 터미널(SSH)가 필요하다는 사실!\n\n 1. 공식 홈페이지에서 XE3를 내려받습니다. 클릭해서 내려받기 [http://start.xpressengine.io/download/latest.zip]\n 2. 내 서버에 압축을 풀어 올려 놓거나, zip파일 올려놓기\n 3. XE3를 설치하기.\n 4. 관리자 사이트로 로그인 한 후 관리자 사이트에서 설정 > 기본설정을 클릭 합니다.\n 5. Composer 홈 디렉토리 항목에 XE3를 설치한 디렉토리를 입력합니다.\n 6. 너. 내 XE 사이트가 되어라!\n\n> 압축 파일을 그대로 올릴 경우 터미널에서 웹 디렉토리로 이동 후 unzip ./latest.zip을 사용하여 압축을 풀어 준 후 내 웹사이트로 접속하여 설치하여야 합니다.\n\n\n# 사용하기\n# 설치 또는 사용 가능 한 환경에서는\n컴포저가 설치 되어있어 사용가능 하거나, 설치한 경우에는 터미널에서 아래의 명령어와 같이 실행 가능 합니다. 아래의 명령어는 개인 플러그인(private 플러그인)을 설치할 때 사용하는 명령어 이며, 플러그인 폴더에 위치 하였을 때 사용할 수 있습니다.$ composer dump\n\n# XE3 빌트인 컴포저를 사용할 때에는\n컴포저가 설치되어 있지 않거나, 설치할 수 없는 경우에는 XE3코어와 함께 빌트인 된 컴포저를 사용해야 합니다. 아래의 명령어를 통해 사용할 수 있으며, 개인 플러그인을 설치 할때 사용하는 명령어를 통해 예시를 표현합니다.$ /home/phantom/composer.phar dump\n\n만약 매뉴얼의 방법대로 진행하였으나 작동되지 않는 경우 XE3 헬프센터 [%5Bhttps://www.xpressengine.io/help%5D(https://www.xpressengine.io/help)] 를 확인하거나 QnA [%5Bhttps://www.xpressengine.io/qna%5D(https://www.xpressengine.io/qna)]에 문의해주세요.",contentLowercase:"# composer 사용 방법\nxpressengine에서는 플러그인들의 의존성 관리 및 버전 관리를 위하여 composer를 사용하고 있습니다. composer를 설치할 수 있는 환경과 하지 못하는 환경에서 사용할 수 있는 방법을 제공하는 문서입니다.\n\n> 이 매뉴얼은 웹상에서 실행하는 웹쉘에 대한 내용이 아닌 직접 터미널(ssh)에 접근하여 처리해야 하는 내용을 담은 문서입니다. 터미널로 접속 가능한 환경에서 시도해주시기 바랍니다.\n\n\n# composer 확인하기\nxe3를 사용하기 위해서는 composer(컴포저)가 설치 되어 있어야 합니다. 터미널(ssh)에서 아래의 명령어를 실행하여 컴포저가 설치되어 있는지 확인합니다.\n\n$ composer\n\n그 이후 composer와 관련된 명령어와 설명이 나열된 화면이 표시된다면 설치된 것입니다. 별다른 서버의 설정이 필요 없으며, 바로 설치하여 사용하실 수 있습니다.\n\n# composer 설치하기\ncurl 또는 sudo를 실행할 수 있는 환경이거나, 가상 서버 등의 환경이라면 composer를 설치하여 손쉽게 composer를 사용할 수 있습니다.\n\n 1. composer 설치$ curl -ss https://getcomposer.org/installer | sudo php\n 2. 전역 변수로 사용하기 위한 디렉토리 이동$ mv composer.phar /usr/local/bin/\n 3. composer를 입력하여 사용하기 위한 심볼릭 링크 생성$ sudo ln -s /usr/local/bin/composer.phar /usr/local/bin/composer\n 4. 설치확인$ composer명령어를 입력 후, composer와 관련된 설명과 명령어가 나열된다면 정상적으로 사용할 수 있습니다.\n\n# 설치할 수 없는 상황이라면\n모든 서버가 내 서버라면 얼마나 좋을까요, 모든 cms가 요구하는 패키지를 설치하고, 자유롭게 내 사이트를 만들고 일할 수만 있다면 말이에요.\n\n아쉽게도 서버 관리자 아니거나, 웹호스팅 제공사에서 컴포저를 제공하지 않아서 설치가 안 될까 걱정이신가요? 그런 걱정을 덜기 위하여 모든 배포본에 컴포저를 빌드하여 제공하고 있습니다.\n\n다만, 이 기능들을 사용하기 위해서는 터미널(ssh)가 필요하다는 사실!\n\n 1. 공식 홈페이지에서 xe3를 내려받습니다. 클릭해서 내려받기 [http://start.xpressengine.io/download/latest.zip]\n 2. 내 서버에 압축을 풀어 올려 놓거나, zip파일 올려놓기\n 3. xe3를 설치하기.\n 4. 관리자 사이트로 로그인 한 후 관리자 사이트에서 설정 > 기본설정을 클릭 합니다.\n 5. composer 홈 디렉토리 항목에 xe3를 설치한 디렉토리를 입력합니다.\n 6. 너. 내 xe 사이트가 되어라!\n\n> 압축 파일을 그대로 올릴 경우 터미널에서 웹 디렉토리로 이동 후 unzip ./latest.zip을 사용하여 압축을 풀어 준 후 내 웹사이트로 접속하여 설치하여야 합니다.\n\n\n# 사용하기\n# 설치 또는 사용 가능 한 환경에서는\n컴포저가 설치 되어있어 사용가능 하거나, 설치한 경우에는 터미널에서 아래의 명령어와 같이 실행 가능 합니다. 아래의 명령어는 개인 플러그인(private 플러그인)을 설치할 때 사용하는 명령어 이며, 플러그인 폴더에 위치 하였을 때 사용할 수 있습니다.$ composer dump\n\n# xe3 빌트인 컴포저를 사용할 때에는\n컴포저가 설치되어 있지 않거나, 설치할 수 없는 경우에는 xe3코어와 함께 빌트인 된 컴포저를 사용해야 합니다. 아래의 명령어를 통해 사용할 수 있으며, 개인 플러그인을 설치 할때 사용하는 명령어를 통해 예시를 표현합니다.$ /home/phantom/composer.phar dump\n\n만약 매뉴얼의 방법대로 진행하였으나 작동되지 않는 경우 xe3 헬프센터 [%5bhttps://www.xpressengine.io/help%5d(https://www.xpressengine.io/help)] 를 확인하거나 qna [%5bhttps://www.xpressengine.io/qna%5d(https://www.xpressengine.io/qna)]에 문의해주세요.",charsets:{cjk:!0}},{title:"관리자 비밀번호 설정",frontmatter:{},regularPath:"/02.%20%EC%82%AC%EC%9D%B4%ED%8A%B8%20%EC%84%A4%EC%A0%95/administrator-password.html",relativePath:"02. 사이트 설정/administrator-password.md",key:"v-d8292974",path:"/02.%20%EC%82%AC%EC%9D%B4%ED%8A%B8%20%EC%84%A4%EC%A0%95/administrator-password.html",headers:[{level:2,title:"기본 설정 값",slug:"기본-설정-값",charIndex:69},{level:2,title:"설정 값",slug:"설정-값",charIndex:72},{level:2,title:"비밀번호 설정",slug:"비밀번호-설정",charIndex:6}],headersStr:"기본 설정 값 설정 값 비밀번호 설정",content:"# 관리자 비밀번호 설정\n회원정보 또는 테마의 코드와 같은 민감한 페이지를 접근할때에 비밀번호를 사용할 수 있습니다.\n\n# 기본 설정 값\n기본적으로 XE를 설치하고나서 관리자 인증 비밀번호는 관리자의 로그인 비밀번호와 동일합니다. 만약 사이트 관리자를 제외하고 회원 또는 테마만 관리하는 관리자가 따로 있는 경우 비밀번호를 분리하여 관리할 수 있습니다.\n\n# 설정 값\n * expire : 인증 시간이 얼마나 유효한지를 입력합니다. (분 단위, 기본 30분)\n * password : 인증 비밀번호\n\n# 비밀번호 설정\n파일 설정은 config/production/auth.php 파일에 password항목으로 지정됩니다.\n\nreturn [\n    'admin' => [\n        'session' => 'auth.admin',\n        'expire' => 30,\n        'password' => 'admin',\n    ],\n];\n\n\n위의 내용은 관리자 아이디의 비밀번호가 admin일때 기본 생성된 관리자 비밀번호입니다.\n비밀번호는 아래처럼 변경할 수 있습니다.\n\nreturn [\n    'admin' => [\n        'session' => 'auth.admin',\n        'expire' => 30,\n        'password' => 'password!@#admin',\n    ],\n];",contentLowercase:"# 관리자 비밀번호 설정\n회원정보 또는 테마의 코드와 같은 민감한 페이지를 접근할때에 비밀번호를 사용할 수 있습니다.\n\n# 기본 설정 값\n기본적으로 xe를 설치하고나서 관리자 인증 비밀번호는 관리자의 로그인 비밀번호와 동일합니다. 만약 사이트 관리자를 제외하고 회원 또는 테마만 관리하는 관리자가 따로 있는 경우 비밀번호를 분리하여 관리할 수 있습니다.\n\n# 설정 값\n * expire : 인증 시간이 얼마나 유효한지를 입력합니다. (분 단위, 기본 30분)\n * password : 인증 비밀번호\n\n# 비밀번호 설정\n파일 설정은 config/production/auth.php 파일에 password항목으로 지정됩니다.\n\nreturn [\n    'admin' => [\n        'session' => 'auth.admin',\n        'expire' => 30,\n        'password' => 'admin',\n    ],\n];\n\n\n위의 내용은 관리자 아이디의 비밀번호가 admin일때 기본 생성된 관리자 비밀번호입니다.\n비밀번호는 아래처럼 변경할 수 있습니다.\n\nreturn [\n    'admin' => [\n        'session' => 'auth.admin',\n        'expire' => 30,\n        'password' => 'password!@#admin',\n    ],\n];",charsets:{cjk:!0}},{title:"캡챠 설정",frontmatter:{},regularPath:"/02.%20%EC%82%AC%EC%9D%B4%ED%8A%B8%20%EC%84%A4%EC%A0%95/capcha_setup.html",relativePath:"02. 사이트 설정/capcha_setup.md",key:"v-43e69ee6",path:"/02.%20%EC%82%AC%EC%9D%B4%ED%8A%B8%20%EC%84%A4%EC%A0%95/capcha_setup.html",headers:[{level:2,title:"환경 설정",slug:"환경-설정",charIndex:63},{level:3,title:"파일 생성",slug:"파일-생성",charIndex:71},{level:3,title:"관리자 설정",slug:"관리자-설정",charIndex:1027}],headersStr:"환경 설정 파일 생성 관리자 설정",content:"# 캡챠 설정\n회원가입을 하거나, 수정 하는 등 코어에서 제공하는 네이버/구글 캡챠를 사용할 수 있습니다.\n\n# 환경 설정\n# 파일 생성\n현재 API키를 등록하는 방법은 관리자 페이지에서 제공하고 있지 않습니다.config/production/captcha.php 파일을 추가해야합니다.\n\n<?php\n/**\n * config/production/captcha.php\n *\n * PHP version 7\n *\n * @category    Config\n * @author      XE Developers <developers@xpressengine.com>\n * @copyright   2019 Copyright XEHub Corp. <https://www.xehub.io>\n * @license     http://www.gnu.org/licenses/lgpl-3.0-standalone.html LGPL\n * @link        https://xpressengine.io\n */\n\nreturn [\n    // 캡챠를 google로 사용하는 경우\n    'driver' => env('CAPTCHA_DRIVER', 'google'),\n    \n    // 캡챠를 naver로 사용하는 경우\n    'driver' => env('CAPTCHA_DRIVER', 'naver'),\n    \n    \n    'apis' => [\n    // 구글 API정보\n        'google' => [\n            'siteKey' => env('google_site_key', null),\n            'secret' => env('google_secret_key', null)\n        ],\n    // 네이버 API정보\n        'naver' => [\n            'clientId' => env('naver_client_key', null),\n            'secret' => env('naver_secret_key', null)\n        ],\n        \n    ]\n];\n\n\n# 관리자 설정\n관리자 페이지로 로그인하여, 회원 > 설정 > 기본설정 으로 이동합니다. \"로그인 시 CAPTCHA 사용\" 항목에 사용 버튼을 클릭후 저장하면 끝!",contentLowercase:"# 캡챠 설정\n회원가입을 하거나, 수정 하는 등 코어에서 제공하는 네이버/구글 캡챠를 사용할 수 있습니다.\n\n# 환경 설정\n# 파일 생성\n현재 api키를 등록하는 방법은 관리자 페이지에서 제공하고 있지 않습니다.config/production/captcha.php 파일을 추가해야합니다.\n\n<?php\n/**\n * config/production/captcha.php\n *\n * php version 7\n *\n * @category    config\n * @author      xe developers <developers@xpressengine.com>\n * @copyright   2019 copyright xehub corp. <https://www.xehub.io>\n * @license     http://www.gnu.org/licenses/lgpl-3.0-standalone.html lgpl\n * @link        https://xpressengine.io\n */\n\nreturn [\n    // 캡챠를 google로 사용하는 경우\n    'driver' => env('captcha_driver', 'google'),\n    \n    // 캡챠를 naver로 사용하는 경우\n    'driver' => env('captcha_driver', 'naver'),\n    \n    \n    'apis' => [\n    // 구글 api정보\n        'google' => [\n            'sitekey' => env('google_site_key', null),\n            'secret' => env('google_secret_key', null)\n        ],\n    // 네이버 api정보\n        'naver' => [\n            'clientid' => env('naver_client_key', null),\n            'secret' => env('naver_secret_key', null)\n        ],\n        \n    ]\n];\n\n\n# 관리자 설정\n관리자 페이지로 로그인하여, 회원 > 설정 > 기본설정 으로 이동합니다. \"로그인 시 captcha 사용\" 항목에 사용 버튼을 클릭후 저장하면 끝!",charsets:{cjk:!0}},{title:"컨텐츠 관리 및 신고 집계",frontmatter:{},regularPath:"/02.%20%EC%82%AC%EC%9D%B4%ED%8A%B8%20%EC%84%A4%EC%A0%95/content-management.html",relativePath:"02. 사이트 설정/content-management.md",key:"v-1a6a2074",path:"/02.%20%EC%82%AC%EC%9D%B4%ED%8A%B8%20%EC%84%A4%EC%A0%95/content-management.html",headers:[{level:2,title:"신고된 게시글을 확인하는 방법",slug:"신고된-게시글을-확인하는-방법",charIndex:19},{level:2,title:"게시글을 숨김 처리 하는 법",slug:"게시글을-숨김-처리-하는-법",charIndex:196},{level:3,title:"게시글을 휴지통으로 보내는법",slug:"게시글을-휴지통으로-보내는법",charIndex:331},{level:3,title:"게시글을 휴지통에서 복원시키는 법",slug:"게시글을-휴지통에서-복원시키는-법",charIndex:519},{level:3,title:"게시글을 숨김 해제 하는 법",slug:"게시글을-숨김-해제-하는-법",charIndex:652},{level:2,title:"댓글을 숨김 처리 하는 법",slug:"댓글을-숨김-처리-하는-법",charIndex:819},{level:3,title:"댓글을 휴지통으로 보내는법",slug:"댓글을-휴지통으로-보내는법",charIndex:950},{level:3,title:"댓글을 휴지통에서 복원시키는 법",slug:"댓글을-휴지통에서-복원시키는-법",charIndex:1133},{level:3,title:"댓글을 숨김 해제 하는 법",slug:"댓글을-숨김-해제-하는-법",charIndex:1261}],headersStr:"신고된 게시글을 확인하는 방법 게시글을 숨김 처리 하는 법 게시글을 휴지통으로 보내는법 게시글을 휴지통에서 복원시키는 법 게시글을 숨김 해제 하는 법 댓글을 숨김 처리 하는 법 댓글을 휴지통으로 보내는법 댓글을 휴지통에서 복원시키는 법 댓글을 숨김 해제 하는 법",content:'# 컨텐츠 관리 및 신고 집계\n# 신고된 게시글을 확인하는 방법\n사이트를 운영하다 보면 운영규칙에 맞지 않는 글에 대해서 신고 기능을 사용해야할 때, 유용하게 사용할 수 있는 기본 신고 기능입니다.\n\n 1. 컨텐츠 > 신고 클릭\n 2. 신고된 게시글의 신고 회원과 링크, 날짜와 IP주소를 확인합니다.\n 3. 게시글을 적당히 조치!\n 4. 완료\n\n# 게시글을 숨김 처리 하는 법\n컨텐츠 > 게시판 > 게시물 관리 에서 관리자가 게시글을 숨김처리 할 수 있습니다.\n\n 1. 컨텐츠 > 게시판 > 게시물 관리 클릭\n 2. 숨김 처리할 게시글 체크\n 3. 상단의 승인 반려 클릭\n 4. 완료\n\n# 게시글을 휴지통으로 보내는법\n웹사이트를 운영하다보면, 삭제하기는 어려우며, 숨김처리만으로는 아쉬운 게시글들이 있습니다.\n이를 관리자 운영 측면에서 관리하기 편한 "휴지통" 으로 보낼 수 있습니다.\n\n 1. 컨텐츠 > 게시판 > 게시물 관리 클릭\n 2. 휴지통으로 보낼 게시글 체크\n 3. 상단의 휴지통 버튼 클릭\n 4. 이동 완료\n\n# 게시글을 휴지통에서 복원시키는 법\n휴지통으로 실수로 옮겼다고 하더라도, 다시 원래대로 복원시킬 수 있습니다.\n\n 1. 컨텐츠 > 게시판 > 휴지통 관리 클릭\n 2. 복원할 게시글 체크\n 3. 상단의 복원 버튼 클릭\n 4. 이동 완료\n\n# 게시글을 숨김 해제 하는 법\n승인 반려를 통해 숨긴 게시글을 노출시킬 수 있습니다.\n또한, 승인을 통해 노출되는 게시판에서는 아래의 방법을 통해 승인할 수 있습니다.\n\n 1. 컨텐츠 > 게시판 > 게시물 관리 클릭\n 2. 승인할 게시글 체크\n 3. 상단의 게시승인 버튼 클릭\n 4. 승인 완료\n\n# 댓글을 숨김 처리 하는 법\n컨텐츠 > 게시판 > 게시물 관리 에서 관리자가 게시글을 숨김처리 할 수 있습니다.\n\n 1. 컨텐츠 > 댓글 > 댓글 관리 클릭\n 2. 숨김 처리할 댓글 체크\n 3. 상단의 승인 반려 클릭\n 4. 완료\n\n# 댓글을 휴지통으로 보내는법\n웹사이트를 운영하다보면, 삭제하기는 어려우며, 숨김처리만으로는 아쉬운 댓글들이 있습니다. 이를 관리자 운영 측면에서 관리하기 편한 "휴지통" 으로 보낼 수 있습니다.\n\n 1. 컨텐츠 > 댓글 > 댓글 관리 클릭\n 2. 휴지통으로 보낼 댓글 체크\n 3. 상단의 휴지통 버튼 클릭\n 4. 이동 완료\n\n# 댓글을 휴지통에서 복원시키는 법\n휴지통으로 실수로 옮겼다고 하더라도, 다시 원래대로 복원시킬 수 있습니다.\n\n 1. 컨텐츠 > 댓글 > 휴지통 클릭\n 2. 복원할 게시글 체크\n 3. 상단의 복원 버튼 클릭\n 4. 이동 완료\n\n# 댓글을 숨김 해제 하는 법\n승인 반려를 통해 숨긴 댓글을 노출시킬 수 있습니다. 또한, 승인을 통해 노출되는 게시판의 댓글에서는 아래의 방법을 통해 승인할 수 있습니다.\n\n 1. 컨텐츠 > 댓글 > 댓글 관리 클릭\n 2. 승인할 게시글 체크\n 3. 상단의 게시승인 버튼 클릭\n 4. 승인 완료',contentLowercase:'# 컨텐츠 관리 및 신고 집계\n# 신고된 게시글을 확인하는 방법\n사이트를 운영하다 보면 운영규칙에 맞지 않는 글에 대해서 신고 기능을 사용해야할 때, 유용하게 사용할 수 있는 기본 신고 기능입니다.\n\n 1. 컨텐츠 > 신고 클릭\n 2. 신고된 게시글의 신고 회원과 링크, 날짜와 ip주소를 확인합니다.\n 3. 게시글을 적당히 조치!\n 4. 완료\n\n# 게시글을 숨김 처리 하는 법\n컨텐츠 > 게시판 > 게시물 관리 에서 관리자가 게시글을 숨김처리 할 수 있습니다.\n\n 1. 컨텐츠 > 게시판 > 게시물 관리 클릭\n 2. 숨김 처리할 게시글 체크\n 3. 상단의 승인 반려 클릭\n 4. 완료\n\n# 게시글을 휴지통으로 보내는법\n웹사이트를 운영하다보면, 삭제하기는 어려우며, 숨김처리만으로는 아쉬운 게시글들이 있습니다.\n이를 관리자 운영 측면에서 관리하기 편한 "휴지통" 으로 보낼 수 있습니다.\n\n 1. 컨텐츠 > 게시판 > 게시물 관리 클릭\n 2. 휴지통으로 보낼 게시글 체크\n 3. 상단의 휴지통 버튼 클릭\n 4. 이동 완료\n\n# 게시글을 휴지통에서 복원시키는 법\n휴지통으로 실수로 옮겼다고 하더라도, 다시 원래대로 복원시킬 수 있습니다.\n\n 1. 컨텐츠 > 게시판 > 휴지통 관리 클릭\n 2. 복원할 게시글 체크\n 3. 상단의 복원 버튼 클릭\n 4. 이동 완료\n\n# 게시글을 숨김 해제 하는 법\n승인 반려를 통해 숨긴 게시글을 노출시킬 수 있습니다.\n또한, 승인을 통해 노출되는 게시판에서는 아래의 방법을 통해 승인할 수 있습니다.\n\n 1. 컨텐츠 > 게시판 > 게시물 관리 클릭\n 2. 승인할 게시글 체크\n 3. 상단의 게시승인 버튼 클릭\n 4. 승인 완료\n\n# 댓글을 숨김 처리 하는 법\n컨텐츠 > 게시판 > 게시물 관리 에서 관리자가 게시글을 숨김처리 할 수 있습니다.\n\n 1. 컨텐츠 > 댓글 > 댓글 관리 클릭\n 2. 숨김 처리할 댓글 체크\n 3. 상단의 승인 반려 클릭\n 4. 완료\n\n# 댓글을 휴지통으로 보내는법\n웹사이트를 운영하다보면, 삭제하기는 어려우며, 숨김처리만으로는 아쉬운 댓글들이 있습니다. 이를 관리자 운영 측면에서 관리하기 편한 "휴지통" 으로 보낼 수 있습니다.\n\n 1. 컨텐츠 > 댓글 > 댓글 관리 클릭\n 2. 휴지통으로 보낼 댓글 체크\n 3. 상단의 휴지통 버튼 클릭\n 4. 이동 완료\n\n# 댓글을 휴지통에서 복원시키는 법\n휴지통으로 실수로 옮겼다고 하더라도, 다시 원래대로 복원시킬 수 있습니다.\n\n 1. 컨텐츠 > 댓글 > 휴지통 클릭\n 2. 복원할 게시글 체크\n 3. 상단의 복원 버튼 클릭\n 4. 이동 완료\n\n# 댓글을 숨김 해제 하는 법\n승인 반려를 통해 숨긴 댓글을 노출시킬 수 있습니다. 또한, 승인을 통해 노출되는 게시판의 댓글에서는 아래의 방법을 통해 승인할 수 있습니다.\n\n 1. 컨텐츠 > 댓글 > 댓글 관리 클릭\n 2. 승인할 게시글 체크\n 3. 상단의 게시승인 버튼 클릭\n 4. 승인 완료',charsets:{cjk:!0}},{title:"기본 테마 설정",frontmatter:{},regularPath:"/02.%20%EC%82%AC%EC%9D%B4%ED%8A%B8%20%EC%84%A4%EC%A0%95/default-theme-setting.html",relativePath:"02. 사이트 설정/default-theme-setting.md",key:"v-4cd237d8",path:"/02.%20%EC%82%AC%EC%9D%B4%ED%8A%B8%20%EC%84%A4%EC%A0%95/default-theme-setting.html",headers:[{level:2,title:"기본 테마 설정이란?",slug:"기본-테마-설정이란",charIndex:13},{level:3,title:"기본 테마 설정하기",slug:"기본-테마-설정하기",charIndex:125}],headersStr:"기본 테마 설정이란? 기본 테마 설정하기",content:"# 기본 테마 설정\n# 기본 테마 설정이란?\n사이트에서 기본으로 출력할 데스크탑과 모바일의 테마를 지정할 수 있습니다.\n별도로 테마를 지정하지 않을 경우, 기본 테마 설정에서 설정한 테마를 기본적으로 출력하게 됩니다.\n\n# 기본 테마 설정하기\n>  기본으로 생성된 사이트맵의 메뉴의 경우 기본 테마 설정을 하더라도 변경되지 않습니다.\n각 메뉴 설정에서 상위 설정 또는 기타 설정을 통해 통합해줘야 합니다. \n\n\n 1. 관리자 사이트의 테마 > 테마설정 을 클릭해주세요.\n 2. 기본으로 사용할 데스크탑과 모바일 테마를 선택해주세요.\n 3. 오른쪽 하단에 위치한 저장버튼을 클릭해주세요.\n 4. 짜잔! 이제 기본 테마로 메뉴와 아이템을 생성할 수 있습니다!",contentLowercase:"# 기본 테마 설정\n# 기본 테마 설정이란?\n사이트에서 기본으로 출력할 데스크탑과 모바일의 테마를 지정할 수 있습니다.\n별도로 테마를 지정하지 않을 경우, 기본 테마 설정에서 설정한 테마를 기본적으로 출력하게 됩니다.\n\n# 기본 테마 설정하기\n>  기본으로 생성된 사이트맵의 메뉴의 경우 기본 테마 설정을 하더라도 변경되지 않습니다.\n각 메뉴 설정에서 상위 설정 또는 기타 설정을 통해 통합해줘야 합니다. \n\n\n 1. 관리자 사이트의 테마 > 테마설정 을 클릭해주세요.\n 2. 기본으로 사용할 데스크탑과 모바일 테마를 선택해주세요.\n 3. 오른쪽 하단에 위치한 저장버튼을 클릭해주세요.\n 4. 짜잔! 이제 기본 테마로 메뉴와 아이템을 생성할 수 있습니다!",charsets:{cjk:!0}},{title:"익스텐션 설치 / 업데이트",frontmatter:{},regularPath:"/02.%20%EC%82%AC%EC%9D%B4%ED%8A%B8%20%EC%84%A4%EC%A0%95/extension-install-update.html",relativePath:"02. 사이트 설정/extension-install-update.md",key:"v-2db98706",path:"/02.%20%EC%82%AC%EC%9D%B4%ED%8A%B8%20%EC%84%A4%EC%A0%95/extension-install-update.html",headers:[{level:2,title:"Composer 설정",slug:"composer-설정",charIndex:180},{level:2,title:"익스텐션 설치하기",slug:"익스텐션-설치하기",charIndex:411},{level:2,title:"익스텐션 활성화 하기",slug:"익스텐션-활성화-하기",charIndex:599},{level:2,title:"익스텐션 비활성화 하기",slug:"익스텐션-비활성화-하기",charIndex:871},{level:2,title:"익스텐션 삭제 하기",slug:"익스텐션-삭제-하기",charIndex:1038}],headersStr:"Composer 설정 익스텐션 설치하기 익스텐션 활성화 하기 익스텐션 비활성화 하기 익스텐션 삭제 하기",content:"# 익스텐션 설치 / 업데이트\n본 페이지에서는 서드 파티 익스텐션을 설치하고, 활성화, 비활성화 하는 방법에 대해 설명하는 문서입니다.\n\n>  공식 익스텐션이 아닌 서드파티 익스텐션의 지원은 공식적으로 지원하고 있지 않습니다.\n각 익스텐션을 사용하며 생기는 문제는 각 익스텐션 작성자에게 바로 문의하시기 바랍니다.\n\n\n# Composer 설정\n플러그인을 웹에서 간편하게 설치하기 위해서는 COMPOSER HOME DIRECTORY 정보를 정확하게 입력해야합니다. composer를 별도로 설치 및 관리하고 있다면 홈 디렉토리를 서버 설정에 맞게 입력해주시기 바랍니다.\n\n만약, 호스팅사에서 제공하지 않거나 설치할 수 없다면 /vendor/composer/bin를 입력하여 XE에서 제공하는 composer를 사용하시기 바랍니다.\n\n# 익스텐션 설치하기\n>  로컬 및 서버 환경에서 composer ssl 설정이 되어있지 않으면 관리자 페이지에서 익스텐션 설치 시 오류가 날 수 있습니다.\n\n\n 1. 관리자 사이트에 로그인하여, 익스텐션 또는 테마를 클릭한 후 추가 메뉴를 클릭해주세요.\n 2. 오른쪽 상단의 설치 하기를 클릭해주세요.\n 3. 잠시 후면 설치 완료!\n\n# 익스텐션 활성화 하기\n익스텐션을 설치했다면, 바로 사용할 수 있는것이 아닙니다.\n익스텐션의 호환성 문제 또는 기타 충돌로 인해 생길 수 있는 문제를 미연에 방지하고자, 익스텐션 활성화 단계를 거쳐주세요.\n\n 1. 관리자 사이트에 로그인하여, 익스텐션 또는 테마를 클릭한 후 설치된 익스텐션을 클릭해주세요.\n 2. 활성화 할 익스텐션 왼쪽에 위치하고 있는 체크박스를 체크 해 주세요.\n 3. 왼쪽 최상단에 위치한 켜기 버튼을 통해 활성화 해주세요.\n 4. 이제 사용할 수 있습니다!\n\n# 익스텐션 비활성화 하기\n 1. 관리자 사이트에 로그인하여, 익스텐션 또는 테마를 클릭한 후 설치된 익스텐션을 클릭해주세요.\n 2. 비활성화할 익스텐션의 왼쪽에 위치하고 있는 체크박스를 체크해주세요,\n 3. 왼쪽 최상단에 위치한 끄기 버튼을 통해 비활성화 해주세요.\n 4. 비활성화 되었습니다.\n\n# 익스텐션 삭제 하기\n>  익스텐션을 삭제하는 경우, 익스텐션을 비활성화 한 후 삭제해야합니다.\n자동으로 비활성화 이후 삭제 하지만, 안전하게 비활성화를 먼저 진행한 후 삭제 절차를 진행 해주세요. \n\n\n익스텐션이 마음에 안드셨나요? 아니면 마음이 바뀌셨나요?\n아쉽지만.. 익스텐션을 삭제하는 방법을 알려드릴게요.\n\n 1. 삭제할 익스텐션을 먼저 비활성화를 해주세요.\n 2. 삭제 할 익스텐션 왼쪽에 위치하고 있는 체크박스를 체크 해 주세요.\n 3. 왼쪽 최상단에 위치한 삭제 버튼을 통해 삭제해주세요.\n 4. 삭제하신다니 아쉽습니다. 익스텐션의 오작동 및 개선은 창작자 작품의 보완을 위해 피드백 하는 센스를 보여주세요.",contentLowercase:"# 익스텐션 설치 / 업데이트\n본 페이지에서는 서드 파티 익스텐션을 설치하고, 활성화, 비활성화 하는 방법에 대해 설명하는 문서입니다.\n\n>  공식 익스텐션이 아닌 서드파티 익스텐션의 지원은 공식적으로 지원하고 있지 않습니다.\n각 익스텐션을 사용하며 생기는 문제는 각 익스텐션 작성자에게 바로 문의하시기 바랍니다.\n\n\n# composer 설정\n플러그인을 웹에서 간편하게 설치하기 위해서는 composer home directory 정보를 정확하게 입력해야합니다. composer를 별도로 설치 및 관리하고 있다면 홈 디렉토리를 서버 설정에 맞게 입력해주시기 바랍니다.\n\n만약, 호스팅사에서 제공하지 않거나 설치할 수 없다면 /vendor/composer/bin를 입력하여 xe에서 제공하는 composer를 사용하시기 바랍니다.\n\n# 익스텐션 설치하기\n>  로컬 및 서버 환경에서 composer ssl 설정이 되어있지 않으면 관리자 페이지에서 익스텐션 설치 시 오류가 날 수 있습니다.\n\n\n 1. 관리자 사이트에 로그인하여, 익스텐션 또는 테마를 클릭한 후 추가 메뉴를 클릭해주세요.\n 2. 오른쪽 상단의 설치 하기를 클릭해주세요.\n 3. 잠시 후면 설치 완료!\n\n# 익스텐션 활성화 하기\n익스텐션을 설치했다면, 바로 사용할 수 있는것이 아닙니다.\n익스텐션의 호환성 문제 또는 기타 충돌로 인해 생길 수 있는 문제를 미연에 방지하고자, 익스텐션 활성화 단계를 거쳐주세요.\n\n 1. 관리자 사이트에 로그인하여, 익스텐션 또는 테마를 클릭한 후 설치된 익스텐션을 클릭해주세요.\n 2. 활성화 할 익스텐션 왼쪽에 위치하고 있는 체크박스를 체크 해 주세요.\n 3. 왼쪽 최상단에 위치한 켜기 버튼을 통해 활성화 해주세요.\n 4. 이제 사용할 수 있습니다!\n\n# 익스텐션 비활성화 하기\n 1. 관리자 사이트에 로그인하여, 익스텐션 또는 테마를 클릭한 후 설치된 익스텐션을 클릭해주세요.\n 2. 비활성화할 익스텐션의 왼쪽에 위치하고 있는 체크박스를 체크해주세요,\n 3. 왼쪽 최상단에 위치한 끄기 버튼을 통해 비활성화 해주세요.\n 4. 비활성화 되었습니다.\n\n# 익스텐션 삭제 하기\n>  익스텐션을 삭제하는 경우, 익스텐션을 비활성화 한 후 삭제해야합니다.\n자동으로 비활성화 이후 삭제 하지만, 안전하게 비활성화를 먼저 진행한 후 삭제 절차를 진행 해주세요. \n\n\n익스텐션이 마음에 안드셨나요? 아니면 마음이 바뀌셨나요?\n아쉽지만.. 익스텐션을 삭제하는 방법을 알려드릴게요.\n\n 1. 삭제할 익스텐션을 먼저 비활성화를 해주세요.\n 2. 삭제 할 익스텐션 왼쪽에 위치하고 있는 체크박스를 체크 해 주세요.\n 3. 왼쪽 최상단에 위치한 삭제 버튼을 통해 삭제해주세요.\n 4. 삭제하신다니 아쉽습니다. 익스텐션의 오작동 및 개선은 창작자 작품의 보완을 위해 피드백 하는 센스를 보여주세요.",charsets:{cjk:!0}},{title:"외부페이지 사용방법",frontmatter:{},regularPath:"/02.%20%EC%82%AC%EC%9D%B4%ED%8A%B8%20%EC%84%A4%EC%A0%95/extern_page.html",relativePath:"02. 사이트 설정/extern_page.md",key:"v-a651c290",path:"/02.%20%EC%82%AC%EC%9D%B4%ED%8A%B8%20%EC%84%A4%EC%A0%95/extern_page.html",headers:[{level:2,title:"플러그인 설치",slug:"플러그인-설치",charIndex:96},{level:2,title:"사용 방법",slug:"사용-방법",charIndex:290},{level:2,title:"페이지를 삭제하는 방법",slug:"페이지를-삭제하는-방법",charIndex:603}],headersStr:"플러그인 설치 사용 방법 페이지를 삭제하는 방법",content:"# 외부페이지 사용방법\nXE에서 제공하는 게시판, 위젯, 심플 페이지를 사용하지 않고 직접 작성한 HTML 또는 PHP파일을 불러와 내 사이트에 보여줄 수 있습니다.\n\n# 플러그인 설치\nXE 코어에서는 기본적으로 외부페이지 플러그인이 설치되거나, 번들로 제공되지 않습니다. 가장 먼저 외부 페이지 익스텐션을 설치합니다. 익스텐션 설치는 이곳을 눌러 설치 방법 [core-setupindex/extension-install-update]을 알아볼 수 있습니다.\n\n설치 이후에는 꼭 익스텐션을 활성화 해줘야 합니다.\n\n# 사용 방법\n관리자 > 사이트 맵> 사이트 메뉴 편집에서 아이템 추가 기능으로 아아템을 추가해서 사용합니다.\n아이템 추가는 아래 순서로 가능합니다.\n\n 1. 사이트맵 추가에서 아이템 추가를 클릭합니다.\n 2. External Page Module를 클릭하고 다음을 클릭합니다.\n 3. 추가할 아이템의 URL와 이름, 테마를 설정 합니다.\n 4. 하단의 External Page Setting 항목에 xe가 설치된 경로를 기준으로 절대 경로를 입력합니다.\n    (예 : /extern_page/page_template/subpage.php)\n 5. 완료!\n\n# 페이지를 삭제하는 방법\n관리자 > 사이트 맵> 사이트 메뉴 편집에서 아이템 제거 기능으로 아이템을 삭제할 수 있습니다. 아이템 삭제는 아래 순서로 가능합니다.\n\n * 삭제할 페이지 이름 클릭\n * 상단의 아이템 삭제하기 클릭\n * 최종 삭제 할 내용을 확인하고 삭제 클릭\n * 깔끔히 삭제되었습니다.",contentLowercase:"# 외부페이지 사용방법\nxe에서 제공하는 게시판, 위젯, 심플 페이지를 사용하지 않고 직접 작성한 html 또는 php파일을 불러와 내 사이트에 보여줄 수 있습니다.\n\n# 플러그인 설치\nxe 코어에서는 기본적으로 외부페이지 플러그인이 설치되거나, 번들로 제공되지 않습니다. 가장 먼저 외부 페이지 익스텐션을 설치합니다. 익스텐션 설치는 이곳을 눌러 설치 방법 [core-setupindex/extension-install-update]을 알아볼 수 있습니다.\n\n설치 이후에는 꼭 익스텐션을 활성화 해줘야 합니다.\n\n# 사용 방법\n관리자 > 사이트 맵> 사이트 메뉴 편집에서 아이템 추가 기능으로 아아템을 추가해서 사용합니다.\n아이템 추가는 아래 순서로 가능합니다.\n\n 1. 사이트맵 추가에서 아이템 추가를 클릭합니다.\n 2. external page module를 클릭하고 다음을 클릭합니다.\n 3. 추가할 아이템의 url와 이름, 테마를 설정 합니다.\n 4. 하단의 external page setting 항목에 xe가 설치된 경로를 기준으로 절대 경로를 입력합니다.\n    (예 : /extern_page/page_template/subpage.php)\n 5. 완료!\n\n# 페이지를 삭제하는 방법\n관리자 > 사이트 맵> 사이트 메뉴 편집에서 아이템 제거 기능으로 아이템을 삭제할 수 있습니다. 아이템 삭제는 아래 순서로 가능합니다.\n\n * 삭제할 페이지 이름 클릭\n * 상단의 아이템 삭제하기 클릭\n * 최종 삭제 할 내용을 확인하고 삭제 클릭\n * 깔끔히 삭제되었습니다.",charsets:{cjk:!0}},{title:"다국어 설정",frontmatter:{},regularPath:"/02.%20%EC%82%AC%EC%9D%B4%ED%8A%B8%20%EC%84%A4%EC%A0%95/language-setting.html",relativePath:"02. 사이트 설정/language-setting.md",key:"v-7d1aff74",path:"/02.%20%EC%82%AC%EC%9D%B4%ED%8A%B8%20%EC%84%A4%EC%A0%95/language-setting.html",headers:[{level:2,title:"다국어 설정이란?",slug:"다국어-설정이란",charIndex:11},{level:2,title:"다국어 언어 추가하기",slug:"다국어-언어-추가하기",charIndex:116}],headersStr:"다국어 설정이란? 다국어 언어 추가하기",content:"# 다국어 설정\n# 다국어 설정이란?\nXE3에서는 유연한 다국어 지원을 위해, 기본적으로 한국어와, 영어를 지원하고 있습니다. 그 이외의 언어를 추가 운영하기 위해서는 하단의 설정을 통해 입력해주세요.\n\n# 다국어 언어 추가하기\nXE3 3.0 기준으로 다국어를 웹에서 추가하는 기능은 추가되어 있지 않습니다. 추후 개선되거나 개발 방향에 의해 진행되지 않을 수 있습니다.‌\n\n 1. FTP를 접속하여 XE3경로/config/production/xe.php 폴더를 열고 아래처럼 추가하고 싶은 국가의 언어 코드를 입력해주세요.",contentLowercase:"# 다국어 설정\n# 다국어 설정이란?\nxe3에서는 유연한 다국어 지원을 위해, 기본적으로 한국어와, 영어를 지원하고 있습니다. 그 이외의 언어를 추가 운영하기 위해서는 하단의 설정을 통해 입력해주세요.\n\n# 다국어 언어 추가하기\nxe3 3.0 기준으로 다국어를 웹에서 추가하는 기능은 추가되어 있지 않습니다. 추후 개선되거나 개발 방향에 의해 진행되지 않을 수 있습니다.‌\n\n 1. ftp를 접속하여 xe3경로/config/production/xe.php 폴더를 열고 아래처럼 추가하고 싶은 국가의 언어 코드를 입력해주세요.",charsets:{cjk:!0}},{title:"미디어 라이브러리",frontmatter:{},regularPath:"/02.%20%EC%82%AC%EC%9D%B4%ED%8A%B8%20%EC%84%A4%EC%A0%95/media_library.html",relativePath:"02. 사이트 설정/media_library.md",key:"v-cb6b8858",path:"/02.%20%EC%82%AC%EC%9D%B4%ED%8A%B8%20%EC%84%A4%EC%A0%95/media_library.html",headers:[{level:2,title:"어떤 기능을 제공하나요?",slug:"어떤-기능을-제공하나요",charIndex:70},{level:2,title:"사용방법",slug:"사용방법",charIndex:444},{level:3,title:"미디어 업로드",slug:"미디어-업로드",charIndex:451},{level:3,title:"환경설정",slug:"환경설정",charIndex:650},{level:3,title:"미디어 사용",slug:"미디어-사용",charIndex:843},{level:2,title:"Installation specification",slug:"installation-specification",charIndex:1014}],headersStr:"어떤 기능을 제공하나요? 사용방법 미디어 업로드 환경설정 미디어 사용 Installation specification",content:"# 미디어 라이브러리\n이 플러그인은 XE에서 효과적으로 미디어를 관리하고 사용할 수 있게 해주는 XE코어의 기능입니다.\n\n# 어떤 기능을 제공하나요?\n미디어를 관리하거나, 사용할 때 반복적인 미디어를 따로 첨부할 필요 없이 가져와 사용할 수 있습니다.\n\n그 이외의도 아래의 기능을 지원합니다.\n\n * 미디어 컨텐츠 리스트를 갤러리형, 목록형으로 볼 수 있습니다.\n * 새로운 폴더를 만들고, 그 폴더에 미디어를 넣어둘 수 있습니다.\n * 미디어를 더블클릭하면 상세 정보를 보여줍니다.\n * 더 이상 사용하지 않는 미디어를 삭제할 수 있습니다.\n * 미디어의 대체 텍스트와 캡션, 설명 등을 입력하고 저장할 수 있습니다.\n * 파일 URL을 공유하여, 외부에 이미지만 보여줄 수 있습니다.\n * 미디어를 한번 클릭하는 경우 선택 모드로 변경되어, 여러 미디어를 한번에 삭제할 수 있습니다.\n\n# 사용방법\n# 미디어 업로드\n관리자가 사전에 사용할 폴더를 만들거나, 미디어를 업로드 하여 사용할 수 있습니다.컨텐츠 > 미디어 로 이동하여 미디어 라이브러리 컨텐츠로 이동합니다.\n\n 1. 오른쪽 상단의 업로드 또는 햄버거 메뉴를 터치하여 업로드 버튼을 누릅니다.\n 2. 파일을 드래그해 업로드하거나, 선택하여 업로드 합니다.\n 3. 업로드 된 파일을 사용합니다!\n\n# 환경설정\n미디어 라이브러리의 이미지 크기와 업로드 용량 등의 설정을 지원하고 있습니다.설정 > 미디어로 이동하여, 미디어 라이브러리 설정 페이지로 이동합니다.\n\n각 크기의 섬네일 최대 크기를 설정할 수 있으며, 파일의 업로드 용량과 종류(jpg, png 등)을 제한할 수 있습니다.\n\n모두 입력하고 저장 버튼을 눌러 저장하실 수 있습니다.\n\n# 미디어 사용\n게시글 또는 페이지 등의 에디터를 사용하는 화면에서 미디어 라이브러리에 업로드 된 미디어를 사용할 수 있습니다.\n\n 1. 파일 첨부란의 미디어 라이브러리 항목을 클릭하세요.\n 2. 사용할 미디어를 클릭하고, 오른쪽 하단의 삽입 버튼을 클릭합니다.\n 3. 본문 삽입된 미디어를 확인하세요!\n\n# Installation specification\n * Minimum installation environment XE3, PHP 7.0 or later\n * Recommended installation environment XE3, PHP 7.1 or later",contentLowercase:"# 미디어 라이브러리\n이 플러그인은 xe에서 효과적으로 미디어를 관리하고 사용할 수 있게 해주는 xe코어의 기능입니다.\n\n# 어떤 기능을 제공하나요?\n미디어를 관리하거나, 사용할 때 반복적인 미디어를 따로 첨부할 필요 없이 가져와 사용할 수 있습니다.\n\n그 이외의도 아래의 기능을 지원합니다.\n\n * 미디어 컨텐츠 리스트를 갤러리형, 목록형으로 볼 수 있습니다.\n * 새로운 폴더를 만들고, 그 폴더에 미디어를 넣어둘 수 있습니다.\n * 미디어를 더블클릭하면 상세 정보를 보여줍니다.\n * 더 이상 사용하지 않는 미디어를 삭제할 수 있습니다.\n * 미디어의 대체 텍스트와 캡션, 설명 등을 입력하고 저장할 수 있습니다.\n * 파일 url을 공유하여, 외부에 이미지만 보여줄 수 있습니다.\n * 미디어를 한번 클릭하는 경우 선택 모드로 변경되어, 여러 미디어를 한번에 삭제할 수 있습니다.\n\n# 사용방법\n# 미디어 업로드\n관리자가 사전에 사용할 폴더를 만들거나, 미디어를 업로드 하여 사용할 수 있습니다.컨텐츠 > 미디어 로 이동하여 미디어 라이브러리 컨텐츠로 이동합니다.\n\n 1. 오른쪽 상단의 업로드 또는 햄버거 메뉴를 터치하여 업로드 버튼을 누릅니다.\n 2. 파일을 드래그해 업로드하거나, 선택하여 업로드 합니다.\n 3. 업로드 된 파일을 사용합니다!\n\n# 환경설정\n미디어 라이브러리의 이미지 크기와 업로드 용량 등의 설정을 지원하고 있습니다.설정 > 미디어로 이동하여, 미디어 라이브러리 설정 페이지로 이동합니다.\n\n각 크기의 섬네일 최대 크기를 설정할 수 있으며, 파일의 업로드 용량과 종류(jpg, png 등)을 제한할 수 있습니다.\n\n모두 입력하고 저장 버튼을 눌러 저장하실 수 있습니다.\n\n# 미디어 사용\n게시글 또는 페이지 등의 에디터를 사용하는 화면에서 미디어 라이브러리에 업로드 된 미디어를 사용할 수 있습니다.\n\n 1. 파일 첨부란의 미디어 라이브러리 항목을 클릭하세요.\n 2. 사용할 미디어를 클릭하고, 오른쪽 하단의 삽입 버튼을 클릭합니다.\n 3. 본문 삽입된 미디어를 확인하세요!\n\n# installation specification\n * minimum installation environment xe3, php 7.0 or later\n * recommended installation environment xe3, php 7.1 or later",charsets:{cjk:!0}},{title:"SEO 설정",frontmatter:{},regularPath:"/02.%20%EC%82%AC%EC%9D%B4%ED%8A%B8%20%EC%84%A4%EC%A0%95/seo.html",relativePath:"02. 사이트 설정/seo.md",key:"v-174bb19a",path:"/02.%20%EC%82%AC%EC%9D%B4%ED%8A%B8%20%EC%84%A4%EC%A0%95/seo.html",headers:[{level:2,title:"SEO 설정이란?",slug:"seo-설정이란",charIndex:11},{level:3,title:"SEO 기본 설정 하기",slug:"seo-기본-설정-하기",charIndex:252}],headersStr:"SEO 설정이란? SEO 기본 설정 하기",content:"# SEO 설정\n# SEO 설정이란?\n검색 엔진 최적화 (SEO)는 웹 페이지 검색엔진이 자료를 수집하고 순위를 매기는 방식에 맞게 웹 페이지를 구성해서 검색 결과의 상위에 나올 수 있도록 하는 것을 말합니다. 내 사이트에 있는 문서가 검색엔진에 색인되도록 또는 더 잘 노출되도록 설정합니다\n\n>  XE3에 내장된 SEO설정은 귀하의 사이트를 꼭 상위에 나오게끔 해주는 도구가 아니며 어디까지나 보조역할을 하는 기능임을 알아두시기 바랍니다. \n\n\n# SEO 기본 설정 하기\n본 기본설정을 하더라도 일부 검색엔진에는 바로 노출이 되지 않을 수 있습니다. 각 검색엔진의 웹마스터 도구, 또는 검색도구를 통해 사이트를 등록 & 색인 시켜주세요.\n\n 1. 관리자 사이트의 설정 > 기본설정 을 클릭해주세요.\n 2. 상세설정의 항목을 입력해주세요. (필수는 아님)\n 3. 사이트 대표사진이 있는 경우 업로드 하고 저장 버튼을 누르면 끝!",contentLowercase:"# seo 설정\n# seo 설정이란?\n검색 엔진 최적화 (seo)는 웹 페이지 검색엔진이 자료를 수집하고 순위를 매기는 방식에 맞게 웹 페이지를 구성해서 검색 결과의 상위에 나올 수 있도록 하는 것을 말합니다. 내 사이트에 있는 문서가 검색엔진에 색인되도록 또는 더 잘 노출되도록 설정합니다\n\n>  xe3에 내장된 seo설정은 귀하의 사이트를 꼭 상위에 나오게끔 해주는 도구가 아니며 어디까지나 보조역할을 하는 기능임을 알아두시기 바랍니다. \n\n\n# seo 기본 설정 하기\n본 기본설정을 하더라도 일부 검색엔진에는 바로 노출이 되지 않을 수 있습니다. 각 검색엔진의 웹마스터 도구, 또는 검색도구를 통해 사이트를 등록 & 색인 시켜주세요.\n\n 1. 관리자 사이트의 설정 > 기본설정 을 클릭해주세요.\n 2. 상세설정의 항목을 입력해주세요. (필수는 아님)\n 3. 사이트 대표사진이 있는 경우 업로드 하고 저장 버튼을 누르면 끝!",charsets:{cjk:!0}},{title:"회원 설정 및 관리",frontmatter:{},regularPath:"/02.%20%EC%82%AC%EC%9D%B4%ED%8A%B8%20%EC%84%A4%EC%A0%95/member-management.html",relativePath:"02. 사이트 설정/member-management.md",key:"v-4e50b4e8",path:"/02.%20%EC%82%AC%EC%9D%B4%ED%8A%B8%20%EC%84%A4%EC%A0%95/member-management.html",headers:[{level:2,title:"회원을 추가하는 방법",slug:"회원을-추가하는-방법",charIndex:15},{level:2,title:"회원을 삭제하는 방법",slug:"회원을-삭제하는-방법",charIndex:176},{level:2,title:"확장필드를 사용하는 방법",slug:"확장필드를-사용하는-방법",charIndex:328},{level:3,title:"스킨 설정하는 방법",slug:"스킨-설정하는-방법",charIndex:897},{level:2,title:"소셜로그인 연동 / 추가 / 설정",slug:"소셜로그인-연동-추가-설정",charIndex:1020},{level:2,title:"플러그인 설치",slug:"플러그인-설치",charIndex:1203},{level:3,title:"SNS 토큰을 설정 & 발급 받는 방법",slug:"sns-토큰을-설정-발급-받는-방법",charIndex:null},{level:3,title:"plug-in settings",slug:"plug-in-settings",charIndex:1498},{level:3,title:"스킨을 설정하는 방법",slug:"스킨을-설정하는-방법",charIndex:1955}],headersStr:"회원을 추가하는 방법 회원을 삭제하는 방법 확장필드를 사용하는 방법 스킨 설정하는 방법 소셜로그인 연동 / 추가 / 설정 플러그인 설치 SNS 토큰을 설정 & 발급 받는 방법 plug-in settings 스킨을 설정하는 방법",content:"# 회원 설정 및 관리\n# 회원을 추가하는 방법\n회원 > 회원 목록에서 관리자 인증 후 새 회원 추가를 통해 관리자가 수동으로 회원을 추가할 수 있습니다.\n\n 1. 회원 > 회원 목록 클릭\n 2. 관리자 인증 후 새 회원 추가 클릭\n 3. 이름, 이메일, 등급, 비밀번호, 그룹을 입력 또는 선택\n 4. 등록\n\n# 회원을 삭제하는 방법\n회원 > 회원 목록에서 관리 탭의 삭제 기능으로 회원을 수동 삭제할 수 있습니다. 회원 삭제는 아래 순서로 가능합니다.\n\n 1. 삭제할 회원의 왼쪽 체크 항목 체크\n 2. 상단의 선택 삭제 클릭\n 3. 삭제 항목에서 삭제 클릭\n 4. 삭제 완료\n\n# 확장필드를 사용하는 방법\n순수한 회원 기능에 추가 정보를 입력 받기에(예 :문의 게시판) 유용한 기능입니다. 아래의 수순을 따라 회원 기능에 원하는 추가 정보 또는 데이터를 입력할 수 있습니다.\n\n 1. 회원 > 설정 > 확장 필드 설정 을 클릭 합니다.\n 2. 오른쪽 추가버튼을 누릅니다.\n 3. 입력할 확장필드의 종류를 선택합니다. (확장 필드의 정보는 하단에 있습니다.)\n 4. 확장 필드의 고유 ID(회원 확장 필드 ID)를 입력 후, 라벨(확장필드의 이름)을 입력 합니다.\n 5. 사용할 것인지의 사용 여부와, 필수 여부를 체크한 후, 스킨을 선택하여 등록합니다.\n 6. 완성!\n\n확장 필드 종류\n\n * Category - (분류/게시글의 종류)\n * Number - (숫자 유형의 데이터)\n * Text - (글자 유형의 데이터)\n * boolean - (불리언 / 참거짓)\n * Address - (주소/ 동호수)\n * Cell phone number - (휴대폰 번호)\n * Textarea - (텍스트 입력 탭)\n * Email - (이메일 주소)\n * Url - (링크형태의 주소/자동링크됨)\n\n# 스킨 설정하는 방법\n스킨을 다르게 하거나, 변경할 수 있습니다.\n\n 1. 회원 > 설정 > 스킨 설정을 클릭합니다.\n 2. 사용할 스킨의 Desktop과 Mobile을 각각 클릭합니다.\n 3. 놀랍게도 설정 완료!\n\n# 소셜로그인 연동 / 추가 / 설정\n>  설치가 필요한 기능입니다.\n본 문서에는 소셜 로그인 플러그인을 설치해야만 사용가능한 기능의 설명을 담고 있습니다.\n본 플러그인은 XE3에 기본 포함된 플러그인이 아닙니다. 설치할때에는 본인의 웹사이트와 동일한 환경의 테스트 환경을 만든 후 충분한 테스트 이후 적용하시기 바랍니다.\n\n\n# 플러그인 설치\n * 관리자 > 플러그인 & 업데이트 > 플러그인 목록 내에 새 플러그인 설치 버튼 클릭\n * social_login 검색 후 설치하기\n\n# SNS 토큰을 설정 & 발급 받는 방법\n관리페이지 > 회원 > 소셜 로그인에서 사용하려는 서비스의 소셜로그인 프로바이더 설정을 등록 후 사용할 수 있습니다.\n\n소셜로그인 프로바이더 설정에서 서비스 별로 발급한 client_id와 client_secret 값을 입력할 수 있으며, 각 서비스의 애플리케이션 등록 시 필요한 callback url을 확인할 수 있습니다.\n\n# plug-in settings\n * Naver의 네아로(네이버 아이디로 로그인) 서비스는 이곳 [https://developers.naver.com/apps/#/list] 에서 관리 & 생성 할 수 있습니다.\n * Facebook의 로그인 API는 이곳 [https://developers.facebook.com/apps/]에서 관리 & 생성 할 수 있습니다.\n * Twitter의 로그인 API는 이곳 [https://developer.twitter.com/en/apps]에서 관리 & 생성 할 수 있습니다.\n * Github의 로그인 API는 이곳 [https://github.com/settings/developers]에서 관리 & 생성 할 수 있습니다.\n * Google의 로그인 API는 이곳 [https://console.developers.google.com/]에서 관리 & 생성 할 수 있습니다.\n\n# 스킨을 설정하는 방법\n소셜로그인의 스킨을 변경할 수 있습니다. 스킨을 제작, 변경 하려면 아래를 따라주세요.\n\n 1. 관리페이지 > 회원 > 소셜로그인 을 클릭해주세요.\n 2. 최상단의 스킨란에 있는 사용하려는 스킨을 클릭해주세요.\n 3. 스킨 바로 아래의 저장버튼을 누르면 완료!",contentLowercase:"# 회원 설정 및 관리\n# 회원을 추가하는 방법\n회원 > 회원 목록에서 관리자 인증 후 새 회원 추가를 통해 관리자가 수동으로 회원을 추가할 수 있습니다.\n\n 1. 회원 > 회원 목록 클릭\n 2. 관리자 인증 후 새 회원 추가 클릭\n 3. 이름, 이메일, 등급, 비밀번호, 그룹을 입력 또는 선택\n 4. 등록\n\n# 회원을 삭제하는 방법\n회원 > 회원 목록에서 관리 탭의 삭제 기능으로 회원을 수동 삭제할 수 있습니다. 회원 삭제는 아래 순서로 가능합니다.\n\n 1. 삭제할 회원의 왼쪽 체크 항목 체크\n 2. 상단의 선택 삭제 클릭\n 3. 삭제 항목에서 삭제 클릭\n 4. 삭제 완료\n\n# 확장필드를 사용하는 방법\n순수한 회원 기능에 추가 정보를 입력 받기에(예 :문의 게시판) 유용한 기능입니다. 아래의 수순을 따라 회원 기능에 원하는 추가 정보 또는 데이터를 입력할 수 있습니다.\n\n 1. 회원 > 설정 > 확장 필드 설정 을 클릭 합니다.\n 2. 오른쪽 추가버튼을 누릅니다.\n 3. 입력할 확장필드의 종류를 선택합니다. (확장 필드의 정보는 하단에 있습니다.)\n 4. 확장 필드의 고유 id(회원 확장 필드 id)를 입력 후, 라벨(확장필드의 이름)을 입력 합니다.\n 5. 사용할 것인지의 사용 여부와, 필수 여부를 체크한 후, 스킨을 선택하여 등록합니다.\n 6. 완성!\n\n확장 필드 종류\n\n * category - (분류/게시글의 종류)\n * number - (숫자 유형의 데이터)\n * text - (글자 유형의 데이터)\n * boolean - (불리언 / 참거짓)\n * address - (주소/ 동호수)\n * cell phone number - (휴대폰 번호)\n * textarea - (텍스트 입력 탭)\n * email - (이메일 주소)\n * url - (링크형태의 주소/자동링크됨)\n\n# 스킨 설정하는 방법\n스킨을 다르게 하거나, 변경할 수 있습니다.\n\n 1. 회원 > 설정 > 스킨 설정을 클릭합니다.\n 2. 사용할 스킨의 desktop과 mobile을 각각 클릭합니다.\n 3. 놀랍게도 설정 완료!\n\n# 소셜로그인 연동 / 추가 / 설정\n>  설치가 필요한 기능입니다.\n본 문서에는 소셜 로그인 플러그인을 설치해야만 사용가능한 기능의 설명을 담고 있습니다.\n본 플러그인은 xe3에 기본 포함된 플러그인이 아닙니다. 설치할때에는 본인의 웹사이트와 동일한 환경의 테스트 환경을 만든 후 충분한 테스트 이후 적용하시기 바랍니다.\n\n\n# 플러그인 설치\n * 관리자 > 플러그인 & 업데이트 > 플러그인 목록 내에 새 플러그인 설치 버튼 클릭\n * social_login 검색 후 설치하기\n\n# sns 토큰을 설정 & 발급 받는 방법\n관리페이지 > 회원 > 소셜 로그인에서 사용하려는 서비스의 소셜로그인 프로바이더 설정을 등록 후 사용할 수 있습니다.\n\n소셜로그인 프로바이더 설정에서 서비스 별로 발급한 client_id와 client_secret 값을 입력할 수 있으며, 각 서비스의 애플리케이션 등록 시 필요한 callback url을 확인할 수 있습니다.\n\n# plug-in settings\n * naver의 네아로(네이버 아이디로 로그인) 서비스는 이곳 [https://developers.naver.com/apps/#/list] 에서 관리 & 생성 할 수 있습니다.\n * facebook의 로그인 api는 이곳 [https://developers.facebook.com/apps/]에서 관리 & 생성 할 수 있습니다.\n * twitter의 로그인 api는 이곳 [https://developer.twitter.com/en/apps]에서 관리 & 생성 할 수 있습니다.\n * github의 로그인 api는 이곳 [https://github.com/settings/developers]에서 관리 & 생성 할 수 있습니다.\n * google의 로그인 api는 이곳 [https://console.developers.google.com/]에서 관리 & 생성 할 수 있습니다.\n\n# 스킨을 설정하는 방법\n소셜로그인의 스킨을 변경할 수 있습니다. 스킨을 제작, 변경 하려면 아래를 따라주세요.\n\n 1. 관리페이지 > 회원 > 소셜로그인 을 클릭해주세요.\n 2. 최상단의 스킨란에 있는 사용하려는 스킨을 클릭해주세요.\n 3. 스킨 바로 아래의 저장버튼을 누르면 완료!",charsets:{cjk:!0}},{title:"사이트맵 추가 및 제거",frontmatter:{},regularPath:"/02.%20%EC%82%AC%EC%9D%B4%ED%8A%B8%20%EC%84%A4%EC%A0%95/sitemap-management.html",relativePath:"02. 사이트 설정/sitemap-management.md",key:"v-7f2bdd74",path:"/02.%20%EC%82%AC%EC%9D%B4%ED%8A%B8%20%EC%84%A4%EC%A0%95/sitemap-management.html",headers:[{level:2,title:"아이템을 추가하는 방법",slug:"아이템을-추가하는-방법",charIndex:17},{level:2,title:"아이템을 삭제하는 방법",slug:"아이템을-삭제하는-방법",charIndex:180},{level:2,title:"권한을 설정하는 방법",slug:"권한을-설정하는-방법",charIndex:351},{level:2,title:"토글메뉴 관리",slug:"토글메뉴-관리",charIndex:409},{level:2,title:"확장 필드를 사용하는 방법",slug:"확장-필드를-사용하는-방법",charIndex:462},{level:2,title:"확장 필드 추가하는 방법",slug:"확장-필드-추가하는-방법",charIndex:479},{level:2,title:"스킨 설정하는 방법",slug:"스킨-설정하는-방법",charIndex:831},{level:2,title:"출력 순서 변경하는 방법",slug:"출력-순서-변경하는-방법",charIndex:914}],headersStr:"아이템을 추가하는 방법 아이템을 삭제하는 방법 권한을 설정하는 방법 토글메뉴 관리 확장 필드를 사용하는 방법 확장 필드 추가하는 방법 스킨 설정하는 방법 출력 순서 변경하는 방법",content:"# 사이트맵 추가 및 제거\n# 아이템을 추가하는 방법\n관리자 > 사이트 맵> 사이트 메뉴 편집에서 아이템 추가 기능으로 아아템을 추가해서 사용합니다. 아이템 추가는 아래 순서로 가능합니다.\n\n * 아이템 추가 클릭\n * 추가할 아이템 타입 선택\n * 추가할 아이템의 URL와 이름, 테마를 설정하고 등록\n * 완료!\n\n# 아이템을 삭제하는 방법\n관리자 > 사이트 맵> 사이트 메뉴 편집에서 아이템 제거 기능으로 아이템을 삭제할 수 있습니다. 아이템 삭제는 아래 순서로 가능합니다.\n\n * 삭제할 아이템 이름 클릭\n * 상단의 아이템 삭제하기 클릭\n * 최종 삭제 할 내용을 확인하고 삭제 클릭\n * 깔끔히 삭제되었습니다.\n\n# 권한을 설정하는 방법\n아이템에 쓰기/읽기/리스트조회/관리자 권한을 부여하거나 제한할 수 있습니다.\n\n# 토글메뉴 관리\n아이템에 존재하는 휴지통 기능 또는 신고 토글 메뉴를 관리할 수 있습니다.\n\n# 확장 필드를 사용하는 방법\n# 확장 필드 추가하는 방법\n순수한 게시판 기능에 추가 정보를 사용하는 게시판 (예 :문의 게시판)에 유용한 기능입니다. 아래의 수순을 따라 게시판에 원하는 추가 정보 또는 데이터를 입력할 수 있습니다.\n\n확장 필드 종류\n\n * Category - (분류/게시글의 종류)\n * Number - (숫자 유형의 데이터)\n * Text - (글자 유형의 데이터)\n * boolean - (불리언 / 참거짓)\n * Address - (주소/ 동호수)\n * Cell phone number - (휴대폰 번호)\n * Textarea - (텍스트 입력 탭)\n * Email - (이메일 주소)\n * Url - (링크형태의 주소/자동링크됨)\n\n# 스킨 설정하는 방법\n각 아이템 마다 스킨을 다르게 하거나, 변경할 수 있습니다. 확장 필드의 스킨 추가의 문서는 여기를 통해 볼 수 있습니다.\n\n# 출력 순서 변경하는 방법\n각 아이템 마다 탭들의 출력 순서, 글을 쓰거나 읽을때의 출력과 입력 순서를 바꿀 수 있습니다.\n\n 1. 출력 순서를 변경할 게시판의 설정 버튼을 클릭 합니다.\n 2. 상단의 탭중 출력 순서를 클릭 합니다.\n 3. 사용하지 않거나 사용할 목록을 설정하고, 출력/입력 순서를 지정합니다.\n 4. 저장버튼을 눌러 설정 완료!",contentLowercase:"# 사이트맵 추가 및 제거\n# 아이템을 추가하는 방법\n관리자 > 사이트 맵> 사이트 메뉴 편집에서 아이템 추가 기능으로 아아템을 추가해서 사용합니다. 아이템 추가는 아래 순서로 가능합니다.\n\n * 아이템 추가 클릭\n * 추가할 아이템 타입 선택\n * 추가할 아이템의 url와 이름, 테마를 설정하고 등록\n * 완료!\n\n# 아이템을 삭제하는 방법\n관리자 > 사이트 맵> 사이트 메뉴 편집에서 아이템 제거 기능으로 아이템을 삭제할 수 있습니다. 아이템 삭제는 아래 순서로 가능합니다.\n\n * 삭제할 아이템 이름 클릭\n * 상단의 아이템 삭제하기 클릭\n * 최종 삭제 할 내용을 확인하고 삭제 클릭\n * 깔끔히 삭제되었습니다.\n\n# 권한을 설정하는 방법\n아이템에 쓰기/읽기/리스트조회/관리자 권한을 부여하거나 제한할 수 있습니다.\n\n# 토글메뉴 관리\n아이템에 존재하는 휴지통 기능 또는 신고 토글 메뉴를 관리할 수 있습니다.\n\n# 확장 필드를 사용하는 방법\n# 확장 필드 추가하는 방법\n순수한 게시판 기능에 추가 정보를 사용하는 게시판 (예 :문의 게시판)에 유용한 기능입니다. 아래의 수순을 따라 게시판에 원하는 추가 정보 또는 데이터를 입력할 수 있습니다.\n\n확장 필드 종류\n\n * category - (분류/게시글의 종류)\n * number - (숫자 유형의 데이터)\n * text - (글자 유형의 데이터)\n * boolean - (불리언 / 참거짓)\n * address - (주소/ 동호수)\n * cell phone number - (휴대폰 번호)\n * textarea - (텍스트 입력 탭)\n * email - (이메일 주소)\n * url - (링크형태의 주소/자동링크됨)\n\n# 스킨 설정하는 방법\n각 아이템 마다 스킨을 다르게 하거나, 변경할 수 있습니다. 확장 필드의 스킨 추가의 문서는 여기를 통해 볼 수 있습니다.\n\n# 출력 순서 변경하는 방법\n각 아이템 마다 탭들의 출력 순서, 글을 쓰거나 읽을때의 출력과 입력 순서를 바꿀 수 있습니다.\n\n 1. 출력 순서를 변경할 게시판의 설정 버튼을 클릭 합니다.\n 2. 상단의 탭중 출력 순서를 클릭 합니다.\n 3. 사용하지 않거나 사용할 목록을 설정하고, 출력/입력 순서를 지정합니다.\n 4. 저장버튼을 눌러 설정 완료!",charsets:{cjk:!0}},{title:"XE Store",frontmatter:{},regularPath:"/02.%20%EC%82%AC%EC%9D%B4%ED%8A%B8%20%EC%84%A4%EC%A0%95/xe-store-token.html",relativePath:"02. 사이트 설정/xe-store-token.md",key:"v-53fe9b06",path:"/02.%20%EC%82%AC%EC%9D%B4%ED%8A%B8%20%EC%84%A4%EC%A0%95/xe-store-token.html",headers:[{level:2,title:"어떻게 사용하나요?",slug:"어떻게-사용하나요",charIndex:117},{level:3,title:"사이트 토큰 등록 및 찾는 방법",slug:"사이트-토큰-등록-및-찾는-방법",charIndex:356},{level:3,title:"내 사이트에 토큰 저장하기",slug:"내-사이트에-토큰-저장하기",charIndex:480},{level:3,title:"XE3 사이트에 플러그인 설치하기",slug:"xe3-사이트에-플러그인-설치하기",charIndex:606},{level:3,title:"터미널에서 플러그인 설치하기",slug:"터미널에서-플러그인-설치하기",charIndex:751}],headersStr:"어떻게 사용하나요? 사이트 토큰 등록 및 찾는 방법 내 사이트에 토큰 저장하기 XE3 사이트에 플러그인 설치하기 터미널에서 플러그인 설치하기",content:"# XE Store\nXE Store는 다양한 테마와 익스텐션 등이 한곳에 모여 판매되거나 배포되는 사이트입니다. 이 사이트에서 구매한 모든 유료 익스텐션 및 테마를 내 사이트로 쉽게 설치할 수 있습니다.\n\n# 어떻게 사용하나요?\n스토어와 연결하는 XE Site Token은 먼저 XE Store에 가입되어 있어야 합니다.XE Store [https://store.xehub.io]에 먼저 가입 후 아래를 따라해주세요.\n\n>  사이트의 도메인이 다른 경우 도메인과 맞지 않는 토큰을 사용할 경우 스토어에서 구매한 라이선스가 적용되지 않거나, 정상 사용할 수 없을 수 있습니다. 사이트의 도메인마다 토큰을 발급하여 사용해 주세요. \n\n\n# 사이트 토큰 등록 및 찾는 방법\n 1. 마이메뉴 > 내 사이트 페이지에 접근합니다.\n 2. 사이트를 추가하거나 등록한 사이트를 편집할 수 있습니다.\n 3. 토큰보기 버튼을 클릭하여 사이트 토큰을 조회할 수 있습니다.\n\n# 내 사이트에 토큰 저장하기\n 1. 설치한 XE3 웹사이트의 관리페이지에 접근합니다.\n 2. 설정 > 기본 설정 페이지에 접근합니다.\n 3. XE Store Token 필드에 스토어에서 조회한 사이트 토큰값을 입력합니다.\n\n# XE3 사이트에 플러그인 설치하기\n 1. XE3 웹사이트 관리페이지에 접근합니다.\n 2. 익스텐션/테마 > 설치 페이지에 접근합니다.\n 3. 등록한 플러그인 탭으로 이동하여 설치할 플러그인 선택합니다.\n 4. 설치하기 버튼을 클릭하면 설치가 진행됩니다.\n\n# 터미널에서 플러그인 설치하기\n 1. 터미널에서 XE3를 설치한 루트 디렉토리로 이동합니다.\n 2. php artisan plugin:install PLUGIN_ID를 터미널에서 입력합니다.\n 3. 설치 내용을 확인하는 메시지가 출력되면 yes를 입력하고 엔터를 칩니다.\n 4. 설치가 진행됩니다.",contentLowercase:"# xe store\nxe store는 다양한 테마와 익스텐션 등이 한곳에 모여 판매되거나 배포되는 사이트입니다. 이 사이트에서 구매한 모든 유료 익스텐션 및 테마를 내 사이트로 쉽게 설치할 수 있습니다.\n\n# 어떻게 사용하나요?\n스토어와 연결하는 xe site token은 먼저 xe store에 가입되어 있어야 합니다.xe store [https://store.xehub.io]에 먼저 가입 후 아래를 따라해주세요.\n\n>  사이트의 도메인이 다른 경우 도메인과 맞지 않는 토큰을 사용할 경우 스토어에서 구매한 라이선스가 적용되지 않거나, 정상 사용할 수 없을 수 있습니다. 사이트의 도메인마다 토큰을 발급하여 사용해 주세요. \n\n\n# 사이트 토큰 등록 및 찾는 방법\n 1. 마이메뉴 > 내 사이트 페이지에 접근합니다.\n 2. 사이트를 추가하거나 등록한 사이트를 편집할 수 있습니다.\n 3. 토큰보기 버튼을 클릭하여 사이트 토큰을 조회할 수 있습니다.\n\n# 내 사이트에 토큰 저장하기\n 1. 설치한 xe3 웹사이트의 관리페이지에 접근합니다.\n 2. 설정 > 기본 설정 페이지에 접근합니다.\n 3. xe store token 필드에 스토어에서 조회한 사이트 토큰값을 입력합니다.\n\n# xe3 사이트에 플러그인 설치하기\n 1. xe3 웹사이트 관리페이지에 접근합니다.\n 2. 익스텐션/테마 > 설치 페이지에 접근합니다.\n 3. 등록한 플러그인 탭으로 이동하여 설치할 플러그인 선택합니다.\n 4. 설치하기 버튼을 클릭하면 설치가 진행됩니다.\n\n# 터미널에서 플러그인 설치하기\n 1. 터미널에서 xe3를 설치한 루트 디렉토리로 이동합니다.\n 2. php artisan plugin:install plugin_id를 터미널에서 입력합니다.\n 3. 설치 내용을 확인하는 메시지가 출력되면 yes를 입력하고 엔터를 칩니다.\n 4. 설치가 진행됩니다.",charsets:{cjk:!0}},{title:"외부페이지 사용방법",frontmatter:{},regularPath:"/03.%20%EB%B2%88%EB%93%A4%20%ED%94%8C%EB%9F%AC%EA%B7%B8%EC%9D%B8/external-page.html",relativePath:"03. 번들 플러그인/external-page.md",key:"v-4987e38a",path:"/03.%20%EB%B2%88%EB%93%A4%20%ED%94%8C%EB%9F%AC%EA%B7%B8%EC%9D%B8/external-page.html",headers:[{level:2,title:"플러그인 설치",slug:"플러그인-설치",charIndex:96},{level:2,title:"사용 방법",slug:"사용-방법",charIndex:290},{level:2,title:"페이지를 삭제하는 방법",slug:"페이지를-삭제하는-방법",charIndex:603}],headersStr:"플러그인 설치 사용 방법 페이지를 삭제하는 방법",content:"# 외부페이지 사용방법\nXE에서 제공하는 게시판, 위젯, 심플 페이지를 사용하지 않고 직접 작성한 HTML 또는 PHP파일을 불러와 내 사이트에 보여줄 수 있습니다.\n\n# 플러그인 설치\nXE 코어에서는 기본적으로 외부페이지 플러그인이 설치되거나, 번들로 제공되지 않습니다. 가장 먼저 외부 페이지 익스텐션을 설치합니다. 익스텐션 설치는 이곳을 눌러 설치 방법 [core-setupindex/extension-install-update]을 알아볼 수 있습니다.\n\n설치 이후에는 꼭 익스텐션을 활성화 해줘야 합니다.\n\n# 사용 방법\n관리자 > 사이트 맵> 사이트 메뉴 편집에서 아이템 추가 기능으로 아아템을 추가해서 사용합니다.\n아이템 추가는 아래 순서로 가능합니다.\n\n 1. 사이트맵 추가에서 아이템 추가를 클릭합니다.\n 2. External Page Module를 클릭하고 다음을 클릭합니다.\n 3. 추가할 아이템의 URL와 이름, 테마를 설정 합니다.\n 4. 하단의 External Page Setting 항목에 xe가 설치된 경로를 기준으로 절대 경로를 입력합니다.\n    (예 : /extern_page/page_template/subpage.php)\n 5. 완료!\n\n# 페이지를 삭제하는 방법\n관리자 > 사이트 맵> 사이트 메뉴 편집에서 아이템 제거 기능으로 아이템을 삭제할 수 있습니다. 아이템 삭제는 아래 순서로 가능합니다.\n\n * 삭제할 페이지 이름 클릭\n * 상단의 아이템 삭제하기 클릭\n * 최종 삭제 할 내용을 확인하고 삭제 클릭\n * 깔끔히 삭제되었습니다.",contentLowercase:"# 외부페이지 사용방법\nxe에서 제공하는 게시판, 위젯, 심플 페이지를 사용하지 않고 직접 작성한 html 또는 php파일을 불러와 내 사이트에 보여줄 수 있습니다.\n\n# 플러그인 설치\nxe 코어에서는 기본적으로 외부페이지 플러그인이 설치되거나, 번들로 제공되지 않습니다. 가장 먼저 외부 페이지 익스텐션을 설치합니다. 익스텐션 설치는 이곳을 눌러 설치 방법 [core-setupindex/extension-install-update]을 알아볼 수 있습니다.\n\n설치 이후에는 꼭 익스텐션을 활성화 해줘야 합니다.\n\n# 사용 방법\n관리자 > 사이트 맵> 사이트 메뉴 편집에서 아이템 추가 기능으로 아아템을 추가해서 사용합니다.\n아이템 추가는 아래 순서로 가능합니다.\n\n 1. 사이트맵 추가에서 아이템 추가를 클릭합니다.\n 2. external page module를 클릭하고 다음을 클릭합니다.\n 3. 추가할 아이템의 url와 이름, 테마를 설정 합니다.\n 4. 하단의 external page setting 항목에 xe가 설치된 경로를 기준으로 절대 경로를 입력합니다.\n    (예 : /extern_page/page_template/subpage.php)\n 5. 완료!\n\n# 페이지를 삭제하는 방법\n관리자 > 사이트 맵> 사이트 메뉴 편집에서 아이템 제거 기능으로 아이템을 삭제할 수 있습니다. 아이템 삭제는 아래 순서로 가능합니다.\n\n * 삭제할 페이지 이름 클릭\n * 상단의 아이템 삭제하기 클릭\n * 최종 삭제 할 내용을 확인하고 삭제 클릭\n * 깔끔히 삭제되었습니다.",charsets:{cjk:!0}},{title:"미디어 라이브러리",frontmatter:{},regularPath:"/03.%20%EB%B2%88%EB%93%A4%20%ED%94%8C%EB%9F%AC%EA%B7%B8%EC%9D%B8/media-library.html",relativePath:"03. 번들 플러그인/media-library.md",key:"v-10992fca",path:"/03.%20%EB%B2%88%EB%93%A4%20%ED%94%8C%EB%9F%AC%EA%B7%B8%EC%9D%B8/media-library.html",headers:[{level:2,title:"어떤 기능을 제공하나요?",slug:"어떤-기능을-제공하나요",charIndex:70},{level:2,title:"사용방법",slug:"사용방법",charIndex:444},{level:3,title:"미디어 업로드",slug:"미디어-업로드",charIndex:451},{level:3,title:"환경설정",slug:"환경설정",charIndex:650},{level:3,title:"미디어 사용",slug:"미디어-사용",charIndex:843},{level:2,title:"Installation specification",slug:"installation-specification",charIndex:1014}],headersStr:"어떤 기능을 제공하나요? 사용방법 미디어 업로드 환경설정 미디어 사용 Installation specification",content:"# 미디어 라이브러리\n이 플러그인은 XE에서 효과적으로 미디어를 관리하고 사용할 수 있게 해주는 XE코어의 기능입니다.\n\n# 어떤 기능을 제공하나요?\n미디어를 관리하거나, 사용할 때 반복적인 미디어를 따로 첨부할 필요 없이 가져와 사용할 수 있습니다.\n\n그 이외의도 아래의 기능을 지원합니다.\n\n * 미디어 컨텐츠 리스트를 갤러리형, 목록형으로 볼 수 있습니다.\n * 새로운 폴더를 만들고, 그 폴더에 미디어를 넣어둘 수 있습니다.\n * 미디어를 더블클릭하면 상세 정보를 보여줍니다.\n * 더 이상 사용하지 않는 미디어를 삭제할 수 있습니다.\n * 미디어의 대체 텍스트와 캡션, 설명 등을 입력하고 저장할 수 있습니다.\n * 파일 URL을 공유하여, 외부에 이미지만 보여줄 수 있습니다.\n * 미디어를 한번 클릭하는 경우 선택 모드로 변경되어, 여러 미디어를 한번에 삭제할 수 있습니다.\n\n# 사용방법\n# 미디어 업로드\n관리자가 사전에 사용할 폴더를 만들거나, 미디어를 업로드 하여 사용할 수 있습니다.컨텐츠 > 미디어 로 이동하여 미디어 라이브러리 컨텐츠로 이동합니다.\n\n 1. 오른쪽 상단의 업로드 또는 햄버거 메뉴를 터치하여 업로드 버튼을 누릅니다.\n 2. 파일을 드래그해 업로드하거나, 선택하여 업로드 합니다.\n 3. 업로드 된 파일을 사용합니다!\n\n# 환경설정\n미디어 라이브러리의 이미지 크기와 업로드 용량 등의 설정을 지원하고 있습니다.설정 > 미디어로 이동하여, 미디어 라이브러리 설정 페이지로 이동합니다.\n\n각 크기의 섬네일 최대 크기를 설정할 수 있으며, 파일의 업로드 용량과 종류(jpg, png 등)을 제한할 수 있습니다.\n\n모두 입력하고 저장 버튼을 눌러 저장하실 수 있습니다.\n\n# 미디어 사용\n게시글 또는 페이지 등의 에디터를 사용하는 화면에서 미디어 라이브러리에 업로드 된 미디어를 사용할 수 있습니다.\n\n 1. 파일 첨부란의 미디어 라이브러리 항목을 클릭하세요.\n 2. 사용할 미디어를 클릭하고, 오른쪽 하단의 삽입 버튼을 클릭합니다.\n 3. 본문 삽입된 미디어를 확인하세요!\n\n# Installation specification\n * Minimum installation environment XE3, PHP 7.0 or later\n * Recommended installation environment XE3, PHP 7.1 or later",contentLowercase:"# 미디어 라이브러리\n이 플러그인은 xe에서 효과적으로 미디어를 관리하고 사용할 수 있게 해주는 xe코어의 기능입니다.\n\n# 어떤 기능을 제공하나요?\n미디어를 관리하거나, 사용할 때 반복적인 미디어를 따로 첨부할 필요 없이 가져와 사용할 수 있습니다.\n\n그 이외의도 아래의 기능을 지원합니다.\n\n * 미디어 컨텐츠 리스트를 갤러리형, 목록형으로 볼 수 있습니다.\n * 새로운 폴더를 만들고, 그 폴더에 미디어를 넣어둘 수 있습니다.\n * 미디어를 더블클릭하면 상세 정보를 보여줍니다.\n * 더 이상 사용하지 않는 미디어를 삭제할 수 있습니다.\n * 미디어의 대체 텍스트와 캡션, 설명 등을 입력하고 저장할 수 있습니다.\n * 파일 url을 공유하여, 외부에 이미지만 보여줄 수 있습니다.\n * 미디어를 한번 클릭하는 경우 선택 모드로 변경되어, 여러 미디어를 한번에 삭제할 수 있습니다.\n\n# 사용방법\n# 미디어 업로드\n관리자가 사전에 사용할 폴더를 만들거나, 미디어를 업로드 하여 사용할 수 있습니다.컨텐츠 > 미디어 로 이동하여 미디어 라이브러리 컨텐츠로 이동합니다.\n\n 1. 오른쪽 상단의 업로드 또는 햄버거 메뉴를 터치하여 업로드 버튼을 누릅니다.\n 2. 파일을 드래그해 업로드하거나, 선택하여 업로드 합니다.\n 3. 업로드 된 파일을 사용합니다!\n\n# 환경설정\n미디어 라이브러리의 이미지 크기와 업로드 용량 등의 설정을 지원하고 있습니다.설정 > 미디어로 이동하여, 미디어 라이브러리 설정 페이지로 이동합니다.\n\n각 크기의 섬네일 최대 크기를 설정할 수 있으며, 파일의 업로드 용량과 종류(jpg, png 등)을 제한할 수 있습니다.\n\n모두 입력하고 저장 버튼을 눌러 저장하실 수 있습니다.\n\n# 미디어 사용\n게시글 또는 페이지 등의 에디터를 사용하는 화면에서 미디어 라이브러리에 업로드 된 미디어를 사용할 수 있습니다.\n\n 1. 파일 첨부란의 미디어 라이브러리 항목을 클릭하세요.\n 2. 사용할 미디어를 클릭하고, 오른쪽 하단의 삽입 버튼을 클릭합니다.\n 3. 본문 삽입된 미디어를 확인하세요!\n\n# installation specification\n * minimum installation environment xe3, php 7.0 or later\n * recommended installation environment xe3, php 7.1 or later",charsets:{cjk:!0}},{title:"컴포넌트",frontmatter:{},regularPath:"/04.%20%EA%B0%9C%EB%B0%9C%EC%9E%90%20%EB%AC%B8%EC%84%9C/component.html",relativePath:"04. 개발자 문서/component.md",key:"v-0b5b6499",path:"/04.%20%EA%B0%9C%EB%B0%9C%EC%9E%90%20%EB%AC%B8%EC%84%9C/component.html",headers:[{level:2,title:"컴포넌트 인터페이스",slug:"컴포넌트-인터페이스",charIndex:699},{level:2,title:"컴포넌트 타입",slug:"컴포넌트-타입",charIndex:834},{level:3,title:"테마",slug:"테마",charIndex:81},{level:3,title:"스킨",slug:"스킨",charIndex:85},{level:3,title:"다이나믹 필드",slug:"다이나믹-필드",charIndex:2315},{level:3,title:"다이나믹 필드 스킨",slug:"다이나믹-필드-스킨",charIndex:2500},{level:3,title:"UI오브젝트",slug:"ui오브젝트",charIndex:1352},{level:3,title:"위젯",slug:"위젯",charIndex:94}],headersStr:"컴포넌트 인터페이스 컴포넌트 타입 테마 스킨 다이나믹 필드 다이나믹 필드 스킨 UI오브젝트 위젯",content:"# 컴포넌트\n컴포넌트는 플러그인을 통해 등록할 수 있는 XE의 구성요소를 통틀어 지칭하는 용어입니다. XE에는 여러가지 타입의 컴포넌트가 있으며 테마, 스킨, 에디터, 위젯 등이 대표적입니다. 각 타입의 컴포넌트들 간에 별다른 공통점은 없습니다. 오직 플러그인 개발자에 의해 등록됨으로써 XE에 추가될 수 있다는 점이 유일한 공통점입니다.\n\n플러그인 개발자들은 컴포넌트를 제작하여 XE에 등록할 수 있습니다. 만약 자신만의 컴포넌트를 만들어 사용하고 싶다면 먼저 플러그인을 하나 생성한 다음 플러그인에 컴포넌트를 추가해 넣습니다. 그 다음, 플러그인을 활성화하면 자신이 제작한 컴포넌트를 XE에서 사용할 수 있습니다.\n\n예를 들어 새로운 테마를 만들어서 자신의 사이트에 적용하고 싶다면, 먼저 빈 플러그인을 하나 생성합니다. 그 다음 플러그인 안에서 테마 컴포넌트를 만듭니다. 만약 테마와 함께 게시판 스킨과 위젯도 만들어서 사이트에 적용하고 싶다면, 이 두가지 컴포넌트도 같은 플러그인에 추가합니다. 플러그인을 활성화하면 플러그인에 포함된 컴포넌트들을 XE에서 모두 사용할 수 있습니다.\n\n>  XE1에서는 각 컴포넌트를 따로 XE에 추가해야 했습니다. XE3에서는 하나의 플러그인에 컴포넌트를 모두 포함하여 한번에 추가할 수 있습니다. 배포할 때에도 마찬가지로 각 컴포넌트를 따로 배포하지 않고, 플러그인 하나에 담아서 배포하면 됩니다.\n\n\n# 컴포넌트 인터페이스\n모든 컴포넌트는 Xpressengine\\Plugin\\ComponentInterface 인터페이스를 구현한 클래스 형태여야 합니다. 이 인터페이스는 컴포넌트를 XE에 등록할 때 필요한 규칙을 한정해주는 역할을 합니다.\n\n# 컴포넌트 타입\nXE는 기본적으로 10개 타입의 컴포넌트를 가지고 있습니다. 각 타입의 컴포넌트는 모두 \\Xpressengine\\Plugin\\ComponentInterface를 구현한 추상클래스를 정의하고 있습니다. 여러분이 어떤 타입의 컴포넌트를 제작하고 싶다면, 그 타입의 추상클래스를 상속받는 클래스를 작성하면 됩니다.\n\n만약, 테마 컴포넌트를 제작하려고 한다면 테마 타입의 추상클래스인 \\Xpressengine\\Theme\\AbstractTheme를 상속받는 클래스를 작성하십시오.\n\n\\Xpressengine\\Plugin\\ComponentInterface\n  ├── 테마 - \\Xpressengine\\Theme\\AbstractTheme\n  ├── 스킨 - \\Xpressengine\\Skin\\AbstractSkin\n  ├── 확장 필드 - \\Xpressengine\\DynamicField\\AbstractType\n  ├── 확장 필드 스킨 - \\Xpressengine\\DynamicField\\AbstractSkin\n  ├── UI오브젝트 - \\Xpressengine\\UIObject\\AbstractUIObject\n  └── 위젯 - \\Xpressengine\\Widget\\AbstractWidget\n\n\n플러그인 개발자는 10개의 타입 이외에 플러그인에서 필요한 타입을 직접 생성하여 사용할 수도 있습니다. 플러그인에서 필요한 컴포넌트 타입을 정의해 놓으면, 다른 플러그인 개발자들이 정의한 타입의 컴포넌트를 제작하여 등록할 수 있습니다.\n\n11개의 XE의 기본 컴포넌트 타입에 대해 간략히 설명해 보겠습니다.\n\n# 테마\n테마는 웹사이트의 디자인과 웹페이지의 전체적인 레이아웃을 결정합니다.\n\n모든 웹사이트는 요청받은 URL에 해당하는 메인 콘텐츠를 출력합니다. 예를 들어 특정 포스트를 출력하는 웹페이지라면, 포스트의 제목, 내용, 댓글목록이 메인 콘텐츠에 해당됩니다. XE는 출력할 메인 콘텐츠를 작성한 후 웹브라우저로 보내기 전에 지정된 테마에게 메인 콘텐츠를 전달합니다. 테마는 웹사이트에서 공통적으로 필요한 헤더, 푸터, 사이드바 영역과 전달받은 메인 콘텐츠 영역을 조립하여, 완성된 웹페이지를 만듭니다. 이때 테마는 웹페이지에 디자인을 결정짓는 마크업을 생성하고, 스타일시트를 로드합니다.\n\n테마 컴포넌트의 제작법은 이 문서를 참조하세요.\n\n# 스킨\n스킨의 목적은 출력되는 웹브라우저에서 출력되는 모든 html을 교체 가능하도록 만들기 위함입니다. 가령, 게시판 플러그인은 글 목록 보기, 글 보기 등의 페이지를 제공합니다. 만약 게시판 플러그인에 스킨을 적용하지 않았다면, 게시판 플러그인의 제작자가 처음 제작한 페이지 디자인을 바꿀 수 없습니다. 하지만 게시판에 스킨 시스템이 적용되어 있다면 사이트 관리자는 다른 개발자가 제작한 게시판 스킨을 선택하고, 사용할 수 있습니다. 자신이 만든 플러그인의 디자인을 사이트 관리자가 교체할 수 있도록 하려면 스킨 시스템을 적용하십시오.\n\n스킨 컴포넌트의 제작법은 이 문서를 참조하세요.\n\n# 다이나믹 필드\n다이나믹 필드는 사용자가 관리자에서 입력필드를 추가해 사용할 수 있도록 해줍니다.\n\n이는 코어의 패키지나 개별 플러그인 별로 지원여부를 결정하며 회원 패키지, Board 플러그인에서 지원하고 있습니다. 다이나믹 필드를 이용해 회원 가입할 때 나이를 입력 받거나 게시물을 작성할 때 주소를 입력받을 수 있습니다.\n\n# 다이나믹 필드 스킨\n다이나믹 필드 스킨은 다이나믹 필드를 출력할 때 사용하는 스킨 입니다.\n\n모든 확장 필드에 스타일을 변경할 수 있도록 합니다.\n\n# UI오브젝트\nXE에서는 화면에 자주 출력되는 UI 요소들이 있습니다. 텍스트 인풋박스나 셀렉트 박스(select)와 같은 기본적인 폼 요소들이 있고, 테마 선택기나 메뉴 선택기, 또는 권한 설정 UI와 같이 XE에서만 사용되는 특별한 요소들도 있습니다. UI오브젝트는 이렇게 자주 사용되는 UI 요소를 개발자들이 쉽게 출력할 수 있는 방법을 제공합니다.\n\n직접 UI요소의 마크업을 작성하는 대신, uio() 함수를 사용하여 UI오브젝트를 출력하십시오. 선택된 UI오브젝트는 알아서 html 마크업을 생성하여 출력하고, 스타일시트와 스크립트 파일도 자동으로 로드합니다.\n\n# 위젯\n위젯은 다양한 컨텐츠를 사이트의 어느 곳에서나 반복적으로 출력할 수 있는 방법을 제공합니다. 위젯은 출력할 컨텐츠에 대한 설정 정보를 사용자로부터 입력받고, 입력받은 설정 정보를 이용하여 컨텐츠를 생성합니다. 그 다음, 미리 정해진 템플릿을 통해 컨텐츠를 출력합니다. 사용자는 화면에 위젯을 추가하기 위해 위젯 생성 UI를 사용할 수 있습니다. 위젯 생성 UI에 추가할 위젯의 종류와 스킨을 선택하고, 위젯의 설정정보를 입력하면 XML 형식의 위젯코드가 생성됩니다. 이 위젯코드를 테마나 페이지의 원하는 위치에 삽입하면, XE는 최종적으로 위젯코드를 HTML로 변환하여 화면에 출력합니다.",contentLowercase:"# 컴포넌트\n컴포넌트는 플러그인을 통해 등록할 수 있는 xe의 구성요소를 통틀어 지칭하는 용어입니다. xe에는 여러가지 타입의 컴포넌트가 있으며 테마, 스킨, 에디터, 위젯 등이 대표적입니다. 각 타입의 컴포넌트들 간에 별다른 공통점은 없습니다. 오직 플러그인 개발자에 의해 등록됨으로써 xe에 추가될 수 있다는 점이 유일한 공통점입니다.\n\n플러그인 개발자들은 컴포넌트를 제작하여 xe에 등록할 수 있습니다. 만약 자신만의 컴포넌트를 만들어 사용하고 싶다면 먼저 플러그인을 하나 생성한 다음 플러그인에 컴포넌트를 추가해 넣습니다. 그 다음, 플러그인을 활성화하면 자신이 제작한 컴포넌트를 xe에서 사용할 수 있습니다.\n\n예를 들어 새로운 테마를 만들어서 자신의 사이트에 적용하고 싶다면, 먼저 빈 플러그인을 하나 생성합니다. 그 다음 플러그인 안에서 테마 컴포넌트를 만듭니다. 만약 테마와 함께 게시판 스킨과 위젯도 만들어서 사이트에 적용하고 싶다면, 이 두가지 컴포넌트도 같은 플러그인에 추가합니다. 플러그인을 활성화하면 플러그인에 포함된 컴포넌트들을 xe에서 모두 사용할 수 있습니다.\n\n>  xe1에서는 각 컴포넌트를 따로 xe에 추가해야 했습니다. xe3에서는 하나의 플러그인에 컴포넌트를 모두 포함하여 한번에 추가할 수 있습니다. 배포할 때에도 마찬가지로 각 컴포넌트를 따로 배포하지 않고, 플러그인 하나에 담아서 배포하면 됩니다.\n\n\n# 컴포넌트 인터페이스\n모든 컴포넌트는 xpressengine\\plugin\\componentinterface 인터페이스를 구현한 클래스 형태여야 합니다. 이 인터페이스는 컴포넌트를 xe에 등록할 때 필요한 규칙을 한정해주는 역할을 합니다.\n\n# 컴포넌트 타입\nxe는 기본적으로 10개 타입의 컴포넌트를 가지고 있습니다. 각 타입의 컴포넌트는 모두 \\xpressengine\\plugin\\componentinterface를 구현한 추상클래스를 정의하고 있습니다. 여러분이 어떤 타입의 컴포넌트를 제작하고 싶다면, 그 타입의 추상클래스를 상속받는 클래스를 작성하면 됩니다.\n\n만약, 테마 컴포넌트를 제작하려고 한다면 테마 타입의 추상클래스인 \\xpressengine\\theme\\abstracttheme를 상속받는 클래스를 작성하십시오.\n\n\\xpressengine\\plugin\\componentinterface\n  ├── 테마 - \\xpressengine\\theme\\abstracttheme\n  ├── 스킨 - \\xpressengine\\skin\\abstractskin\n  ├── 확장 필드 - \\xpressengine\\dynamicfield\\abstracttype\n  ├── 확장 필드 스킨 - \\xpressengine\\dynamicfield\\abstractskin\n  ├── ui오브젝트 - \\xpressengine\\uiobject\\abstractuiobject\n  └── 위젯 - \\xpressengine\\widget\\abstractwidget\n\n\n플러그인 개발자는 10개의 타입 이외에 플러그인에서 필요한 타입을 직접 생성하여 사용할 수도 있습니다. 플러그인에서 필요한 컴포넌트 타입을 정의해 놓으면, 다른 플러그인 개발자들이 정의한 타입의 컴포넌트를 제작하여 등록할 수 있습니다.\n\n11개의 xe의 기본 컴포넌트 타입에 대해 간략히 설명해 보겠습니다.\n\n# 테마\n테마는 웹사이트의 디자인과 웹페이지의 전체적인 레이아웃을 결정합니다.\n\n모든 웹사이트는 요청받은 url에 해당하는 메인 콘텐츠를 출력합니다. 예를 들어 특정 포스트를 출력하는 웹페이지라면, 포스트의 제목, 내용, 댓글목록이 메인 콘텐츠에 해당됩니다. xe는 출력할 메인 콘텐츠를 작성한 후 웹브라우저로 보내기 전에 지정된 테마에게 메인 콘텐츠를 전달합니다. 테마는 웹사이트에서 공통적으로 필요한 헤더, 푸터, 사이드바 영역과 전달받은 메인 콘텐츠 영역을 조립하여, 완성된 웹페이지를 만듭니다. 이때 테마는 웹페이지에 디자인을 결정짓는 마크업을 생성하고, 스타일시트를 로드합니다.\n\n테마 컴포넌트의 제작법은 이 문서를 참조하세요.\n\n# 스킨\n스킨의 목적은 출력되는 웹브라우저에서 출력되는 모든 html을 교체 가능하도록 만들기 위함입니다. 가령, 게시판 플러그인은 글 목록 보기, 글 보기 등의 페이지를 제공합니다. 만약 게시판 플러그인에 스킨을 적용하지 않았다면, 게시판 플러그인의 제작자가 처음 제작한 페이지 디자인을 바꿀 수 없습니다. 하지만 게시판에 스킨 시스템이 적용되어 있다면 사이트 관리자는 다른 개발자가 제작한 게시판 스킨을 선택하고, 사용할 수 있습니다. 자신이 만든 플러그인의 디자인을 사이트 관리자가 교체할 수 있도록 하려면 스킨 시스템을 적용하십시오.\n\n스킨 컴포넌트의 제작법은 이 문서를 참조하세요.\n\n# 다이나믹 필드\n다이나믹 필드는 사용자가 관리자에서 입력필드를 추가해 사용할 수 있도록 해줍니다.\n\n이는 코어의 패키지나 개별 플러그인 별로 지원여부를 결정하며 회원 패키지, board 플러그인에서 지원하고 있습니다. 다이나믹 필드를 이용해 회원 가입할 때 나이를 입력 받거나 게시물을 작성할 때 주소를 입력받을 수 있습니다.\n\n# 다이나믹 필드 스킨\n다이나믹 필드 스킨은 다이나믹 필드를 출력할 때 사용하는 스킨 입니다.\n\n모든 확장 필드에 스타일을 변경할 수 있도록 합니다.\n\n# ui오브젝트\nxe에서는 화면에 자주 출력되는 ui 요소들이 있습니다. 텍스트 인풋박스나 셀렉트 박스(select)와 같은 기본적인 폼 요소들이 있고, 테마 선택기나 메뉴 선택기, 또는 권한 설정 ui와 같이 xe에서만 사용되는 특별한 요소들도 있습니다. ui오브젝트는 이렇게 자주 사용되는 ui 요소를 개발자들이 쉽게 출력할 수 있는 방법을 제공합니다.\n\n직접 ui요소의 마크업을 작성하는 대신, uio() 함수를 사용하여 ui오브젝트를 출력하십시오. 선택된 ui오브젝트는 알아서 html 마크업을 생성하여 출력하고, 스타일시트와 스크립트 파일도 자동으로 로드합니다.\n\n# 위젯\n위젯은 다양한 컨텐츠를 사이트의 어느 곳에서나 반복적으로 출력할 수 있는 방법을 제공합니다. 위젯은 출력할 컨텐츠에 대한 설정 정보를 사용자로부터 입력받고, 입력받은 설정 정보를 이용하여 컨텐츠를 생성합니다. 그 다음, 미리 정해진 템플릿을 통해 컨텐츠를 출력합니다. 사용자는 화면에 위젯을 추가하기 위해 위젯 생성 ui를 사용할 수 있습니다. 위젯 생성 ui에 추가할 위젯의 종류와 스킨을 선택하고, 위젯의 설정정보를 입력하면 xml 형식의 위젯코드가 생성됩니다. 이 위젯코드를 테마나 페이지의 원하는 위치에 삽입하면, xe는 최종적으로 위젯코드를 html로 변환하여 화면에 출력합니다.",charsets:{cjk:!0}},{title:"플러그인 업로드",frontmatter:{},regularPath:"/03.%20%EB%B2%88%EB%93%A4%20%ED%94%8C%EB%9F%AC%EA%B7%B8%EC%9D%B8/plugin-upload.html",relativePath:"03. 번들 플러그인/plugin-upload.md",key:"v-93dc3e0a",path:"/03.%20%EB%B2%88%EB%93%A4%20%ED%94%8C%EB%9F%AC%EA%B7%B8%EC%9D%B8/plugin-upload.html",headers:[{level:2,title:"어떻게 사용하나요?",slug:"어떻게-사용하나요",charIndex:216},{level:3,title:"테마 / 익스텐션 공용 안내",slug:"테마-익스텐션-공용-안내",charIndex:229}],headersStr:"어떻게 사용하나요? 테마 / 익스텐션 공용 안내",content:"# 플러그인 업로드\n플러그인 업로드 기능은 테마와 익스텐션을 직접 FTP에 접근하지 않고 압축 파일만 업로드 하여 설치할 수 있게 지원하는 기능입니다. XE Store가 아닌 다른 창작자로부터 직접 전달 받거나 구매한 플러그인을 설치할 수 있습니다.\n\n>  PHP 옵션중 `allow_url_fopen` 옵션이 꺼져있는 경우 이 기능을 사용할 수 없습니다. 꼭 확인해 주세요. \n\n\n# 어떻게 사용하나요?\n# 테마 / 익스텐션 공용 안내\n 1. 먼저 업로드 할 플러그인의 압축명을 플러그인 이름과 동일하게 맞춥니다. 만약 플러그인이 설치되고 난 폴더명이 Alice 라면 압축 파일 명은 Alice.zip으로 압축해야 합니다.\n    \n    \n 2. 압축 파일 내의 폴더명 역시 Alice가 아닌 plugin-Alice-master와 같은 형태이거나 다른 형태라면 이를 바꿔줍니다.\n    \n    \n 3. 업로드 버튼을 눌러 업로드 후 설치합니다.\n    \n    \n 4. 끝! 플러그인을 활성화 하고 사용합니다 😃\n    \n    \n\n>  설치된 플러그인은 XE경로/privates 폴더에 설치되며, 이 폴더는 plugins 폴더와 동일하게 사용할 수 있습니다.",contentLowercase:"# 플러그인 업로드\n플러그인 업로드 기능은 테마와 익스텐션을 직접 ftp에 접근하지 않고 압축 파일만 업로드 하여 설치할 수 있게 지원하는 기능입니다. xe store가 아닌 다른 창작자로부터 직접 전달 받거나 구매한 플러그인을 설치할 수 있습니다.\n\n>  php 옵션중 `allow_url_fopen` 옵션이 꺼져있는 경우 이 기능을 사용할 수 없습니다. 꼭 확인해 주세요. \n\n\n# 어떻게 사용하나요?\n# 테마 / 익스텐션 공용 안내\n 1. 먼저 업로드 할 플러그인의 압축명을 플러그인 이름과 동일하게 맞춥니다. 만약 플러그인이 설치되고 난 폴더명이 alice 라면 압축 파일 명은 alice.zip으로 압축해야 합니다.\n    \n    \n 2. 압축 파일 내의 폴더명 역시 alice가 아닌 plugin-alice-master와 같은 형태이거나 다른 형태라면 이를 바꿔줍니다.\n    \n    \n 3. 업로드 버튼을 눌러 업로드 후 설치합니다.\n    \n    \n 4. 끝! 플러그인을 활성화 하고 사용합니다 😃\n    \n    \n\n>  설치된 플러그인은 xe경로/privates 폴더에 설치되며, 이 폴더는 plugins 폴더와 동일하게 사용할 수 있습니다.",charsets:{cjk:!0}},{title:"컨트롤러",frontmatter:{},regularPath:"/04.%20%EA%B0%9C%EB%B0%9C%EC%9E%90%20%EB%AC%B8%EC%84%9C/controller.html",relativePath:"04. 개발자 문서/controller.md",key:"v-1e0a44bd",path:"/04.%20%EA%B0%9C%EB%B0%9C%EC%9E%90%20%EB%AC%B8%EC%84%9C/controller.html",headers:[{level:2,title:"기본 컨트롤러",slug:"기본-컨트롤러",charIndex:223},{level:3,title:"컨트롤러 & 네임스페이스",slug:"컨트롤러-네임스페이스",charIndex:null},{level:3,title:"이름이 지정된 컨트롤러 라우트",slug:"이름이-지정된-컨트롤러-라우트",charIndex:1019},{level:3,title:"컨트롤러 액션의 URL 구하기",slug:"컨트롤러-액션의-url-구하기",charIndex:1150},{level:2,title:"컨트롤러 미들웨어",slug:"컨트롤러-미들웨어",charIndex:1569},{level:2,title:"묵시적 컨트롤러",slug:"묵시적-컨트롤러",charIndex:2101},{level:3,title:"라우트에 이름 지정하기",slug:"라우트에-이름-지정하기",charIndex:2884},{level:2,title:"의존성 주입 & 컨트롤러",slug:"의존성-주입-컨트롤러",charIndex:null},{level:3,title:"생성자 주입",slug:"생성자-주입",charIndex:3069},{level:3,title:"메소드 인젝션-주입",slug:"메소드-인젝션-주입",charIndex:3684}],headersStr:"기본 컨트롤러 컨트롤러 & 네임스페이스 이름이 지정된 컨트롤러 라우트 컨트롤러 액션의 URL 구하기 컨트롤러 미들웨어 묵시적 컨트롤러 라우트에 이름 지정하기 의존성 주입 & 컨트롤러 생성자 주입 메소드 인젝션-주입",content:"# 컨트롤러\n플러그인은 플러그인 클래스의 boot 메소드를 통해 라우트를 등록할 수 있습니다. 라우트를 등록할 때, 특정 URL의 요청을 처리할 로직을 클로저로 작성하는 대신, 별도의 컨트롤러 클래스에 작성할 수 있습니다. 성격이 비슷한 요청을 처리하기 위한 컨트롤러 클래스를 정의하십시오.\n\n컨트롤러는 App\\Http\\Controllers\\Controller 클래스를 상속받아 작성하십시오.\n\n# 기본 컨트롤러\n다음은 기본적인 컨트롤러 클래스의 예제입니다:\n\n<?php namespace App\\Http\\Controllers;\n\nuse App\\Http\\Controllers\\Controller;\n\nclass UserController extends Controller {\n\n    /**\n     * Show the profile for the given user.\n     *\n     * @param  int  $id\n     * @return Response\n     */\n    public function showProfile($id)\n    {\n        return view('user.profile', ['user' => User::findOrFail($id)]);\n    }\n\n}\n\n\n다음과 같이 컨트롤러의 액션에 라우트를 지정할 수 있습니다:\n\nRoute::get('user/{id}', 'App\\Http\\UserController@showProfile');\n\n\n# 컨트롤러 & 네임스페이스\n컨트롤러의 네임스페이스를 지정할 때에는 반드시 전체 네임스페이스를 다 써주어야 합니다.\n\nRoute::get('foo', 'Photos\\AdminController@method');\n\n\nnamespace를 사용하면 반복되는 namespace를 생략할 수 있습니다.\n\nRoute::group(['prefix' => 'photos', 'namespace' => 'Photos'], function()\n{\n    Route::get('admin', 'AdminController@method');\n});\n\n\n# 이름이 지정된 컨트롤러 라우트\n클로저 라우트와 같이 컨트롤러 라우트에 이름을 지정할 수 있습니다.\n\nRoute::get('foo', ['uses' => 'FooController@method', 'as' => 'name']);\n\n\n# 컨트롤러 액션의 URL 구하기\n컨트롤러 액션에 대한 URL을 생성하기 위해서 action 헬퍼함수를 사용합니다:\n\n$url = action('App\\Http\\Controllers\\FooController@method');\n\n\n단순히 컨트롤러의 전체 네임스페이스의 대신 클래스명만으로 URL을 생성하고 싶은 경우에는 root 컨트롤러 네임스페이스를 URL 제너레이터에 등록하면 됩니다:\n\nURL::setRootControllerNamespace('App\\Http\\Controllers');\n\n$url = action('FooController@method');\n\n\n실행중인 컨트롤러 액션의 이름을 찾고자 한다면 currentRouteAction 메소드를 사용하면 됩니다:\n\n$action = Route::currentRouteAction();\n\n\n# 컨트롤러 미들웨어\n미들웨어는 다음과 같이 컨트롤러 라우트에 지정합니다.\n\nRoute::get('profile', [\n    'middleware' => 'auth',\n    'uses' => 'UserController@showProfile'\n]);\n\n\n덧붙여 미들웨어를 컨트롤러의 생성자에서 지정할수도 있습니다.\n\nclass UserController extends Controller {\n\n    /**\n     * Instantiate a new UserController instance.\n     */\n    public function __construct()\n    {\n        $this->middleware('auth');\n\n        $this->middleware('log', ['only' => ['fooAction', 'barAction']]);\n\n        $this->middleware('subscribed', ['except' => ['fooAction', 'barAction']]);\n    }\n}\n\n\n# 묵시적 컨트롤러\nXE에서는 한번의 라우팅 등록으로 컨트롤러를 통해 모든 액션들을 처리할 수 있는 손쉬운 방법을 제공합니다. 먼저 Route::controller 메소드를 사용하여 경로를 지정합니다:\n\nRoute::controller('users', 'UserController');\n\n\ncontroller 메소드는 두 개의 인자를 넘겨 받도록 되어 있습니다. 첫 번째 인자는 컨트롤러로 제어할 URI이고, 두 번째는 컨트롤러의 클래스명을 의미합니다. 이어서 해당하는 HTTP 메소드 이름을 접두어로 (get, post..) 사용하는 형태로 컨트롤러의 메소드를 추가합니다:\n\nclass UserController extends Controller {\n\n    public function getIndex()\n    {\n        //\n    }\n\n    public function postProfile()\n    {\n        //\n    }\n\n    public function anyLogin()\n    {\n        //\n    }\n\n}\n\n\n위의 경우에 컨트롤러의 index 메소드는 users URI에 대한 루트 주소에 대한 결과를 반환합니다.\n\n만약 컨트롤러의 메소드가 여러개의 단어로 구성되어 진 형태라면 \"-\"을 통해서 접속할 수 있는 URI를 제공하게 됩니다. 예를 들어, UserController에 다음과 같은 액션이 정의되었다면 URI는 users/admin-profile과 같이 구성됩니다:\n\npublic function getAdminProfile() {}\n\n\n# 라우트에 이름 지정하기\n컨트롤러 라우트에 어떤 “이름”을 지정하고자 한다면 controller 메소드의 세 번째 인자를 통해서 지정할 수 있습니다:\n\nRoute::controller('users', 'UserController', [    'anyLogin' => 'user.login',]);\n\n\n# 의존성 주입 & 컨트롤러\n# 생성자 주입\nXE의 서비스 컨테이너는 모든 컨트롤러의 의존성을 해결하기 위해서 사용됩니다. 그 결과 컨트롤러가 필요로 하는 의존 객체들에 대해서 생성자에서 타입힌트로 지정할 수 있게 됩니다:\n\n<?php namespace App\\Http\\Controllers;\n\nuse Illuminate\\Routing\\Controller;\nuse App\\Repositories\\UserRepository;\n\nclass UserController extends Controller {\n\n    /**\n     * The user repository instance.\n     */\n    protected $users;\n\n    /**\n     * Create a new controller instance.\n     *\n     * @param  UserRepository  $users\n     * @return void\n     */\n    public function __construct(UserRepository $users)\n    {\n        $this->users = $users;\n    }\n\n}\n\n\n\n서비스 컨테이너가 의존성을 해결을 할 수 있다면 타입 힌트에 지정할 수는 있습니다.\n\n# 메소드 인젝션-주입\n생성자 주입과 더불어 컨트롤러의 메소드에서도 타입힌트를 통한 의존성 주입을 할 수 있습니다. 예를 들어, 메소드에서 Request 인스턴스를 타입힌트를 통해서 주입할 수 있습니다:\n\n<?php namespace App\\Http\\Controllers;\n\nuse Illuminate\\Http\\Request;\nuse Illuminate\\Routing\\Controller;\n\nclass UserController extends Controller {\n\n    /**\n     * Store a new user.\n     *\n     * @param  Request  $request\n     * @return Response\n     */\n    public function store(Request $request)\n    {\n        $name = $request->input('name');\n\n        //\n    }\n\n}\n\n\n컨트롤러 메소드가 라우트 인자로부터 입력값을 받아야 한다면 간단하게 의존성 지정 뒤에 인자를 지정하면 됩니다:\n\n<?php namespace App\\Http\\Controllers;\n​\nuse Illuminate\\Http\\Request;\nuse Illuminate\\Routing\\Controller;\n​\nclass UserController extends Controller {\n​\n    /**\n     * Update the specified user.\n     *\n     * @param  Request  $request\n     * @param  int  $id\n     * @return Response\n     */\n    public function update(Request $request, $id)\n    {\n        //\n    }\n​\n}",contentLowercase:"# 컨트롤러\n플러그인은 플러그인 클래스의 boot 메소드를 통해 라우트를 등록할 수 있습니다. 라우트를 등록할 때, 특정 url의 요청을 처리할 로직을 클로저로 작성하는 대신, 별도의 컨트롤러 클래스에 작성할 수 있습니다. 성격이 비슷한 요청을 처리하기 위한 컨트롤러 클래스를 정의하십시오.\n\n컨트롤러는 app\\http\\controllers\\controller 클래스를 상속받아 작성하십시오.\n\n# 기본 컨트롤러\n다음은 기본적인 컨트롤러 클래스의 예제입니다:\n\n<?php namespace app\\http\\controllers;\n\nuse app\\http\\controllers\\controller;\n\nclass usercontroller extends controller {\n\n    /**\n     * show the profile for the given user.\n     *\n     * @param  int  $id\n     * @return response\n     */\n    public function showprofile($id)\n    {\n        return view('user.profile', ['user' => user::findorfail($id)]);\n    }\n\n}\n\n\n다음과 같이 컨트롤러의 액션에 라우트를 지정할 수 있습니다:\n\nroute::get('user/{id}', 'app\\http\\usercontroller@showprofile');\n\n\n# 컨트롤러 & 네임스페이스\n컨트롤러의 네임스페이스를 지정할 때에는 반드시 전체 네임스페이스를 다 써주어야 합니다.\n\nroute::get('foo', 'photos\\admincontroller@method');\n\n\nnamespace를 사용하면 반복되는 namespace를 생략할 수 있습니다.\n\nroute::group(['prefix' => 'photos', 'namespace' => 'photos'], function()\n{\n    route::get('admin', 'admincontroller@method');\n});\n\n\n# 이름이 지정된 컨트롤러 라우트\n클로저 라우트와 같이 컨트롤러 라우트에 이름을 지정할 수 있습니다.\n\nroute::get('foo', ['uses' => 'foocontroller@method', 'as' => 'name']);\n\n\n# 컨트롤러 액션의 url 구하기\n컨트롤러 액션에 대한 url을 생성하기 위해서 action 헬퍼함수를 사용합니다:\n\n$url = action('app\\http\\controllers\\foocontroller@method');\n\n\n단순히 컨트롤러의 전체 네임스페이스의 대신 클래스명만으로 url을 생성하고 싶은 경우에는 root 컨트롤러 네임스페이스를 url 제너레이터에 등록하면 됩니다:\n\nurl::setrootcontrollernamespace('app\\http\\controllers');\n\n$url = action('foocontroller@method');\n\n\n실행중인 컨트롤러 액션의 이름을 찾고자 한다면 currentrouteaction 메소드를 사용하면 됩니다:\n\n$action = route::currentrouteaction();\n\n\n# 컨트롤러 미들웨어\n미들웨어는 다음과 같이 컨트롤러 라우트에 지정합니다.\n\nroute::get('profile', [\n    'middleware' => 'auth',\n    'uses' => 'usercontroller@showprofile'\n]);\n\n\n덧붙여 미들웨어를 컨트롤러의 생성자에서 지정할수도 있습니다.\n\nclass usercontroller extends controller {\n\n    /**\n     * instantiate a new usercontroller instance.\n     */\n    public function __construct()\n    {\n        $this->middleware('auth');\n\n        $this->middleware('log', ['only' => ['fooaction', 'baraction']]);\n\n        $this->middleware('subscribed', ['except' => ['fooaction', 'baraction']]);\n    }\n}\n\n\n# 묵시적 컨트롤러\nxe에서는 한번의 라우팅 등록으로 컨트롤러를 통해 모든 액션들을 처리할 수 있는 손쉬운 방법을 제공합니다. 먼저 route::controller 메소드를 사용하여 경로를 지정합니다:\n\nroute::controller('users', 'usercontroller');\n\n\ncontroller 메소드는 두 개의 인자를 넘겨 받도록 되어 있습니다. 첫 번째 인자는 컨트롤러로 제어할 uri이고, 두 번째는 컨트롤러의 클래스명을 의미합니다. 이어서 해당하는 http 메소드 이름을 접두어로 (get, post..) 사용하는 형태로 컨트롤러의 메소드를 추가합니다:\n\nclass usercontroller extends controller {\n\n    public function getindex()\n    {\n        //\n    }\n\n    public function postprofile()\n    {\n        //\n    }\n\n    public function anylogin()\n    {\n        //\n    }\n\n}\n\n\n위의 경우에 컨트롤러의 index 메소드는 users uri에 대한 루트 주소에 대한 결과를 반환합니다.\n\n만약 컨트롤러의 메소드가 여러개의 단어로 구성되어 진 형태라면 \"-\"을 통해서 접속할 수 있는 uri를 제공하게 됩니다. 예를 들어, usercontroller에 다음과 같은 액션이 정의되었다면 uri는 users/admin-profile과 같이 구성됩니다:\n\npublic function getadminprofile() {}\n\n\n# 라우트에 이름 지정하기\n컨트롤러 라우트에 어떤 “이름”을 지정하고자 한다면 controller 메소드의 세 번째 인자를 통해서 지정할 수 있습니다:\n\nroute::controller('users', 'usercontroller', [    'anylogin' => 'user.login',]);\n\n\n# 의존성 주입 & 컨트롤러\n# 생성자 주입\nxe의 서비스 컨테이너는 모든 컨트롤러의 의존성을 해결하기 위해서 사용됩니다. 그 결과 컨트롤러가 필요로 하는 의존 객체들에 대해서 생성자에서 타입힌트로 지정할 수 있게 됩니다:\n\n<?php namespace app\\http\\controllers;\n\nuse illuminate\\routing\\controller;\nuse app\\repositories\\userrepository;\n\nclass usercontroller extends controller {\n\n    /**\n     * the user repository instance.\n     */\n    protected $users;\n\n    /**\n     * create a new controller instance.\n     *\n     * @param  userrepository  $users\n     * @return void\n     */\n    public function __construct(userrepository $users)\n    {\n        $this->users = $users;\n    }\n\n}\n\n\n\n서비스 컨테이너가 의존성을 해결을 할 수 있다면 타입 힌트에 지정할 수는 있습니다.\n\n# 메소드 인젝션-주입\n생성자 주입과 더불어 컨트롤러의 메소드에서도 타입힌트를 통한 의존성 주입을 할 수 있습니다. 예를 들어, 메소드에서 request 인스턴스를 타입힌트를 통해서 주입할 수 있습니다:\n\n<?php namespace app\\http\\controllers;\n\nuse illuminate\\http\\request;\nuse illuminate\\routing\\controller;\n\nclass usercontroller extends controller {\n\n    /**\n     * store a new user.\n     *\n     * @param  request  $request\n     * @return response\n     */\n    public function store(request $request)\n    {\n        $name = $request->input('name');\n\n        //\n    }\n\n}\n\n\n컨트롤러 메소드가 라우트 인자로부터 입력값을 받아야 한다면 간단하게 의존성 지정 뒤에 인자를 지정하면 됩니다:\n\n<?php namespace app\\http\\controllers;\n​\nuse illuminate\\http\\request;\nuse illuminate\\routing\\controller;\n​\nclass usercontroller extends controller {\n​\n    /**\n     * update the specified user.\n     *\n     * @param  request  $request\n     * @param  int  $id\n     * @return response\n     */\n    public function update(request $request, $id)\n    {\n        //\n    }\n​\n}",charsets:{cjk:!0}},{title:"주요변수 및 함수",frontmatter:{},regularPath:"/04.%20%EA%B0%9C%EB%B0%9C%EC%9E%90%20%EB%AC%B8%EC%84%9C/function.html",relativePath:"04. 개발자 문서/function.md",key:"v-083339fd",path:"/04.%20%EA%B0%9C%EB%B0%9C%EC%9E%90%20%EB%AC%B8%EC%84%9C/function.html",headers:[{level:2,title:"개요",slug:"개요",charIndex:14},{level:2,title:"주요변수",slug:"주요변수",charIndex:2},{level:2,title:"주요함수",slug:"주요함수",charIndex:185}],headersStr:"개요 주요변수 주요함수",content:"# 주요변수 및 함수\n# 개요\nXE는 플러그인들의 개발에 필요한 주요변수와 함수들을 포함하고 있습니다. 플러그인을 개발하면서 필요에 따라서 직접 추가할 수도 있지만 이미 포함된 XE 전용 변수와 함수들을 사용하면 더 쉽게 접근할 수 있습니다. 다음은 XE내에서 사용할 수 있는 가장 기본적인 변수와 함수들입니다.\n\n# 주요변수\n# 주요함수",contentLowercase:"# 주요변수 및 함수\n# 개요\nxe는 플러그인들의 개발에 필요한 주요변수와 함수들을 포함하고 있습니다. 플러그인을 개발하면서 필요에 따라서 직접 추가할 수도 있지만 이미 포함된 xe 전용 변수와 함수들을 사용하면 더 쉽게 접근할 수 있습니다. 다음은 xe내에서 사용할 수 있는 가장 기본적인 변수와 함수들입니다.\n\n# 주요변수\n# 주요함수",charsets:{cjk:!0}},{title:"창작자 문서",frontmatter:{},regularPath:"/04.%20%EA%B0%9C%EB%B0%9C%EC%9E%90%20%EB%AC%B8%EC%84%9C/introduce.html",relativePath:"04. 개발자 문서/introduce.md",key:"v-70ed3056",path:"/04.%20%EA%B0%9C%EB%B0%9C%EC%9E%90%20%EB%AC%B8%EC%84%9C/introduce.html",headers:[{level:2,title:"개요",slug:"개요",charIndex:11},{level:2,title:"주요 내용 링크",slug:"주요-내용-링크",charIndex:129},{level:2,title:"멋진 작품을 만들어보세요!",slug:"멋진-작품을-만들어보세요",charIndex:301},{level:2,title:"도움이 필요하신가요?",slug:"도움이-필요하신가요",charIndex:468}],headersStr:"개요 주요 내용 링크 멋진 작품을 만들어보세요! 도움이 필요하신가요?",content:"# 창작자 문서\n# 개요\n이 문서부터는 창작자를 위한 문서가 준비되어 있습니다. 커뮤니티를위한 멋진 테마를 만들거나 API를 사용하여 익스텐션을 만드는 등의 방법을 소개하고, 제작하는 방법의 기초 방법들이 나열되어 있습니다.\n\n# 주요 내용 링크\n창작에 필요한 주요 내용들을 준비해보았습니다. 주로 XE 플러그인 제작에 필요한 내용들로 구성되어 있습니다.\n\n * 디렉토리 구조\n * 주요 변수\n * 기본 플러그인 생성\n * 기본 테마 생성\n * 기본 스킨 생성\n * 기본 위젯 만들기\n * 기본 모듈 만들기\n * 컴포넌트 제작 개요\n\n# 멋진 작품을 만들어보세요!\n우리는 웹마스터와, 창작자, 기술기업을 사랑하며 멋진 작풍믈 만들 수 있도록 실용적인 업데이트와 문서를 계속 추가하고 업데이트할 계획입니다.\n\n커뮤니티를 만들거나 회사 사이트를 만들거나, 무엇을 하더라도 XE와 함께하세요! 멋진 플러그인의 시작은 당신으로부터! ❤️\n\n# 도움이 필요하신가요?\n설치부터 운영까지 생기는 문제들을 정리한 헬프센터에서 미리 준비된 가이드를 통해 문제를 해결하고, 찾아낼 수 있습니다. 그리고 문제를 해결할 수 없거나 더 깊은 기술지원을 받고 싶다면 QnA 게시판과 기술지원 서비스를 신청할 수 있습니다.\n\n * XE3 공식 커뮤니티에서의 도움은 QnA [https://www.xpressengine.io/qna] 에서 받을 수 있습니다.\n * 기술적인 부분의 도움을 받고 싶다면 기술지원 서비스 [https://www.xpressengine.io/tech_service]를 통해 더 깊이 있는 지원을 받을 수 있습니다.",contentLowercase:"# 창작자 문서\n# 개요\n이 문서부터는 창작자를 위한 문서가 준비되어 있습니다. 커뮤니티를위한 멋진 테마를 만들거나 api를 사용하여 익스텐션을 만드는 등의 방법을 소개하고, 제작하는 방법의 기초 방법들이 나열되어 있습니다.\n\n# 주요 내용 링크\n창작에 필요한 주요 내용들을 준비해보았습니다. 주로 xe 플러그인 제작에 필요한 내용들로 구성되어 있습니다.\n\n * 디렉토리 구조\n * 주요 변수\n * 기본 플러그인 생성\n * 기본 테마 생성\n * 기본 스킨 생성\n * 기본 위젯 만들기\n * 기본 모듈 만들기\n * 컴포넌트 제작 개요\n\n# 멋진 작품을 만들어보세요!\n우리는 웹마스터와, 창작자, 기술기업을 사랑하며 멋진 작풍믈 만들 수 있도록 실용적인 업데이트와 문서를 계속 추가하고 업데이트할 계획입니다.\n\n커뮤니티를 만들거나 회사 사이트를 만들거나, 무엇을 하더라도 xe와 함께하세요! 멋진 플러그인의 시작은 당신으로부터! ❤️\n\n# 도움이 필요하신가요?\n설치부터 운영까지 생기는 문제들을 정리한 헬프센터에서 미리 준비된 가이드를 통해 문제를 해결하고, 찾아낼 수 있습니다. 그리고 문제를 해결할 수 없거나 더 깊은 기술지원을 받고 싶다면 qna 게시판과 기술지원 서비스를 신청할 수 있습니다.\n\n * xe3 공식 커뮤니티에서의 도움은 qna [https://www.xpressengine.io/qna] 에서 받을 수 있습니다.\n * 기술적인 부분의 도움을 받고 싶다면 기술지원 서비스 [https://www.xpressengine.io/tech_service]를 통해 더 깊이 있는 지원을 받을 수 있습니다.",charsets:{cjk:!0}},{title:"라이프 사이클",frontmatter:{},regularPath:"/04.%20%EA%B0%9C%EB%B0%9C%EC%9E%90%20%EB%AC%B8%EC%84%9C/life-cycle.html",relativePath:"04. 개발자 문서/life-cycle.md",key:"v-03b9b5c6",path:"/04.%20%EA%B0%9C%EB%B0%9C%EC%9E%90%20%EB%AC%B8%EC%84%9C/life-cycle.html",headers:[{level:2,title:"index.php",slug:"index-php",charIndex:537},{level:2,title:"Http 커널",slug:"http-커널",charIndex:883},{level:2,title:"Http 미들웨어",slug:"http-미들웨어",charIndex:1428},{level:2,title:"라우터",slug:"라우터",charIndex:1846},{level:2,title:"컨트롤러",slug:"컨트롤러",charIndex:1521},{level:2,title:"프레젠터",slug:"프레젠터",charIndex:2224}],headersStr:"index.php Http 커널 Http 미들웨어 라우터 컨트롤러 프레젠터",content:"# 라이프 사이클\n여러분이 XE를 사용하거나 XE의 플러그인을 개발하려고 한다면, XE 사용법, 플러그인 제작법, 그리고 XE에서 제공하는 여러가지 서비스의 사용법을 숙지하는 것 만으로도 충분히 많은 것을 할 수 있습니다. 하지만 여러분이 좀 더 고도의 기능을 필요로 하는 플러그인을 만들거나 XE를 제대로 사용하고 싶다면, XE가 어떤 방식과 구조로 요청을 처리하는지에 대한 전체적인 흐름을 알고 있어야 합니다. 전체적인 흐름을 알고 있지 않다면 결국 한계에 도달할 것이고, 전체적인 흐름을 알기 위해 노력하는 시점이 올 것입니다.\n\nXE의 라이프 사이클은 크게 두 가지 경우로 나눌 수 있습니다. 사용자들의 웹브라우저로 부터 http 요청을 받았을 때, 이를 처리하고 응답하는 일반적인 경우와, 사이트 관리자가 ssh와 같은 콘솔에 접근하여 php 명령을 실행시킬 경우가 있습니다. 이 문서에서는 더 일반적으로 생각할 수 있는 http 요청을 처리하는 경우에 대하여 살펴보겠습니다.\n\n아래 다이어그램은 XE의 요청 처리 흐름을 개략적으로 보여줍니다.\n\n# index.php\n사용자의 웹브라우저로부터 http 전송 요청이 들어올 경우, XE는 항상 index.php파일을 실행시킵니다. index.php 파일이 그리 많은 코드를 가지고 있는 것은 아닙니다.\n\n가장 먼저 index.php는 composer를 통해 생성된 autoload 파일을 로드합니다. autoload 파일을 로드함으로써 XE는 php 파일을 include하지 않고 자동으로 로드할 수 있게됩니다.\n\n그 다음으로 서비스 컨테이너를 생성합니다. 서비스 컨테이너는 생성되자마자 주요 서비스인 라우팅(routing) 서비스와 이벤트(events) 서비스를 등록합니다.\n\n세번째로는 http 요청을 처리하기 위한 Http 커널을 생성합니다. 그리고 현재 http 요청에 대한 정보를 가지는 Request 인스턴스를 생성합니다.\n\n마지막으로 Request 인스턴스를 커널에게 전달하여 http 요청의 본격적인 처리를 시작합니다.\n\n# Http 커널\nHttp 커널의 주목적은 단순하게 Request를 처리하고, 브라우저로 돌려줄 응답(Http Response)를 만드는 것입니다.\n\nHttp 커널은 Illuminate\\Foundation\\Http\\Kernel를 상속받고 있으며, 생성된 다음에는 Request를 처리할 준비, 즉 부팅(bootstrapping)을 합니다.\n\nHttp 커널은 부팅 과정에서 에러 처리, 로그 설정, 어플리케이션의 실행 환경의 검사 등 실제로 요청이 처리되기 전에 수행해야 되는 작업들을 합니다.\n\n또, Http 커널은 부팅 과정에서 데이터베이스, 문서, 회원과 같은 XE에서 제공하는 대부분의 서비스를 앞서 생성된 서비스 컨테이너에 등록합니다.\n\n>  NOTE: XE에서 활성화되어 있는 플러그인들이 부팅되는 시점은 서비스들이 등록된 바로 다음입니다.\n\n\n# Http 미들웨어\nHttp 커널은 Request 처리할 준비가 완료되면, 커널에 등록된 미들웨어들에게 Request를 전달합니다. Request는 미들웨어들을 거친후 컨트롤러에게 전달됩니다.\n\nHttp 미들웨어는 글로벌 미들웨어(global middleware)와 라우트 미들웨어(route middleware)로 구분할 수 있습니다. 글로벌 미들웨어는 모든 요청에 대해 항상 작동하는 미들웨어이며, 라우트 미들웨어는 특정 라우트에 등록된 미들웨어입니다. Request에 해당하는 라우트가 선택되면 그 라우트에 등록된 미들웨어들이 작동합니다.\n\n미들웨어에 대한 자세한 정보는 라라벨 문서 [http://xpressengine.github.io/laravel-korean-docs/docs/5.0/middleware/]를 참고하시기 바랍니다.\n\n# 라우터\n미들웨어를 통과한 Request는 라우터에게 전달됩니다. 라우터는 전달받은 Request를 전담하여 처리할 컨트롤러가 누군지 찾고, 찾은 컨트롤러를 호출합니다.\n\n# 컨트롤러\n각각의 Request는 모두 XE가 해주길 바라는 정확한 목적을 가지고 있습니다. 예를 들어, 어떤 요청은 게시판 글 출력이 목적일 수도 있고, 또 어떤 요청은 현재 사용자를 로그아웃 처리해 달라는 게 목적일 수도 있습니다. 컨트롤러는 Request의 주목적을 처리하는 역할을 합니다. XE에는 매우 많은 컨트롤러가 이미 포함돼 있고, 플러그인을 통해서도 많이 추가될 수 있습니다.\n\n컨트롤러는 Request를 처리하기 위해 여러가지 서비스나 모델 그리고 헬퍼함수들을 가져다 사용합니다.\n\n# 프레젠터\n컨트롤러가 Request를 처리하고 나면 Response를 생성하기 위해 프리젠터를 호출합니다. 이 때 만약 화면 출력이 필요하다면 화면 출력에 필요한 데이터와 출력할 때 사용할 스킨정보를 프리젠터에게 전달합니다.\n\n프리젠터는 컨트롤러가 전달한 데이터와 스킨정보, 그리고 지정된 테마 정보등을 조합해서 완성된 html 문서를 조립합니다. 이렇게 완성된 html 문서는 Response 인스턴스가 되어 다시 미들웨어를 거친후 브라우저로 전송됩니다.\n\n프리젠터는 html 타입의 Response 뿐만 아니라, ajax 요청에 대한 응답과 같이 json 방식의 Response도 처리합니다.",contentLowercase:"# 라이프 사이클\n여러분이 xe를 사용하거나 xe의 플러그인을 개발하려고 한다면, xe 사용법, 플러그인 제작법, 그리고 xe에서 제공하는 여러가지 서비스의 사용법을 숙지하는 것 만으로도 충분히 많은 것을 할 수 있습니다. 하지만 여러분이 좀 더 고도의 기능을 필요로 하는 플러그인을 만들거나 xe를 제대로 사용하고 싶다면, xe가 어떤 방식과 구조로 요청을 처리하는지에 대한 전체적인 흐름을 알고 있어야 합니다. 전체적인 흐름을 알고 있지 않다면 결국 한계에 도달할 것이고, 전체적인 흐름을 알기 위해 노력하는 시점이 올 것입니다.\n\nxe의 라이프 사이클은 크게 두 가지 경우로 나눌 수 있습니다. 사용자들의 웹브라우저로 부터 http 요청을 받았을 때, 이를 처리하고 응답하는 일반적인 경우와, 사이트 관리자가 ssh와 같은 콘솔에 접근하여 php 명령을 실행시킬 경우가 있습니다. 이 문서에서는 더 일반적으로 생각할 수 있는 http 요청을 처리하는 경우에 대하여 살펴보겠습니다.\n\n아래 다이어그램은 xe의 요청 처리 흐름을 개략적으로 보여줍니다.\n\n# index.php\n사용자의 웹브라우저로부터 http 전송 요청이 들어올 경우, xe는 항상 index.php파일을 실행시킵니다. index.php 파일이 그리 많은 코드를 가지고 있는 것은 아닙니다.\n\n가장 먼저 index.php는 composer를 통해 생성된 autoload 파일을 로드합니다. autoload 파일을 로드함으로써 xe는 php 파일을 include하지 않고 자동으로 로드할 수 있게됩니다.\n\n그 다음으로 서비스 컨테이너를 생성합니다. 서비스 컨테이너는 생성되자마자 주요 서비스인 라우팅(routing) 서비스와 이벤트(events) 서비스를 등록합니다.\n\n세번째로는 http 요청을 처리하기 위한 http 커널을 생성합니다. 그리고 현재 http 요청에 대한 정보를 가지는 request 인스턴스를 생성합니다.\n\n마지막으로 request 인스턴스를 커널에게 전달하여 http 요청의 본격적인 처리를 시작합니다.\n\n# http 커널\nhttp 커널의 주목적은 단순하게 request를 처리하고, 브라우저로 돌려줄 응답(http response)를 만드는 것입니다.\n\nhttp 커널은 illuminate\\foundation\\http\\kernel를 상속받고 있으며, 생성된 다음에는 request를 처리할 준비, 즉 부팅(bootstrapping)을 합니다.\n\nhttp 커널은 부팅 과정에서 에러 처리, 로그 설정, 어플리케이션의 실행 환경의 검사 등 실제로 요청이 처리되기 전에 수행해야 되는 작업들을 합니다.\n\n또, http 커널은 부팅 과정에서 데이터베이스, 문서, 회원과 같은 xe에서 제공하는 대부분의 서비스를 앞서 생성된 서비스 컨테이너에 등록합니다.\n\n>  note: xe에서 활성화되어 있는 플러그인들이 부팅되는 시점은 서비스들이 등록된 바로 다음입니다.\n\n\n# http 미들웨어\nhttp 커널은 request 처리할 준비가 완료되면, 커널에 등록된 미들웨어들에게 request를 전달합니다. request는 미들웨어들을 거친후 컨트롤러에게 전달됩니다.\n\nhttp 미들웨어는 글로벌 미들웨어(global middleware)와 라우트 미들웨어(route middleware)로 구분할 수 있습니다. 글로벌 미들웨어는 모든 요청에 대해 항상 작동하는 미들웨어이며, 라우트 미들웨어는 특정 라우트에 등록된 미들웨어입니다. request에 해당하는 라우트가 선택되면 그 라우트에 등록된 미들웨어들이 작동합니다.\n\n미들웨어에 대한 자세한 정보는 라라벨 문서 [http://xpressengine.github.io/laravel-korean-docs/docs/5.0/middleware/]를 참고하시기 바랍니다.\n\n# 라우터\n미들웨어를 통과한 request는 라우터에게 전달됩니다. 라우터는 전달받은 request를 전담하여 처리할 컨트롤러가 누군지 찾고, 찾은 컨트롤러를 호출합니다.\n\n# 컨트롤러\n각각의 request는 모두 xe가 해주길 바라는 정확한 목적을 가지고 있습니다. 예를 들어, 어떤 요청은 게시판 글 출력이 목적일 수도 있고, 또 어떤 요청은 현재 사용자를 로그아웃 처리해 달라는 게 목적일 수도 있습니다. 컨트롤러는 request의 주목적을 처리하는 역할을 합니다. xe에는 매우 많은 컨트롤러가 이미 포함돼 있고, 플러그인을 통해서도 많이 추가될 수 있습니다.\n\n컨트롤러는 request를 처리하기 위해 여러가지 서비스나 모델 그리고 헬퍼함수들을 가져다 사용합니다.\n\n# 프레젠터\n컨트롤러가 request를 처리하고 나면 response를 생성하기 위해 프리젠터를 호출합니다. 이 때 만약 화면 출력이 필요하다면 화면 출력에 필요한 데이터와 출력할 때 사용할 스킨정보를 프리젠터에게 전달합니다.\n\n프리젠터는 컨트롤러가 전달한 데이터와 스킨정보, 그리고 지정된 테마 정보등을 조합해서 완성된 html 문서를 조립합니다. 이렇게 완성된 html 문서는 response 인스턴스가 되어 다시 미들웨어를 거친후 브라우저로 전송됩니다.\n\n프리젠터는 html 타입의 response 뿐만 아니라, ajax 요청에 대한 응답과 같이 json 방식의 response도 처리합니다.",charsets:{cjk:!0}},{title:"플러그인",frontmatter:{},regularPath:"/04.%20%EA%B0%9C%EB%B0%9C%EC%9E%90%20%EB%AC%B8%EC%84%9C/plugin.html",relativePath:"04. 개발자 문서/plugin.md",key:"v-364f4d5d",path:"/04.%20%EA%B0%9C%EB%B0%9C%EC%9E%90%20%EB%AC%B8%EC%84%9C/plugin.html",headers:[{level:2,title:"번들 플러그인",slug:"번들-플러그인",charIndex:348},{level:2,title:"플러그인 상태",slug:"플러그인-상태",charIndex:688},{level:2,title:"개발 모드 플러그인",slug:"개발-모드-플러그인",charIndex:896}],headersStr:"번들 플러그인 플러그인 상태 개발 모드 플러그인",content:"# 플러그인\n플러그인은 여러분이 XE를 확장할 수 있는 유일한 방법입니다. XE에 새로운 기능을 추가하거나 기본 기능을 변경하려고 할 때, 또는 테마나 스킨과 같은 컴포넌트를 XE에 추가하고 싶을 때, 플러그인을 사용하십시오.\n\nXE는 오픈소스프로그램으로 자유롭게 코어 소스코드를 수정하여 사용할수 있지만, 업데이트 되는 소스코드를 계속 적용하려면 소스코드의 수정을 피해야 합니다. 대신 플러그인을 사용하면 XE 소스코드의 수정을 피할 수 있습니다. 또한 플러그인을 다른 XE 사용자들과 공유할 수도 있습니다.\n\n각 플러그인은 고유한 이름을 가지는 하나의 디렉토리로 구성되며, /plugins 디렉토리에 등록됩니다.\n\n# 번들 플러그인\nXE는 사용자들이 자주 사용할 만한 플러그인을 XE에 포함하여 배포하고 있습니다.\n\n * Together (기본 번들 테마 플러그인)\n * banner (기본 번들 테마 의존성 플러그인, 배너 플러그인)\n * board (게시판 기능 플러그인)\n * ckeditor (에디터 기능 플러그인)\n * claim (신고 기능 플러그인)\n * comment (댓글 기능 플러그인)\n * news_client ( XE3 의 새로운 소식을 알려주는 위젯 플러그인)\n * page (심플 페이지 번들 플러그인)\n * widget_page (위젯 페이지를 구성하는데에 필요한 플러그인, 위젯 플러그인)\n\n# 플러그인 상태\n각 플러그인은 활성화 또는 비활성화 상태를 가집니다. 어떤 플러그인을 /plugins 디렉토리에 추가한다고 해도 처음에는 비활성화 상태이기 때문에 바로 작동되지 않습니다. 플러그인을 활성화(activate)시켜야 비로소 플러그인이 작동합니다. 플러그인을 활성화시키려면 사이트 관리자 > 플러그인 > 플러그인 목록에서 원하는 플러그인을 활성화시키십시오.\n\n# 개발 모드 플러그인\nXE 자료실을 통해 설치하지 않은 플러그인을 개발 모드 플러그인이라고 합니다.\n\n사이트관리자는 XE 자료실을 통해 다른 개발자들이 배포한 플러그인을 다운로드 받을 수 있습니다. 물론, 다른 개발자의 플러그인 소스코드를 /plugins에 직접 추가하여 사용할 수도 있으며, 여러분이 직접 생성한 플러그인을 추가하여 사용할 수도 있습니다.\n\nXE 자료실을 통해 설치하지 않은 플러그인은 터미널에서 반드시 플러그인 디렉토리로 이동후 composer update 명령을 실행해주어야 합니다. 이 명령을 실행하면, 플러그인 디렉토리에 vendor 디렉토리가 생성됩니다. 따라서 개발모드 플러그인은 vendor 디렉토리를 가집니다.\n\n>  직접 설치한 플러그인에서 composer update를 실행하지 않으면 autoload가 등록되지 않아 제대로 작동하지 않을 수 있습니다. 또 XE에서는 자료실을 통해 설치한 플러그인으로 인식하여 오작동을 일으킬 수 있습니다.",contentLowercase:"# 플러그인\n플러그인은 여러분이 xe를 확장할 수 있는 유일한 방법입니다. xe에 새로운 기능을 추가하거나 기본 기능을 변경하려고 할 때, 또는 테마나 스킨과 같은 컴포넌트를 xe에 추가하고 싶을 때, 플러그인을 사용하십시오.\n\nxe는 오픈소스프로그램으로 자유롭게 코어 소스코드를 수정하여 사용할수 있지만, 업데이트 되는 소스코드를 계속 적용하려면 소스코드의 수정을 피해야 합니다. 대신 플러그인을 사용하면 xe 소스코드의 수정을 피할 수 있습니다. 또한 플러그인을 다른 xe 사용자들과 공유할 수도 있습니다.\n\n각 플러그인은 고유한 이름을 가지는 하나의 디렉토리로 구성되며, /plugins 디렉토리에 등록됩니다.\n\n# 번들 플러그인\nxe는 사용자들이 자주 사용할 만한 플러그인을 xe에 포함하여 배포하고 있습니다.\n\n * together (기본 번들 테마 플러그인)\n * banner (기본 번들 테마 의존성 플러그인, 배너 플러그인)\n * board (게시판 기능 플러그인)\n * ckeditor (에디터 기능 플러그인)\n * claim (신고 기능 플러그인)\n * comment (댓글 기능 플러그인)\n * news_client ( xe3 의 새로운 소식을 알려주는 위젯 플러그인)\n * page (심플 페이지 번들 플러그인)\n * widget_page (위젯 페이지를 구성하는데에 필요한 플러그인, 위젯 플러그인)\n\n# 플러그인 상태\n각 플러그인은 활성화 또는 비활성화 상태를 가집니다. 어떤 플러그인을 /plugins 디렉토리에 추가한다고 해도 처음에는 비활성화 상태이기 때문에 바로 작동되지 않습니다. 플러그인을 활성화(activate)시켜야 비로소 플러그인이 작동합니다. 플러그인을 활성화시키려면 사이트 관리자 > 플러그인 > 플러그인 목록에서 원하는 플러그인을 활성화시키십시오.\n\n# 개발 모드 플러그인\nxe 자료실을 통해 설치하지 않은 플러그인을 개발 모드 플러그인이라고 합니다.\n\n사이트관리자는 xe 자료실을 통해 다른 개발자들이 배포한 플러그인을 다운로드 받을 수 있습니다. 물론, 다른 개발자의 플러그인 소스코드를 /plugins에 직접 추가하여 사용할 수도 있으며, 여러분이 직접 생성한 플러그인을 추가하여 사용할 수도 있습니다.\n\nxe 자료실을 통해 설치하지 않은 플러그인은 터미널에서 반드시 플러그인 디렉토리로 이동후 composer update 명령을 실행해주어야 합니다. 이 명령을 실행하면, 플러그인 디렉토리에 vendor 디렉토리가 생성됩니다. 따라서 개발모드 플러그인은 vendor 디렉토리를 가집니다.\n\n>  직접 설치한 플러그인에서 composer update를 실행하지 않으면 autoload가 등록되지 않아 제대로 작동하지 않을 수 있습니다. 또 xe에서는 자료실을 통해 설치한 플러그인으로 인식하여 오작동을 일으킬 수 있습니다.",charsets:{cjk:!0}},{title:"프레젠터",frontmatter:{},regularPath:"/04.%20%EA%B0%9C%EB%B0%9C%EC%9E%90%20%EB%AC%B8%EC%84%9C/presenter.html",relativePath:"04. 개발자 문서/presenter.md",key:"v-fc9616fa",path:"/04.%20%EA%B0%9C%EB%B0%9C%EC%9E%90%20%EB%AC%B8%EC%84%9C/presenter.html",headers:[{level:2,title:"HTML 형식으로 응답하기",slug:"html-형식으로-응답하기",charIndex:814},{level:3,title:"스킨 타겟 아이디",slug:"스킨-타겟-아이디",charIndex:961},{level:3,title:"HtmlPresenter",slug:"htmlpresenter",charIndex:629},{level:2,title:"API 형식으로 응답하기",slug:"api-형식으로-응답하기",charIndex:2781},{level:2,title:"모든 형식 지원",slug:"모든-형식-지원",charIndex:2982}],headersStr:"HTML 형식으로 응답하기 스킨 타겟 아이디 HtmlPresenter API 형식으로 응답하기 모든 형식 지원",content:"# 프레젠터\n * 3.0.0-beta6 변경 사항\n   \n   >  화면 출력을 담당하는 renderer 의 명칭을 presentable 로 변경하고 이 인터페이스를 따르는 구현체의 이름을 변경함\n   \n   \n   \n * 3.0.0-beta7 변경 사항\n   \n   >  프리젠터의 본래 목적인 html, api 형식의 유연한 처리를 위해서 XePresenter::make() 을 변경합니다. 이전에는 make() 가 html에 대한 지원만 처리하였지만 이후 부터 make 를 사용할 경우 html, api 모두를 지원하도록 변경합니다.\n   \n   \n   \n\nXE에서는 웹 브라우저로 응답을 보낼 때 뷰를 대신해서 프리젠터를 사용합니다.\n\n프리젠터는 일반적인 HTML 응답뿐만 아니라 API 요청에 대한 Json 응답을 하나의 메소드로 처리할 수 있습니다. 프리젠터는 요청(Request) 정보에 포함된 응답 포멧을 검사하고, 데이터를 해당 포멧에 맞게 반환합니다.\n\nXE 설계 과정에서, 하나의 컨트롤러를 이용해서 HTML 형식과 API 형식(Json)의 응답을 모두를 처리하여 유지보수의 비용을 줄이고자 하는 요구사항이 있었습니다.\n\n프리젠터는 응답 포멧에 따라 presetable 한 구현체를 선택합니다. 기본으로 HtmlPresenter, JsonPresenter 두개의 구현체를 포함하고 있습니다. 만약 API 요청의 응답을 Json이 아닌 XML 형식으로 받고싶다면, 플러그인을 통해 presentable 한 XML 구현체를 추가하고 요청에서 반환 포멧을 xml로 하면 됩니다.\n\n프리젠터는 XePresenter 파사드를 제공합니다.\n\n# HTML 형식으로 응답하기\nHtml 응답을 처리할 경우, HtmlPresenter는 테마, 스킨을 처리합니다. HtmlPresenter는 테마 핸들러에게 테마 컴포넌트를 받아 처리합니다. 스킨은 XePresenter::setSkinTargetId()으로 외부에서 스킨 타겟 아이디를 입력받아 스킨 핸들러를 사용해 설정된 스킨을 사용합니다.\n\nXE에서 HTML 형식으로 응답할 때에는, 컨트롤러가 생성한 데이터를 스킨을 사용해 HTML로 변환합니다. 또, 컴파일된 HTML에 테마를 적용하여 반환합니다. 프리젠터에서 스킨을 선택할 수 있도록 응답할 때 어떤 종류의 스킨을 사용해야 하는지 설정하고 사용해야 합니다.\n\n>  HTML 형식만 지원하려고 싶을 경우 XePresenter::makeHtml()을 사용합니다.\n\n\n// in app/Html/Controllers/ProfileController.php\n\n// 스킨 타겟 지정\nXePresenter::setSkinTargetId('member/profile');\n\n...\n\n// HTML 형식으로 반환, 'index' 뷰를 사용\nreturn XePresenter::makeHtml('index', compact('user', 'grant'));\n\n\n스킨을 사용하지 않고, 템플릿 파일의 뷰 이름을 바로 지정할 수도 있습니다.\n\n// in app/Html/Controllers/SeoController.php\n\n// 뷰 이름을 직접 지정\nreturn XePresenter::makeHtml('seo.setting');\n\n\n\n# 스킨 타겟 아이디\n스킨은 특정 컴포넌트나 집단 밑에 하나의 그룹을 형성합니다.\n\n코어에서 제공하는 프로필 컨트롤러는 member/profile 아이디를 스킨 타겟 아이디로 사용하고 있습니다. 플러그인으로 프로필 스킨을 만드려고 할 때 제작되는 스킨 컴포넌트는 member/profile를 대상 아이디로 컴포넌트 아이디를 생성해야 하며 스킨 패키지는 이를 기준으로 스킨을 설정할 수 있는 관리자를 제공합니다.\n\n다른 예로 Board 플러그의 Board 모듈 컴포너트는 module/board@board 스킨 타겟 아이디를 사용합니다.\n\n스킨을 사용하는 컨트롤러는 XePresenter::setSkinTargetId()에 지정된 스킨 타겟 아이디를 설정하여 HtmlRenderer::render()가 처리될 때 설정된 스킨을 찾아 처리할 수 있도록 합니다.\n\n# HtmlPresenter\n프리젠터에서 Html 응답처리할 XePresenter::make() 할 경우 기본으로 /resources/views/를 참고합니다. 이것은 HtmlPresenter::renderSkin()에서 스킨의 타겟 아이디가 지정되지 않았을 경우 뷰 [https://www.xpressengine.io/manual/develop-guide/view]를 직접 사용하기 때문입니다.\n\n정상적인 사용 과정으로 스킨의 타겟 아이디를 프리젠터에게 전달한 경우 HtmlPresenter는 사용될 스킨을 찾아 Renderable 인터페이스의 render()를 실행시키며 스킨 컴포넌트는 뷰 [https://www.xpressengine.io/manual/develop-guide/view]를 사용해서 블레이드 파일을 처리합니다.\n\n# 전체 프레임 구성 파일\nresources/views/common/base.blade.php으로 전체 프레임을 구성하며 $content에 테마를 전달받아 출력합니다.\n\nHtmlPresenter::render()는 SEO, 스킨, 테마 순서로 처리되고 마지막에 self::$commonHtmlWrapper으로 감싸서 반환합니다. self::$commonHtmlWrapper는 app/Providers/PresenterServiceProvider.php에서 config/xe.php의 HtmlWrapper로 설정합니다.\n\nbase.blade.php는 프론트엔드에 등록된 js, css등 여러 요소들을 어떤 위치에 출력할지 결정하고 있습니다.\n\n# API 형식으로 응답하기\nXE는 json 형식을 지원하며 JsonPresenter가 사용됩니다.\n\n// in app/Html/Controllers/DynamicFieldController.php\n\n  ...\n\n  // $list를 json 형식으로 변환하여 반환\n  return XePresenter::makeApi(['list' => $list]);\n\n\n# 모든 형식 지원\nHTML, API 모든 형식을 지원하기 위해서 XePresenter::make()를 사용합니다.\n\n// in src/Controllers/UserController.php\n\n  ...\n\n  // 응답 형식에 따라 $data를 json 형식으로 반환하거나, \n  // $data를 index 템플릿(스킨)에 적용한 후, HTML 형식으로 반환\n  return XePresenter::make('index', $data);\n\n\n>  XE의 API를 이용한 개발 케이스가 많지 않아 API 지원에 대한 부분은 계속 개선해야 합니다.",contentLowercase:"# 프레젠터\n * 3.0.0-beta6 변경 사항\n   \n   >  화면 출력을 담당하는 renderer 의 명칭을 presentable 로 변경하고 이 인터페이스를 따르는 구현체의 이름을 변경함\n   \n   \n   \n * 3.0.0-beta7 변경 사항\n   \n   >  프리젠터의 본래 목적인 html, api 형식의 유연한 처리를 위해서 xepresenter::make() 을 변경합니다. 이전에는 make() 가 html에 대한 지원만 처리하였지만 이후 부터 make 를 사용할 경우 html, api 모두를 지원하도록 변경합니다.\n   \n   \n   \n\nxe에서는 웹 브라우저로 응답을 보낼 때 뷰를 대신해서 프리젠터를 사용합니다.\n\n프리젠터는 일반적인 html 응답뿐만 아니라 api 요청에 대한 json 응답을 하나의 메소드로 처리할 수 있습니다. 프리젠터는 요청(request) 정보에 포함된 응답 포멧을 검사하고, 데이터를 해당 포멧에 맞게 반환합니다.\n\nxe 설계 과정에서, 하나의 컨트롤러를 이용해서 html 형식과 api 형식(json)의 응답을 모두를 처리하여 유지보수의 비용을 줄이고자 하는 요구사항이 있었습니다.\n\n프리젠터는 응답 포멧에 따라 presetable 한 구현체를 선택합니다. 기본으로 htmlpresenter, jsonpresenter 두개의 구현체를 포함하고 있습니다. 만약 api 요청의 응답을 json이 아닌 xml 형식으로 받고싶다면, 플러그인을 통해 presentable 한 xml 구현체를 추가하고 요청에서 반환 포멧을 xml로 하면 됩니다.\n\n프리젠터는 xepresenter 파사드를 제공합니다.\n\n# html 형식으로 응답하기\nhtml 응답을 처리할 경우, htmlpresenter는 테마, 스킨을 처리합니다. htmlpresenter는 테마 핸들러에게 테마 컴포넌트를 받아 처리합니다. 스킨은 xepresenter::setskintargetid()으로 외부에서 스킨 타겟 아이디를 입력받아 스킨 핸들러를 사용해 설정된 스킨을 사용합니다.\n\nxe에서 html 형식으로 응답할 때에는, 컨트롤러가 생성한 데이터를 스킨을 사용해 html로 변환합니다. 또, 컴파일된 html에 테마를 적용하여 반환합니다. 프리젠터에서 스킨을 선택할 수 있도록 응답할 때 어떤 종류의 스킨을 사용해야 하는지 설정하고 사용해야 합니다.\n\n>  html 형식만 지원하려고 싶을 경우 xepresenter::makehtml()을 사용합니다.\n\n\n// in app/html/controllers/profilecontroller.php\n\n// 스킨 타겟 지정\nxepresenter::setskintargetid('member/profile');\n\n...\n\n// html 형식으로 반환, 'index' 뷰를 사용\nreturn xepresenter::makehtml('index', compact('user', 'grant'));\n\n\n스킨을 사용하지 않고, 템플릿 파일의 뷰 이름을 바로 지정할 수도 있습니다.\n\n// in app/html/controllers/seocontroller.php\n\n// 뷰 이름을 직접 지정\nreturn xepresenter::makehtml('seo.setting');\n\n\n\n# 스킨 타겟 아이디\n스킨은 특정 컴포넌트나 집단 밑에 하나의 그룹을 형성합니다.\n\n코어에서 제공하는 프로필 컨트롤러는 member/profile 아이디를 스킨 타겟 아이디로 사용하고 있습니다. 플러그인으로 프로필 스킨을 만드려고 할 때 제작되는 스킨 컴포넌트는 member/profile를 대상 아이디로 컴포넌트 아이디를 생성해야 하며 스킨 패키지는 이를 기준으로 스킨을 설정할 수 있는 관리자를 제공합니다.\n\n다른 예로 board 플러그의 board 모듈 컴포너트는 module/board@board 스킨 타겟 아이디를 사용합니다.\n\n스킨을 사용하는 컨트롤러는 xepresenter::setskintargetid()에 지정된 스킨 타겟 아이디를 설정하여 htmlrenderer::render()가 처리될 때 설정된 스킨을 찾아 처리할 수 있도록 합니다.\n\n# htmlpresenter\n프리젠터에서 html 응답처리할 xepresenter::make() 할 경우 기본으로 /resources/views/를 참고합니다. 이것은 htmlpresenter::renderskin()에서 스킨의 타겟 아이디가 지정되지 않았을 경우 뷰 [https://www.xpressengine.io/manual/develop-guide/view]를 직접 사용하기 때문입니다.\n\n정상적인 사용 과정으로 스킨의 타겟 아이디를 프리젠터에게 전달한 경우 htmlpresenter는 사용될 스킨을 찾아 renderable 인터페이스의 render()를 실행시키며 스킨 컴포넌트는 뷰 [https://www.xpressengine.io/manual/develop-guide/view]를 사용해서 블레이드 파일을 처리합니다.\n\n# 전체 프레임 구성 파일\nresources/views/common/base.blade.php으로 전체 프레임을 구성하며 $content에 테마를 전달받아 출력합니다.\n\nhtmlpresenter::render()는 seo, 스킨, 테마 순서로 처리되고 마지막에 self::$commonhtmlwrapper으로 감싸서 반환합니다. self::$commonhtmlwrapper는 app/providers/presenterserviceprovider.php에서 config/xe.php의 htmlwrapper로 설정합니다.\n\nbase.blade.php는 프론트엔드에 등록된 js, css등 여러 요소들을 어떤 위치에 출력할지 결정하고 있습니다.\n\n# api 형식으로 응답하기\nxe는 json 형식을 지원하며 jsonpresenter가 사용됩니다.\n\n// in app/html/controllers/dynamicfieldcontroller.php\n\n  ...\n\n  // $list를 json 형식으로 변환하여 반환\n  return xepresenter::makeapi(['list' => $list]);\n\n\n# 모든 형식 지원\nhtml, api 모든 형식을 지원하기 위해서 xepresenter::make()를 사용합니다.\n\n// in src/controllers/usercontroller.php\n\n  ...\n\n  // 응답 형식에 따라 $data를 json 형식으로 반환하거나, \n  // $data를 index 템플릿(스킨)에 적용한 후, html 형식으로 반환\n  return xepresenter::make('index', $data);\n\n\n>  xe의 api를 이용한 개발 케이스가 많지 않아 api 지원에 대한 부분은 계속 개선해야 합니다.",charsets:{cjk:!0}},{title:"요청",frontmatter:{},regularPath:"/04.%20%EA%B0%9C%EB%B0%9C%EC%9E%90%20%EB%AC%B8%EC%84%9C/request.html",relativePath:"04. 개발자 문서/request.md",key:"v-1f1b2916",path:"/04.%20%EA%B0%9C%EB%B0%9C%EC%9E%90%20%EB%AC%B8%EC%84%9C/request.html",headers:[{level:2,title:"Request 인스턴스 획득하기",slug:"request-인스턴스-획득하기",charIndex:176},{level:3,title:"파사드를 이용한 방법",slug:"파사드를-이용한-방법",charIndex:196},{level:3,title:"의존성 주입을 통한 방법",slug:"의존성-주입을-통한-방법",charIndex:395},{level:2,title:"입력값 검색하기",slug:"입력값-검색하기",charIndex:1444},{level:2,title:"이전 입력",slug:"이전-입력",charIndex:2046},{level:2,title:"파일 처리",slug:"파일-처리",charIndex:2783},{level:3,title:"기타 파일 메소드",slug:"기타-파일-메소드",charIndex:3300},{level:2,title:"기타 Request에 대한 정보",slug:"기타-request에-대한-정보",charIndex:3477}],headersStr:"Request 인스턴스 획득하기 파사드를 이용한 방법 의존성 주입을 통한 방법 입력값 검색하기 이전 입력 파일 처리 기타 파일 메소드 기타 Request에 대한 정보",content:"# 요청\nXE는 웹브라우저로부터 요청을 받으면, 제일 먼저 index.php가 실행되고 index.php는 현재 요청에 대한 정보를 담고 있는 Request 인스턴스를 생성합니다. 이 Request 인스턴스는 XE가 실행되는 동안 매우 많은 곳에서 로드되어 현재 요청에 대한 정보를 참조할 수 있도록 합니다.\n\n# Request 인스턴스 획득하기\n# 파사드를 이용한 방법\nRequest 파사드는 컨테이너와 결합된 현재의 Request에 엑세스 할 수 있도록 해줍니다. 예를 들면:\n\n$name = Request::input('name');\n\n\n만약 특정 네임스페이스 아래에서 Request 파사드를 사용하고자 한다면 클래스 상단부분에 use Request; 구문을 추가해야 된다는 것을 기억하십시오.\n\n# 의존성 주입을 통한 방법\n현재의 의존성 주입을 통해서 HTTP request을 획득하기 위해서는 여러분의 컨트롤러 생성자나 메소드에서 타입힌트를 지정해야 합니다. XE의 request 인스턴스는 \\Xpressengine\\Http\\Request 클래스의 인스턴스입니다. 이 클래스는 \\Illuminate\\Http\\Request를 상속받고 있습니다.\n\n현재의 request의 인스턴스는 서비스 컨테이너에 의해서 자동으로 주입될 것입니다:\n\n<?php namespace App\\Http\\Controllers;\n\nuse Xpressengine\\Http\\Request;\nuse Illuminate\\Routing\\Controller;\n\nclass UserController extends Controller {\n\n    /**\n     * Store a new user.\n     *\n     * @param  Request  $request\n     * @return Response\n     */\n    public function store(Request $request)\n    {\n        $name = $request->input('name');\n\n        //\n    }\n\n}\n\n\n만약 컨트롤러 메소드에서 라우트 파라미터를 입력값으로 받아야 한다면 의존성을 지정한 뒤에 라우트 파라미터를 나열하면 됩니다:\n\n<?php namespace App\\Http\\Controllers;\n\nuse Xpressengine\\Http\\Request;\nuse Illuminate\\Routing\\Controller;\n\nclass UserController extends Controller {\n\n    /**\n     * Update the specified user.\n     *\n     * @param  Request  $request\n     * @param  int  $id\n     * @return Response\n     */\n    public function update(Request $request, $id)\n    {\n        //\n    }\n}\n\n\n# 입력값 검색하기\n# 입력값 검색하기\n간단한 메소드를 통해서 Xpressengine\\Http\\Request 인스턴스 모든 사용자 입력값에 엑세스 할 수 있습니다. request에서 어떤 HTTP 메소드를 사용했는지에 대해서는 걱정할 필요 없이 모든 HTTP 메소드에 대해서 같은 방법으로 입력값에 대해 엑세스가 가능합니다.\n\n$name = $request->input('name');\n\n\n# 입력값이 없을 때 기본값 가져오기\n$name = $request->input('name', 'Sally');\n\n\n# 입력값이 존재하는지 확인하기\nif ($request->has('name'))\n{\n    //\n}\n\n\n# 전체 입력값 가져오기\n$input = $request->all();\n\n\n# Request 입력 중에서 몇개의 값만 가져오기\n$input = $request->only('username', 'password');\n\n$input = $request->except('credit_card');\n\n\n입력폼에 배열로 값이 전달된다면 ‘점’으로 구분하여 입력값에 엑세스 할 수 있습니다:\n\n$input = $request->input('products.0.name');\n\n\n# 이전 입력\nXE는 현재 request의 입력값을 다음 request까지 유지하는 방법을 제공합니다. 예를 들어, 폼의 입력값 체크에서 에러가 발생하면 작성한 값들을 다시 채워줘야 할 필요가 있을 수 있습니다.\n\n# 입력값들 세션에 저장하기\nflash 메소드는 현재의 입력들을 세션에 저장하여 사용자가 다음번에 request를 보내도 사용가능하게 만들어 줍니다.\n\n$request->flash();\n\n\n# 몇개의 입력값만 세션에 저장하기\n$request->flashOnly('username', 'email');\n\n$request->flashExcept('password');\n\n\n# 플래쉬 & 리다이렉트\n대부분 이전 페이지로 리다이렉트 하면서 입력값을 플래슁 하기를 원하는 데, 이 경우 리다이렉트와 함께 입력값 플래싱을 메소드 체이닝으로 사용할 수 있습니다.\n\nreturn redirect('form')->withInput();\n\nreturn redirect('form')->withInput(Request::except('password'));\n\n\n# 이전 입력값 검색하기\n이전 Request에 대해 저장된 입력값을 검색하기 위해서는 Request 인스턴스의 old 메소드를 사용하면 됩니다.\n\n$username = Request::old('username');\n\n\n블레이드 템플릿 안에서 지난 입력값을 보여주려면 old 헬퍼함수를 사용하는 것이 보다 편리합니다:\n\n{{ old('username') }}\n\n\n# 파일 처리\nRequest 인스턴스의 file 메소드를 사용하면 사용자가 업로드한 파일을 엑세스할 수 있습니다. file 메소드에 의해 반환되는 값은 Symfony\\Component\\HttpFoundation\\File\\UploadedFile 클래스의 인스턴스입니다. 이 인스턴스의 다양한 메소드를 사용하여 업로드된 파일에 대한 정보를 참조할 수 있습니다.\n\n# 업로드한 파일 가져오기\n$file = $request->file('photo');\n\n\n# 파일이 업로드 되었는지 확인하기\nif ($request->hasFile('photo'))\n{\n    //\n}\n\n\n# 업로드한 파일이 유효한지 판단하기\nif ($request->file('photo')->isValid())\n{\n    //\n}\n\n\n# 업로드한 파일 이동하기\n$request->file('photo')->move($destinationPath);\n\n$request->file('photo')->move($destinationPath, $fileName);\n\n\n# 기타 파일 메소드\n그 밖에도 다양한 메소드들이 UploadedFile 인스턴스에 준비되어 있습니다. 추가적인 메소들에 대한 정보는 API 문서 [http://api.symfony.com/2.5/Symfony/Component/HttpFoundation/File/UploadedFile.html]를 참고하십시오.\n\n# 기타 Request에 대한 정보\nRequest 클래스는 Symfony\\Component\\HttpFoundation\\Request 클래스를 상속하고 있으며 어플리케이션을 위한 HTTP request을 확인하는 많은 메소드를 제공하고 있습니다. 다음은 몇몇 예시들입니다.\n\n# Request URI 가져오기\n$uri = $request->path();\n\n\n# Request 가 AJAX 요청인지 확인\nif ($request->ajax())\n{\n    //\n}\n\n\n# Request 메소드 확인하기\n$method = $request->method();\n\nif ($request->isMethod('post'))\n{\n    //\n}\n\n\n# 현재 request가 패턴에 일치하는지 확인하기\nif ($request->is('admin/*'))\n{\n    //\n}\n\n\n# 현재 request URL 가져오기\n$url = $request->url();",contentLowercase:"# 요청\nxe는 웹브라우저로부터 요청을 받으면, 제일 먼저 index.php가 실행되고 index.php는 현재 요청에 대한 정보를 담고 있는 request 인스턴스를 생성합니다. 이 request 인스턴스는 xe가 실행되는 동안 매우 많은 곳에서 로드되어 현재 요청에 대한 정보를 참조할 수 있도록 합니다.\n\n# request 인스턴스 획득하기\n# 파사드를 이용한 방법\nrequest 파사드는 컨테이너와 결합된 현재의 request에 엑세스 할 수 있도록 해줍니다. 예를 들면:\n\n$name = request::input('name');\n\n\n만약 특정 네임스페이스 아래에서 request 파사드를 사용하고자 한다면 클래스 상단부분에 use request; 구문을 추가해야 된다는 것을 기억하십시오.\n\n# 의존성 주입을 통한 방법\n현재의 의존성 주입을 통해서 http request을 획득하기 위해서는 여러분의 컨트롤러 생성자나 메소드에서 타입힌트를 지정해야 합니다. xe의 request 인스턴스는 \\xpressengine\\http\\request 클래스의 인스턴스입니다. 이 클래스는 \\illuminate\\http\\request를 상속받고 있습니다.\n\n현재의 request의 인스턴스는 서비스 컨테이너에 의해서 자동으로 주입될 것입니다:\n\n<?php namespace app\\http\\controllers;\n\nuse xpressengine\\http\\request;\nuse illuminate\\routing\\controller;\n\nclass usercontroller extends controller {\n\n    /**\n     * store a new user.\n     *\n     * @param  request  $request\n     * @return response\n     */\n    public function store(request $request)\n    {\n        $name = $request->input('name');\n\n        //\n    }\n\n}\n\n\n만약 컨트롤러 메소드에서 라우트 파라미터를 입력값으로 받아야 한다면 의존성을 지정한 뒤에 라우트 파라미터를 나열하면 됩니다:\n\n<?php namespace app\\http\\controllers;\n\nuse xpressengine\\http\\request;\nuse illuminate\\routing\\controller;\n\nclass usercontroller extends controller {\n\n    /**\n     * update the specified user.\n     *\n     * @param  request  $request\n     * @param  int  $id\n     * @return response\n     */\n    public function update(request $request, $id)\n    {\n        //\n    }\n}\n\n\n# 입력값 검색하기\n# 입력값 검색하기\n간단한 메소드를 통해서 xpressengine\\http\\request 인스턴스 모든 사용자 입력값에 엑세스 할 수 있습니다. request에서 어떤 http 메소드를 사용했는지에 대해서는 걱정할 필요 없이 모든 http 메소드에 대해서 같은 방법으로 입력값에 대해 엑세스가 가능합니다.\n\n$name = $request->input('name');\n\n\n# 입력값이 없을 때 기본값 가져오기\n$name = $request->input('name', 'sally');\n\n\n# 입력값이 존재하는지 확인하기\nif ($request->has('name'))\n{\n    //\n}\n\n\n# 전체 입력값 가져오기\n$input = $request->all();\n\n\n# request 입력 중에서 몇개의 값만 가져오기\n$input = $request->only('username', 'password');\n\n$input = $request->except('credit_card');\n\n\n입력폼에 배열로 값이 전달된다면 ‘점’으로 구분하여 입력값에 엑세스 할 수 있습니다:\n\n$input = $request->input('products.0.name');\n\n\n# 이전 입력\nxe는 현재 request의 입력값을 다음 request까지 유지하는 방법을 제공합니다. 예를 들어, 폼의 입력값 체크에서 에러가 발생하면 작성한 값들을 다시 채워줘야 할 필요가 있을 수 있습니다.\n\n# 입력값들 세션에 저장하기\nflash 메소드는 현재의 입력들을 세션에 저장하여 사용자가 다음번에 request를 보내도 사용가능하게 만들어 줍니다.\n\n$request->flash();\n\n\n# 몇개의 입력값만 세션에 저장하기\n$request->flashonly('username', 'email');\n\n$request->flashexcept('password');\n\n\n# 플래쉬 & 리다이렉트\n대부분 이전 페이지로 리다이렉트 하면서 입력값을 플래슁 하기를 원하는 데, 이 경우 리다이렉트와 함께 입력값 플래싱을 메소드 체이닝으로 사용할 수 있습니다.\n\nreturn redirect('form')->withinput();\n\nreturn redirect('form')->withinput(request::except('password'));\n\n\n# 이전 입력값 검색하기\n이전 request에 대해 저장된 입력값을 검색하기 위해서는 request 인스턴스의 old 메소드를 사용하면 됩니다.\n\n$username = request::old('username');\n\n\n블레이드 템플릿 안에서 지난 입력값을 보여주려면 old 헬퍼함수를 사용하는 것이 보다 편리합니다:\n\n{{ old('username') }}\n\n\n# 파일 처리\nrequest 인스턴스의 file 메소드를 사용하면 사용자가 업로드한 파일을 엑세스할 수 있습니다. file 메소드에 의해 반환되는 값은 symfony\\component\\httpfoundation\\file\\uploadedfile 클래스의 인스턴스입니다. 이 인스턴스의 다양한 메소드를 사용하여 업로드된 파일에 대한 정보를 참조할 수 있습니다.\n\n# 업로드한 파일 가져오기\n$file = $request->file('photo');\n\n\n# 파일이 업로드 되었는지 확인하기\nif ($request->hasfile('photo'))\n{\n    //\n}\n\n\n# 업로드한 파일이 유효한지 판단하기\nif ($request->file('photo')->isvalid())\n{\n    //\n}\n\n\n# 업로드한 파일 이동하기\n$request->file('photo')->move($destinationpath);\n\n$request->file('photo')->move($destinationpath, $filename);\n\n\n# 기타 파일 메소드\n그 밖에도 다양한 메소드들이 uploadedfile 인스턴스에 준비되어 있습니다. 추가적인 메소들에 대한 정보는 api 문서 [http://api.symfony.com/2.5/symfony/component/httpfoundation/file/uploadedfile.html]를 참고하십시오.\n\n# 기타 request에 대한 정보\nrequest 클래스는 symfony\\component\\httpfoundation\\request 클래스를 상속하고 있으며 어플리케이션을 위한 http request을 확인하는 많은 메소드를 제공하고 있습니다. 다음은 몇몇 예시들입니다.\n\n# request uri 가져오기\n$uri = $request->path();\n\n\n# request 가 ajax 요청인지 확인\nif ($request->ajax())\n{\n    //\n}\n\n\n# request 메소드 확인하기\n$method = $request->method();\n\nif ($request->ismethod('post'))\n{\n    //\n}\n\n\n# 현재 request가 패턴에 일치하는지 확인하기\nif ($request->is('admin/*'))\n{\n    //\n}\n\n\n# 현재 request url 가져오기\n$url = $request->url();",charsets:{cjk:!0}},{title:"응답",frontmatter:{},regularPath:"/04.%20%EA%B0%9C%EB%B0%9C%EC%9E%90%20%EB%AC%B8%EC%84%9C/response.html",relativePath:"04. 개발자 문서/response.md",key:"v-df345ac6",path:"/04.%20%EA%B0%9C%EB%B0%9C%EC%9E%90%20%EB%AC%B8%EC%84%9C/response.html",headers:[{level:2,title:"Response 사용의 제한",slug:"response-사용의-제한",charIndex:7},{level:2,title:"리다이렉트",slug:"리다이렉트",charIndex:319},{level:3,title:"리다이렉트 반환하기",slug:"리다이렉트-반환하기",charIndex:442},{level:3,title:"리다이렉트에 플래시 데이터와 함께 반환하기",slug:"리다이렉트에-플래시-데이터와-함께-반환하기",charIndex:660},{level:3,title:"이전 URL로 리다이렉트",slug:"이전-url로-리다이렉트",charIndex:896},{level:3,title:"이름이 지정된 라우트로 리다이렉트 하기",slug:"이름이-지정된-라우트로-리다이렉트-하기",charIndex:1069},{level:3,title:"이름이 지정된 라우트로 파라미터와 함께 리다이렉트 하기",slug:"이름이-지정된-라우트로-파라미터와-함께-리다이렉트-하기",charIndex:1322},{level:3,title:"이름지 지정된 라우트로 파라미터 이름과 함께 리다이렉트 하기",slug:"이름지-지정된-라우트로-파라미터-이름과-함께-리다이렉트-하기",charIndex:1505},{level:3,title:"컨트롤러 액션으로 리다이렉트 하기",slug:"컨트롤러-액션으로-리다이렉트-하기",charIndex:1650},{level:3,title:"컨트롤러 액션으로 파라미터와 함께 리다이렉트 하기",slug:"컨트롤러-액션으로-파라미터와-함께-리다이렉트-하기",charIndex:1921},{level:3,title:"컨트롤러 액션으로 파라미터 이름과 함께 리다이렉트 하기",slug:"컨트롤러-액션으로-파라미터-이름과-함께-리다이렉트-하기",charIndex:2032},{level:2,title:"기타 Response",slug:"기타-response",charIndex:2156},{level:3,title:"JSON response 생성하기",slug:"json-response-생성하기",charIndex:2368},{level:3,title:"JSONP Response 생성하기",slug:"jsonp-response-생성하기",charIndex:2516},{level:3,title:"파일 다운로드 Response 생성하기",slug:"파일-다운로드-response-생성하기",charIndex:2665}],headersStr:"Response 사용의 제한 리다이렉트 리다이렉트 반환하기 리다이렉트에 플래시 데이터와 함께 반환하기 이전 URL로 리다이렉트 이름이 지정된 라우트로 리다이렉트 하기 이름이 지정된 라우트로 파라미터와 함께 리다이렉트 하기 이름지 지정된 라우트로 파라미터 이름과 함께 리다이렉트 하기 컨트롤러 액션으로 리다이렉트 하기 컨트롤러 액션으로 파라미터와 함께 리다이렉트 하기 컨트롤러 액션으로 파라미터 이름과 함께 리다이렉트 하기 기타 Response JSON response 생성하기 JSONP Response 생성하기 파일 다운로드 Response 생성하기",content:"# 응답\n# Response 사용의 제한\nXE의 기본 프레임워크인 라라벨에서는 대부분의 라우트나 컨트롤러 액션에서 Illuminate\\Http\\Response의 인스턴스나 뷰를 반환하도록 합니다.\n\n하지만 XE는 웹 브라우저로 html 형식의 응답을 보낼 때, 스킨과 테마를 적용한 후 보내야 합니다. 특별한 경우가 아니라면 컨트롤러에서 Illuminate\\Http\\Response 인스턴스나 뷰를 직접 반환(return)하지 마십시오. 대신, 프레젠터를 사용하여 반환하십시오. 반드시 프레젠터를 사용해야만 테마와 스킨이 적용되고 위젯 또한 정상적으로 출력됩니다.\n\n# 리다이렉트\n일반적으로 리다이렉트 Response는 Illuminate\\Http\\RedirectResponse 클래스의 인스턴스이며, 사용자를 다른 URL로 리다이렉트하는 데 필요한 적절한 헤더를 포함하고 있습니다.\n\n# 리다이렉트 반환하기\nRedirectResponse 인스턴스를 생성하는 데는 몇 가지 방법이 있습니다. 가장 간단한 방법은 redirect 헬퍼 함수를 사용하는 것입니다. 테스트를 진행할 때 리다이렉트 Response를 생성하는 모킹(Mock)은 일반적으로 잘 하지 않기 때문에, 대부분의 경우에 헬퍼 함수를 사용하게 됩니다.\n\nreturn redirect('user/login');\n\n\n# 리다이렉트에 플래시 데이터와 함께 반환하기\n새로운 URL로 리다이렉트 이동하고 플래시 데이터를 세션에 저장 하는 것은 일반적으로 동시에 진행됩니다. 따라서 편의성을 높이기 위해 RedirectResponse 인스턴스를 생성하고 동시에 메소드 체인을 통해 플래시 데이터를 세션에 저장할 수 있습니다:\n\nreturn redirect('user/login')->with('message', 'Login Failed');\n\n\n# 이전 URL로 리다이렉트\n예를 들어, 폼 전송 후에, 사용자를 이전 URL로 리다이렉트 시키고자 하는 경우가 있을 수 있습니다. 이런 경우에는 back 메소드를 사용하면 됩니다:\n\nreturn redirect()->back();\n\nreturn redirect()->back()->withInput();\n\n\n# 이름이 지정된 라우트로 리다이렉트 하기\n전달 인자 없이 redirect 헬퍼 함수를 호출할 때에는 Illuminate\\Routing\\Redirector의 인스턴스가 반환됩니다. 따라서 Redirector 인스턴스의 메소드를 사용할 수 있습니다. 예를 들어, 이름지 지정된 라우트로 이동하는 RedirectResponse를 생성하고자 한다면 route 메소드를 사용할 수 있습니다:\n\nreturn redirect()->route('login');\n\n\n# 이름이 지정된 라우트로 파라미터와 함께 리다이렉트 하기\n라우트에 전달해야 할 파라미터가 있다면 route 메소드의 두 번째 인자로 전달하면 됩니다.\n\n// For a route with the following URI: profile/{id}\n\nreturn redirect()->route('profile', [1]);\n\n\n# 이름지 지정된 라우트로 파라미터 이름과 함께 리다이렉트 하기\n// For a route with the following URI: profile/{user}\n\nreturn redirect()->route('profile', ['user' => 1]);\n\n\n# 컨트롤러 액션으로 리다이렉트 하기\n이름이 지정된 라우트로 이동하는 RedirectResponse 인스턴스를 생성하는것과 비슷하게 컨트롤러 액션으로 리다이렉션 할 수 있습니다.\n\nreturn redirect()->action('App\\Http\\Controllers\\HomeController@index');\n\n\n>  주의: URL:setRootControllerNamespace를 통해서 컨트롤러의 루트 네임스페이스가 지정되었다면, 전체 네임 스페이스를 지정할 필요가 없습니다.\n\n\n# 컨트롤러 액션으로 파라미터와 함께 리다이렉트 하기\nreturn redirect()->action('App\\Http\\Controllers\\UserController@profile', [1]);\n\n\n# 컨트롤러 액션으로 파라미터 이름과 함께 리다이렉트 하기\nreturn redirect()->action('App\\Http\\Controllers\\UserController@profile', ['user' => 1]);\n\n\n# 기타 Response\nresponse 헬퍼 함수를 사용하여 편리하게 다른 타입의 response 인스턴스를 생성할 수도 있습니다. response 헬퍼함수를 인자없이 호출하게 되면 Illuminate\\Contracts\\Routing\\ResponseFactory contract를 반환합니다. 이 contract는 response를 생성하기 위한 다양한 메소드를 제공합니다.\n\n# JSON response 생성하기\njson 메소드는 헤더의 Content-Type을 자동으로 application/json으로 지정합니다:\n\nreturn response()->json(['name' => 'Abigail', 'state' => 'CA']);\n\n\n# JSONP Response 생성하기\nreturn response()->json(['name' => 'Abigail', 'state' => 'CA'])\n                 ->setCallback($request->input('callback'));\n\n\n# 파일 다운로드 Response 생성하기\nreturn response()->download($pathToFile);\n\nreturn response()->download($pathToFile, $name, $headers);\n\nreturn response()->download($pathToFile)->deleteFileAfterSend(true);\n\n\n>  참고: 파일 다운로드를 관리하는 Symfony의 HttpFoundation에서 다운로드 할 파일의 이름이 ASCII 파일 이름임을 필요로 하고 있습니다.",contentLowercase:"# 응답\n# response 사용의 제한\nxe의 기본 프레임워크인 라라벨에서는 대부분의 라우트나 컨트롤러 액션에서 illuminate\\http\\response의 인스턴스나 뷰를 반환하도록 합니다.\n\n하지만 xe는 웹 브라우저로 html 형식의 응답을 보낼 때, 스킨과 테마를 적용한 후 보내야 합니다. 특별한 경우가 아니라면 컨트롤러에서 illuminate\\http\\response 인스턴스나 뷰를 직접 반환(return)하지 마십시오. 대신, 프레젠터를 사용하여 반환하십시오. 반드시 프레젠터를 사용해야만 테마와 스킨이 적용되고 위젯 또한 정상적으로 출력됩니다.\n\n# 리다이렉트\n일반적으로 리다이렉트 response는 illuminate\\http\\redirectresponse 클래스의 인스턴스이며, 사용자를 다른 url로 리다이렉트하는 데 필요한 적절한 헤더를 포함하고 있습니다.\n\n# 리다이렉트 반환하기\nredirectresponse 인스턴스를 생성하는 데는 몇 가지 방법이 있습니다. 가장 간단한 방법은 redirect 헬퍼 함수를 사용하는 것입니다. 테스트를 진행할 때 리다이렉트 response를 생성하는 모킹(mock)은 일반적으로 잘 하지 않기 때문에, 대부분의 경우에 헬퍼 함수를 사용하게 됩니다.\n\nreturn redirect('user/login');\n\n\n# 리다이렉트에 플래시 데이터와 함께 반환하기\n새로운 url로 리다이렉트 이동하고 플래시 데이터를 세션에 저장 하는 것은 일반적으로 동시에 진행됩니다. 따라서 편의성을 높이기 위해 redirectresponse 인스턴스를 생성하고 동시에 메소드 체인을 통해 플래시 데이터를 세션에 저장할 수 있습니다:\n\nreturn redirect('user/login')->with('message', 'login failed');\n\n\n# 이전 url로 리다이렉트\n예를 들어, 폼 전송 후에, 사용자를 이전 url로 리다이렉트 시키고자 하는 경우가 있을 수 있습니다. 이런 경우에는 back 메소드를 사용하면 됩니다:\n\nreturn redirect()->back();\n\nreturn redirect()->back()->withinput();\n\n\n# 이름이 지정된 라우트로 리다이렉트 하기\n전달 인자 없이 redirect 헬퍼 함수를 호출할 때에는 illuminate\\routing\\redirector의 인스턴스가 반환됩니다. 따라서 redirector 인스턴스의 메소드를 사용할 수 있습니다. 예를 들어, 이름지 지정된 라우트로 이동하는 redirectresponse를 생성하고자 한다면 route 메소드를 사용할 수 있습니다:\n\nreturn redirect()->route('login');\n\n\n# 이름이 지정된 라우트로 파라미터와 함께 리다이렉트 하기\n라우트에 전달해야 할 파라미터가 있다면 route 메소드의 두 번째 인자로 전달하면 됩니다.\n\n// for a route with the following uri: profile/{id}\n\nreturn redirect()->route('profile', [1]);\n\n\n# 이름지 지정된 라우트로 파라미터 이름과 함께 리다이렉트 하기\n// for a route with the following uri: profile/{user}\n\nreturn redirect()->route('profile', ['user' => 1]);\n\n\n# 컨트롤러 액션으로 리다이렉트 하기\n이름이 지정된 라우트로 이동하는 redirectresponse 인스턴스를 생성하는것과 비슷하게 컨트롤러 액션으로 리다이렉션 할 수 있습니다.\n\nreturn redirect()->action('app\\http\\controllers\\homecontroller@index');\n\n\n>  주의: url:setrootcontrollernamespace를 통해서 컨트롤러의 루트 네임스페이스가 지정되었다면, 전체 네임 스페이스를 지정할 필요가 없습니다.\n\n\n# 컨트롤러 액션으로 파라미터와 함께 리다이렉트 하기\nreturn redirect()->action('app\\http\\controllers\\usercontroller@profile', [1]);\n\n\n# 컨트롤러 액션으로 파라미터 이름과 함께 리다이렉트 하기\nreturn redirect()->action('app\\http\\controllers\\usercontroller@profile', ['user' => 1]);\n\n\n# 기타 response\nresponse 헬퍼 함수를 사용하여 편리하게 다른 타입의 response 인스턴스를 생성할 수도 있습니다. response 헬퍼함수를 인자없이 호출하게 되면 illuminate\\contracts\\routing\\responsefactory contract를 반환합니다. 이 contract는 response를 생성하기 위한 다양한 메소드를 제공합니다.\n\n# json response 생성하기\njson 메소드는 헤더의 content-type을 자동으로 application/json으로 지정합니다:\n\nreturn response()->json(['name' => 'abigail', 'state' => 'ca']);\n\n\n# jsonp response 생성하기\nreturn response()->json(['name' => 'abigail', 'state' => 'ca'])\n                 ->setcallback($request->input('callback'));\n\n\n# 파일 다운로드 response 생성하기\nreturn response()->download($pathtofile);\n\nreturn response()->download($pathtofile, $name, $headers);\n\nreturn response()->download($pathtofile)->deletefileaftersend(true);\n\n\n>  참고: 파일 다운로드를 관리하는 symfony의 httpfoundation에서 다운로드 할 파일의 이름이 ascii 파일 이름임을 필요로 하고 있습니다.",charsets:{cjk:!0}},{title:"라우팅",frontmatter:{},regularPath:"/04.%20%EA%B0%9C%EB%B0%9C%EC%9E%90%20%EB%AC%B8%EC%84%9C/route.html",relativePath:"04. 개발자 문서/route.md",key:"v-47441701",path:"/04.%20%EA%B0%9C%EB%B0%9C%EC%9E%90%20%EB%AC%B8%EC%84%9C/route.html",headers:[{level:2,title:"기본적인 라우팅",slug:"기본적인-라우팅",charIndex:99},{level:2,title:"라우트 파라미터",slug:"라우트-파라미터",charIndex:975},{level:2,title:"이름이 지정된 라우트",slug:"이름이-지정된-라우트",charIndex:1680},{level:2,title:"라우트 그룹",slug:"라우트-그룹",charIndex:2322},{level:3,title:"라우트 미들웨어",slug:"라우트-미들웨어",charIndex:2530},{level:3,title:"네임스페이스",slug:"네임스페이스",charIndex:2358},{level:3,title:"라우트 접두어 지정하기",slug:"라우트-접두어-지정하기",charIndex:3439},{level:2,title:"Fixed 라우트",slug:"fixed-라우트",charIndex:4061},{level:2,title:"CSRF 보호하기",slug:"csrf-보호하기",charIndex:4746},{level:2,title:"메소드 Spoofing-속이기",slug:"메소드-spoofing-속이기",charIndex:5341}],headersStr:"기본적인 라우팅 라우트 파라미터 이름이 지정된 라우트 라우트 그룹 라우트 미들웨어 네임스페이스 라우트 접두어 지정하기 Fixed 라우트 CSRF 보호하기 메소드 Spoofing-속이기",content:"# 라우팅\n라우터는 Request의 URI를 판단하여 Request를 처리할 담당 컨트롤러를 찾는 역할을 합니다. 이 장에서는 라우트를 정의하는 방법에 대하여 설명합니다.\n\n# 기본적인 라우팅\n이미 XE에는 매우 많은 라우트가 app/Http/routes.php 파일안에 정의되어 있습니다. 플러그인을 개발할 때에는 각 플러그인 클래스의 boot 메소드에 라우트 정의 코드를 작성하십시오. 플러그인이 boot될 때 라우트가 등록됩니다.\n\n가장 기본적인 라우트는 URI와 Closure 하나로 지정할 수 있습니다.\n\n# 기본적인 라우트\n라우트를 등록할 때에는 Route 파사드를 사용합니다.\n\n// GET Http 메소드로 요청될 경우 'Hello World'를 화면에 출력\nRoute::get('/', function()\n{\n    return 'Hello World';\n});\n\nRoute::post('foo/bar', function()\n{\n    return 'Hello World';\n});\n\nRoute::put('foo/bar', function()\n{\n    //\n});\n\nRoute::delete('foo/bar', function()\n{\n    //\n});\n\n\nClosure 대신 컨트롤러를 사용할 수도 있습니다.\n\nRoute::get('user/profile', 'UserController@showProfile');\n\n\n# 여러 HTTP 메소드에 라우트 등록하기\nRoute::match(['get', 'post'], '/', function()\n{\n    return 'Hello World';\n});\n\n\nany 메소드를 사용하면 모든 http 메소드에 응답하는 라우트를 등록할 수도 있습니다.\n\nRoute::any('foo', function()\n{\n    return 'Hello World';\n});\n\n\n라우트에 등록된 URL을 생성하려면 url 헬퍼함수를 사용하면 됩니다:\n\n$url = url('foo');\n\n\n# 라우트 파라미터\n라우트에서 요청된 URI 세그먼트를 얻을 수 있습니다:\n\n# 기본적인 라우트 파라미터\nRoute::get('user/{id}', function($id)\n{\n    return 'User '.$id;\n});\n\n\n>  주의: 라우트 파라미터는 - 문자를 포함하면 안됩니다. (_)를 사용하십시오.\n\n\n# 선택적인 라우트 파라미터\nRoute::get('user/{name?}', function($name = null)\n{\n    return $name;\n});\n\nRoute::get('user/{name?}', function($name = 'John')\n{\n    return $name;\n});\n\n\nname 파라미터는 옵션입니다. name 파라미터가 URL에 포함되어 있지 않아도 위 라우트가 작동됩니다.\n\n# 정규표현식으로 파라미터 제약하기\nRoute::get('user/{name}', function($name)\n{\n    //\n})\n->where('name', '[A-Za-z]+');\n\n\nRoute::get('user/{id}', function($id)\n{\n    //\n})\n->where('id', '[0-9]+');\n\nRoute::get('user/{id}/{name}', function($id, $name)\n{\n    //\n})\n->where(['id' => '[0-9]+', 'name' => '[a-z]+']);\n\n\n# 이름이 지정된 라우트\n이름이 지정된 라우트는 지정된 라우트에 대한 URL을 생성하거나 Redirect를 할 때 편리함을 제공합니다. as 배열 키를 통해 라우트에 이름을 지정할 수 있습니다.\n\nRoute::get('user/profile', ['as' => 'profile', function()\n{\n    //\n}]);\n\n\n컨트롤러 액션에 대해서도 라우트 이름을 지정할 수 있습니다.\n\nRoute::get('user/profile', [\n    'as' => 'profile', 'uses' => 'UserController@showProfile'\n]);\n\n\n이제 URL을 생성하거나 Redirect를 하는 데 라우트 이름을 사용할 수 있습니다.\n\n$url = route('profile');\n\n$redirect = redirect()->route('profile');\n\n\n라우트가 파라미터를 가지고 있다면, route 함수의 두번째 인자로 파라미터를 전달할 수 있습니다. 주어진 파라미터는 자동으로 URL에 추가됩니다.\n\nRoute::get('user/{id}/profile', ['as' => 'profile', function ($id) {\n    //\n}]);\n\n$url = route('profile', ['id' => 1]);\n\n\n# 라우트 그룹\n때때로 많은 라우트들이 URL 세그먼트, 미들웨어, 네임스페이스 등과 같은 공통의 요구사항을 공유하고자 하는 경우가 있습니다. 이러한 옵션들을 모든 라우트에 개별로 각각 지정하는 대신에 라우트 그룹을 통해서 다수의 라우트에 속성을 지정할 수가 있습니다.\n\n속성값들을 공유하는 것은 Route::group 메소드의 첫 번째 인자로 배열을 지정하면 됩니다.\n\n# 라우트 미들웨어\n라우트 그룹에 지정하는 배열의 middleware 값에 미들웨어의 목록을 정의함으로써 그룹 내의 모든 라우트에 미들웨어가 적용됩니다. 라우트 미들웨어는 배열에 정의된 순서대로 실행될것입니다:\n\n>  주의! 라우트 미들웨어는 Http 커널의 미들웨어와는 다른 별개의 기능입니다.\n\n\nRoute::group(['middleware' => ['foo','bar']], function()\n{\n    Route::get('/', function()\n    {\n        // Has Foo And Bar Middleware\n    });\n\n    Route::get('user/profile', function()\n    {\n        // Has Foo And Bar Middleware\n    });\n});\n\n\n# 네임스페이스\n그룹의 속성 배열에 namespace 파라미터를 사용하여 가룹의 모든 컨트롤러에 네임스페이스를 지정할 수 있습니다:\n\nRoute::group(['namespace' => 'Admin'], function()\n{\n    // Controllers Within The \"App\\Http\\Controllers\\Admin\" Namespace\n\n    Route::group(['namespace' => 'User'], function()\n    {\n        // Controllers Within The \"App\\Http\\Controllers\\Admin\\User\" Namespace\n    });\n});\n\n\n>  참고: 기본적으로 RouteServiceProvider에서 포함하고 있는 routes.php 파일에는 라우트 컨트롤들을 위해서 네임스페이스가 지정되어 있습니다. 따라서 App\\Http\\Controllers의 전체 네임스페이스를 따로 지정할 필요는 없습니다. \n\n\n# 라우트 접두어 지정하기\n라우트 그룹의 접두어(prefix)는 그룹의 속성 배열에 prefix 옵션을 사용하여 지정합니다:\n\nRoute::group(['prefix' => 'admin'], function()\n{\n    Route::get('users', function()\n    {\n        // Matches The \"/admin/users\" URL\n    });\n});\n\n\n또한, prefix 파라미터를 라우트들의 공통 파라미터로 지정할 수 있습니다:\n\n# 라우트 prefix 안에서 URL 파라미터 등록하기\nRoute::group(['prefix' => 'accounts/{account_id}'], function()\n{\n    Route::get('detail', function($account_id)\n    {\n        //\n    });\n});\n\n\n또한, 지정된 파라미터 변수의 제약 사항을 정의할 수도 있습니다:\n\nRoute::group([\n    'prefix' => 'accounts/{account_id}',\n    'where' => ['account_id' => '[0-9]+'],\n], function() {\n\n    // Define Routes Here\n});\n\n\n# Fixed 라우트\n각 플러그인들은 자유롭게 라우트를 추가하여 사용할 수 있습니다. 하지만 서로 다른 플러그인들이 동일한 규칙의 라우트를 등록하면 문제가 발생할 수 있습니다. XE는 플러그인간 라우트의 충돌을 방지하기 위하여 각 플러그인에게 별도의 라우트 공간(url 세그먼트)을 할당합니다.\n\n각 플러그인에게 할당된 라우트 규칙을 사용하려면 Route::fixed 메소드를 사용하십시오.\n\nRoute::fixed(<plugin_id>, function() {\n\n    // Define Routes Here\n    Route::get('/', ...);\n\n});\n\n\nRoute::fixed 메소드의 첫번째 파라미터는 플러그인의 아이디를 지정하면 됩니다. Route::fixed를 사용할 경우, 접두어(prefix)가 /plugin/<plugin_id>으로 자동으로 지정됩니다. 따라서 위의 코드는 아래의 Route::group을 사용한 코드와 동일합니다.\n\nRoute::group(['prefix'=>'plugin/<plugin_id>'], function() {\n\n    // Define Routes Here\n    Route::get('/', ...);\n\n});\n\n\n하지만, 접두어에 자동으로 추가되는 plugin은 사이트 관리자가 설정에서 변경할 수 있는 값이므로 반드시 Route::fixed를 사용하십시오.\n\n# CSRF 보호하기\nXE에서는 크로스 사이트 요청 위조(cross-site request forgeries [http://en.wikipedia.org/wiki/Cross-site_request_forgery])으로부터 응용 프로그램을 쉽게 보호할 수 있습니다. 크로스 사이트 요청 위조는 악의적인 공격의 하나이며 인증받은 사용자를 대신하여 허가 받지 않은 명령을 수행합니다.\n\nXE는 사용자별 CSRF \"토큰\"을 자동으로 생성합니다. 이 토큰은 인증된 사용자가 실제로 XE에 요청을 보내고 있는지 식별하는 데 사용됩니다.\n\n# Form에 CSRF 토큰 삽입하기\n<input type=\"hidden\" name=\"_token\" value=\"<?php echo csrf_token(); ?>\">\n\n\n다음처럼 Blade 템플릿에서 사용할 수 있습니다.\n\n<input type=\"hidden\" name=\"_token\" value=\"{{ csrf_token() }}\">\n\n\n일일이 수동으로 POST, PUT 또는 DELETE 요청에 대한 CSRF 토큰을 확인할 필요가 없습니다. XE가 자동으로 요청중인 토큰을 세션에 저장되어 있는 토큰과 일치하는지 확인할 것입니다.\n\n# 메소드 Spoofing-속이기\nHTML form은 실제로 PUT, PATCH와 DELETE 액션을 지원하지 않습니다. 따라서 PUT, PATCH 이나 DELETE로 지정된 라우트를 호출하는 HTML form을 정의한다면 _method의 숨겨진 필드를 지정해야 합니다.\n\n_method 필드로 보내진 값은 HTTP 요청 메소드를 구분하는 데 사용됩니다. 다음 예를 참조하십시오:\n\n<form action=\"/foo/bar\" method=\"POST\">\n    <input type=\"hidden\" name=\"_method\" value=\"PUT\">\n    <input type=\"hidden\" name=\"_token\" value=\"<?php echo csrf_token(); ?>\">\n</form>",contentLowercase:"# 라우팅\n라우터는 request의 uri를 판단하여 request를 처리할 담당 컨트롤러를 찾는 역할을 합니다. 이 장에서는 라우트를 정의하는 방법에 대하여 설명합니다.\n\n# 기본적인 라우팅\n이미 xe에는 매우 많은 라우트가 app/http/routes.php 파일안에 정의되어 있습니다. 플러그인을 개발할 때에는 각 플러그인 클래스의 boot 메소드에 라우트 정의 코드를 작성하십시오. 플러그인이 boot될 때 라우트가 등록됩니다.\n\n가장 기본적인 라우트는 uri와 closure 하나로 지정할 수 있습니다.\n\n# 기본적인 라우트\n라우트를 등록할 때에는 route 파사드를 사용합니다.\n\n// get http 메소드로 요청될 경우 'hello world'를 화면에 출력\nroute::get('/', function()\n{\n    return 'hello world';\n});\n\nroute::post('foo/bar', function()\n{\n    return 'hello world';\n});\n\nroute::put('foo/bar', function()\n{\n    //\n});\n\nroute::delete('foo/bar', function()\n{\n    //\n});\n\n\nclosure 대신 컨트롤러를 사용할 수도 있습니다.\n\nroute::get('user/profile', 'usercontroller@showprofile');\n\n\n# 여러 http 메소드에 라우트 등록하기\nroute::match(['get', 'post'], '/', function()\n{\n    return 'hello world';\n});\n\n\nany 메소드를 사용하면 모든 http 메소드에 응답하는 라우트를 등록할 수도 있습니다.\n\nroute::any('foo', function()\n{\n    return 'hello world';\n});\n\n\n라우트에 등록된 url을 생성하려면 url 헬퍼함수를 사용하면 됩니다:\n\n$url = url('foo');\n\n\n# 라우트 파라미터\n라우트에서 요청된 uri 세그먼트를 얻을 수 있습니다:\n\n# 기본적인 라우트 파라미터\nroute::get('user/{id}', function($id)\n{\n    return 'user '.$id;\n});\n\n\n>  주의: 라우트 파라미터는 - 문자를 포함하면 안됩니다. (_)를 사용하십시오.\n\n\n# 선택적인 라우트 파라미터\nroute::get('user/{name?}', function($name = null)\n{\n    return $name;\n});\n\nroute::get('user/{name?}', function($name = 'john')\n{\n    return $name;\n});\n\n\nname 파라미터는 옵션입니다. name 파라미터가 url에 포함되어 있지 않아도 위 라우트가 작동됩니다.\n\n# 정규표현식으로 파라미터 제약하기\nroute::get('user/{name}', function($name)\n{\n    //\n})\n->where('name', '[a-za-z]+');\n\n\nroute::get('user/{id}', function($id)\n{\n    //\n})\n->where('id', '[0-9]+');\n\nroute::get('user/{id}/{name}', function($id, $name)\n{\n    //\n})\n->where(['id' => '[0-9]+', 'name' => '[a-z]+']);\n\n\n# 이름이 지정된 라우트\n이름이 지정된 라우트는 지정된 라우트에 대한 url을 생성하거나 redirect를 할 때 편리함을 제공합니다. as 배열 키를 통해 라우트에 이름을 지정할 수 있습니다.\n\nroute::get('user/profile', ['as' => 'profile', function()\n{\n    //\n}]);\n\n\n컨트롤러 액션에 대해서도 라우트 이름을 지정할 수 있습니다.\n\nroute::get('user/profile', [\n    'as' => 'profile', 'uses' => 'usercontroller@showprofile'\n]);\n\n\n이제 url을 생성하거나 redirect를 하는 데 라우트 이름을 사용할 수 있습니다.\n\n$url = route('profile');\n\n$redirect = redirect()->route('profile');\n\n\n라우트가 파라미터를 가지고 있다면, route 함수의 두번째 인자로 파라미터를 전달할 수 있습니다. 주어진 파라미터는 자동으로 url에 추가됩니다.\n\nroute::get('user/{id}/profile', ['as' => 'profile', function ($id) {\n    //\n}]);\n\n$url = route('profile', ['id' => 1]);\n\n\n# 라우트 그룹\n때때로 많은 라우트들이 url 세그먼트, 미들웨어, 네임스페이스 등과 같은 공통의 요구사항을 공유하고자 하는 경우가 있습니다. 이러한 옵션들을 모든 라우트에 개별로 각각 지정하는 대신에 라우트 그룹을 통해서 다수의 라우트에 속성을 지정할 수가 있습니다.\n\n속성값들을 공유하는 것은 route::group 메소드의 첫 번째 인자로 배열을 지정하면 됩니다.\n\n# 라우트 미들웨어\n라우트 그룹에 지정하는 배열의 middleware 값에 미들웨어의 목록을 정의함으로써 그룹 내의 모든 라우트에 미들웨어가 적용됩니다. 라우트 미들웨어는 배열에 정의된 순서대로 실행될것입니다:\n\n>  주의! 라우트 미들웨어는 http 커널의 미들웨어와는 다른 별개의 기능입니다.\n\n\nroute::group(['middleware' => ['foo','bar']], function()\n{\n    route::get('/', function()\n    {\n        // has foo and bar middleware\n    });\n\n    route::get('user/profile', function()\n    {\n        // has foo and bar middleware\n    });\n});\n\n\n# 네임스페이스\n그룹의 속성 배열에 namespace 파라미터를 사용하여 가룹의 모든 컨트롤러에 네임스페이스를 지정할 수 있습니다:\n\nroute::group(['namespace' => 'admin'], function()\n{\n    // controllers within the \"app\\http\\controllers\\admin\" namespace\n\n    route::group(['namespace' => 'user'], function()\n    {\n        // controllers within the \"app\\http\\controllers\\admin\\user\" namespace\n    });\n});\n\n\n>  참고: 기본적으로 routeserviceprovider에서 포함하고 있는 routes.php 파일에는 라우트 컨트롤들을 위해서 네임스페이스가 지정되어 있습니다. 따라서 app\\http\\controllers의 전체 네임스페이스를 따로 지정할 필요는 없습니다. \n\n\n# 라우트 접두어 지정하기\n라우트 그룹의 접두어(prefix)는 그룹의 속성 배열에 prefix 옵션을 사용하여 지정합니다:\n\nroute::group(['prefix' => 'admin'], function()\n{\n    route::get('users', function()\n    {\n        // matches the \"/admin/users\" url\n    });\n});\n\n\n또한, prefix 파라미터를 라우트들의 공통 파라미터로 지정할 수 있습니다:\n\n# 라우트 prefix 안에서 url 파라미터 등록하기\nroute::group(['prefix' => 'accounts/{account_id}'], function()\n{\n    route::get('detail', function($account_id)\n    {\n        //\n    });\n});\n\n\n또한, 지정된 파라미터 변수의 제약 사항을 정의할 수도 있습니다:\n\nroute::group([\n    'prefix' => 'accounts/{account_id}',\n    'where' => ['account_id' => '[0-9]+'],\n], function() {\n\n    // define routes here\n});\n\n\n# fixed 라우트\n각 플러그인들은 자유롭게 라우트를 추가하여 사용할 수 있습니다. 하지만 서로 다른 플러그인들이 동일한 규칙의 라우트를 등록하면 문제가 발생할 수 있습니다. xe는 플러그인간 라우트의 충돌을 방지하기 위하여 각 플러그인에게 별도의 라우트 공간(url 세그먼트)을 할당합니다.\n\n각 플러그인에게 할당된 라우트 규칙을 사용하려면 route::fixed 메소드를 사용하십시오.\n\nroute::fixed(<plugin_id>, function() {\n\n    // define routes here\n    route::get('/', ...);\n\n});\n\n\nroute::fixed 메소드의 첫번째 파라미터는 플러그인의 아이디를 지정하면 됩니다. route::fixed를 사용할 경우, 접두어(prefix)가 /plugin/<plugin_id>으로 자동으로 지정됩니다. 따라서 위의 코드는 아래의 route::group을 사용한 코드와 동일합니다.\n\nroute::group(['prefix'=>'plugin/<plugin_id>'], function() {\n\n    // define routes here\n    route::get('/', ...);\n\n});\n\n\n하지만, 접두어에 자동으로 추가되는 plugin은 사이트 관리자가 설정에서 변경할 수 있는 값이므로 반드시 route::fixed를 사용하십시오.\n\n# csrf 보호하기\nxe에서는 크로스 사이트 요청 위조(cross-site request forgeries [http://en.wikipedia.org/wiki/cross-site_request_forgery])으로부터 응용 프로그램을 쉽게 보호할 수 있습니다. 크로스 사이트 요청 위조는 악의적인 공격의 하나이며 인증받은 사용자를 대신하여 허가 받지 않은 명령을 수행합니다.\n\nxe는 사용자별 csrf \"토큰\"을 자동으로 생성합니다. 이 토큰은 인증된 사용자가 실제로 xe에 요청을 보내고 있는지 식별하는 데 사용됩니다.\n\n# form에 csrf 토큰 삽입하기\n<input type=\"hidden\" name=\"_token\" value=\"<?php echo csrf_token(); ?>\">\n\n\n다음처럼 blade 템플릿에서 사용할 수 있습니다.\n\n<input type=\"hidden\" name=\"_token\" value=\"{{ csrf_token() }}\">\n\n\n일일이 수동으로 post, put 또는 delete 요청에 대한 csrf 토큰을 확인할 필요가 없습니다. xe가 자동으로 요청중인 토큰을 세션에 저장되어 있는 토큰과 일치하는지 확인할 것입니다.\n\n# 메소드 spoofing-속이기\nhtml form은 실제로 put, patch와 delete 액션을 지원하지 않습니다. 따라서 put, patch 이나 delete로 지정된 라우트를 호출하는 html form을 정의한다면 _method의 숨겨진 필드를 지정해야 합니다.\n\n_method 필드로 보내진 값은 http 요청 메소드를 구분하는 데 사용됩니다. 다음 예를 참조하십시오:\n\n<form action=\"/foo/bar\" method=\"post\">\n    <input type=\"hidden\" name=\"_method\" value=\"put\">\n    <input type=\"hidden\" name=\"_token\" value=\"<?php echo csrf_token(); ?>\">\n</form>",charsets:{cjk:!0}},{title:"서비스",frontmatter:{},regularPath:"/04.%20%EA%B0%9C%EB%B0%9C%EC%9E%90%20%EB%AC%B8%EC%84%9C/service.html",relativePath:"04. 개발자 문서/service.md",key:"v-c4b477ae",path:"/04.%20%EA%B0%9C%EB%B0%9C%EC%9E%90%20%EB%AC%B8%EC%84%9C/service.html",headers:[{level:2,title:"소개",slug:"소개",charIndex:8},{level:2,title:"서비스 로드하기",slug:"서비스-로드하기",charIndex:1156},{level:3,title:"파사드를 사용하여 로드하기",slug:"파사드를-사용하여-로드하기",charIndex:1167},{level:3,title:"서비스 컨테이너를 사용하여 로드하기",slug:"서비스-컨테이너를-사용하여-로드하기",charIndex:1481}],headersStr:"소개 서비스 로드하기 파사드를 사용하여 로드하기 서비스 컨테이너를 사용하여 로드하기",content:"# 서비스\n# 소개\nXE가 앞서 설명한 라이프사이클에 따라 요청을 처리하고 응답하는 과정을 수행하는 동안, 우리는 매우 다양한 작업을 실행해야 합니다. 때로는 데이터베이스에서 자료를 검색하거나 자료를 저장하기도 하고, 이메일을 전송하거나 세션이나 쿠키를 다뤄야 할 때도 있습니다. 개발자들이 이런 작업을 수행하는 코드를 모두 직접 구현한다면 매우 힘든 개발이 될 것입니다.\n\nXE는 개발자들이 원하는 기능을 쉽게 구현할 수 있도록 많은 서비스를 제공합니다. 아래 목록은 라라벨이 기본으로 제공하는 프레임워크 레벨의 주요 서비스 목록입니다.\n\n * Auth\n * Cache\n * Config\n * Console\n * Container\n * Cookie\n * DB\n * Encryption\n * Events\n * Filesystem\n * Hashing\n * Log\n * Mail\n * Pagination\n * Queue\n * Redis\n * Routing\n * Session\n * Translator\n * Templory\n * Route\n * Module\n * Validation\n * View\n\nXE는 라라벨이 제공하는 위 서비스 이외에도 문서(document), 파일(storage), 회원(user) 관리와 같은 CMS 어플리케이션 레벨의 서비스를 많이 제공합니다. XE에서 제공하는 서비스은 아래 목록과 같습니다.\n\n * Captcha\n * Category\n * Config\n * Counter\n * Database\n * Document\n * DynamicField\n * Editor\n * Frontend\n * Interception\n * Keygen\n * Media\n * Menu\n * Module\n * Permission\n * Plugin\n * Presenter\n * Register\n * Routing\n * Seo\n * Settings\n * Site\n * Skin\n * Storage\n * Tag\n * Temporary\n * Theme\n * ToggleMenu\n * Translation\n * Trash\n * UIObject\n * User\n * Widget\n\n각각의 서비스가 제공하는 기능과 용도를 충분히 알고 있다면 훨씬 편하게 플러그인을 개발할 수 있습니다. 본 매뉴얼의 서비스 카테고리에서 각 서비스의 기능과 사용법을 자세히 안내하고 있습니다.\n\n# 서비스 로드하기\n# 파사드를 사용하여 로드하기\n내 코드에서 필요한 서비스를 로드하는 방법으로 XE는 파사드를 제공합니다. 파사드는 어떤 서비스를 대신하는 프록시 역할하며, Static 클래스 형식으로 사용할 수 있습니다.\n\n// User 서비스 사용\n$user = \\XeUser::find($userId);\n\n\n위 예제에서 XeUser는 파사드입니다. 이 파사드를 통해 User 서비스를 사용할 수 있습니다. 위 코드와 같이 파사드의 find 메소드를 호출하면 실제로는 \\Xpressengine\\User\\UserHandler 클래스의 인스턴스의 find 메소드가 호출됩니다.\n\n# 서비스 컨테이너를 사용하여 로드하기\n파사드를 사용하는 대신, 서비스 컨테이너로부터 직접 서비스를 로드할 수 있습니다. XE에서 제공하는 모든 서비스는 '서비스 컨테이너'에 등록됩니다. 내 코드에서 어떤 서비스를 로드해야할 때, 서비스 컨테이너에게 그 서비스를 달라고 요청하면, 서비스 컨테이너는 요청받은 서비스를 반환해 줍니다. 보통 app() 함수나 App 파사드를 사용하여 서비스 컨테이너로부터 필요한 서비스를 로드합니다.\n\n// User 서비스 로드\n$userHandler = app('xe.user');\n\n// or\n$userHandler = \\App::make('xe.user');\n\n// User 서비스 사용\n$user = $userHandler->find($userId);\n\n\n보통 서비스는 특정 클래스의 싱글톤 인스턴스입니다. 그 클래스는 개발자가 서비스를 이용할 때 편하게 사용할 수 있는 메소드(인터페이스)를 가지고 있습니다.\n\n사실, 서비스 컨테이너는 서비스 관리에 국한된 역할을 하는 것은 아닙니다. 정확히 말하면, 서비스 컨테이너는 다양한 클래스의 의존성을 관리하는 강력한 도구 입니다. 서비스 컨테이너에 대하여 더 알고싶다면, 이 문서 [https://laravel.kr/docs/5.8/container]를 참고하세요.",contentLowercase:"# 서비스\n# 소개\nxe가 앞서 설명한 라이프사이클에 따라 요청을 처리하고 응답하는 과정을 수행하는 동안, 우리는 매우 다양한 작업을 실행해야 합니다. 때로는 데이터베이스에서 자료를 검색하거나 자료를 저장하기도 하고, 이메일을 전송하거나 세션이나 쿠키를 다뤄야 할 때도 있습니다. 개발자들이 이런 작업을 수행하는 코드를 모두 직접 구현한다면 매우 힘든 개발이 될 것입니다.\n\nxe는 개발자들이 원하는 기능을 쉽게 구현할 수 있도록 많은 서비스를 제공합니다. 아래 목록은 라라벨이 기본으로 제공하는 프레임워크 레벨의 주요 서비스 목록입니다.\n\n * auth\n * cache\n * config\n * console\n * container\n * cookie\n * db\n * encryption\n * events\n * filesystem\n * hashing\n * log\n * mail\n * pagination\n * queue\n * redis\n * routing\n * session\n * translator\n * templory\n * route\n * module\n * validation\n * view\n\nxe는 라라벨이 제공하는 위 서비스 이외에도 문서(document), 파일(storage), 회원(user) 관리와 같은 cms 어플리케이션 레벨의 서비스를 많이 제공합니다. xe에서 제공하는 서비스은 아래 목록과 같습니다.\n\n * captcha\n * category\n * config\n * counter\n * database\n * document\n * dynamicfield\n * editor\n * frontend\n * interception\n * keygen\n * media\n * menu\n * module\n * permission\n * plugin\n * presenter\n * register\n * routing\n * seo\n * settings\n * site\n * skin\n * storage\n * tag\n * temporary\n * theme\n * togglemenu\n * translation\n * trash\n * uiobject\n * user\n * widget\n\n각각의 서비스가 제공하는 기능과 용도를 충분히 알고 있다면 훨씬 편하게 플러그인을 개발할 수 있습니다. 본 매뉴얼의 서비스 카테고리에서 각 서비스의 기능과 사용법을 자세히 안내하고 있습니다.\n\n# 서비스 로드하기\n# 파사드를 사용하여 로드하기\n내 코드에서 필요한 서비스를 로드하는 방법으로 xe는 파사드를 제공합니다. 파사드는 어떤 서비스를 대신하는 프록시 역할하며, static 클래스 형식으로 사용할 수 있습니다.\n\n// user 서비스 사용\n$user = \\xeuser::find($userid);\n\n\n위 예제에서 xeuser는 파사드입니다. 이 파사드를 통해 user 서비스를 사용할 수 있습니다. 위 코드와 같이 파사드의 find 메소드를 호출하면 실제로는 \\xpressengine\\user\\userhandler 클래스의 인스턴스의 find 메소드가 호출됩니다.\n\n# 서비스 컨테이너를 사용하여 로드하기\n파사드를 사용하는 대신, 서비스 컨테이너로부터 직접 서비스를 로드할 수 있습니다. xe에서 제공하는 모든 서비스는 '서비스 컨테이너'에 등록됩니다. 내 코드에서 어떤 서비스를 로드해야할 때, 서비스 컨테이너에게 그 서비스를 달라고 요청하면, 서비스 컨테이너는 요청받은 서비스를 반환해 줍니다. 보통 app() 함수나 app 파사드를 사용하여 서비스 컨테이너로부터 필요한 서비스를 로드합니다.\n\n// user 서비스 로드\n$userhandler = app('xe.user');\n\n// or\n$userhandler = \\app::make('xe.user');\n\n// user 서비스 사용\n$user = $userhandler->find($userid);\n\n\n보통 서비스는 특정 클래스의 싱글톤 인스턴스입니다. 그 클래스는 개발자가 서비스를 이용할 때 편하게 사용할 수 있는 메소드(인터페이스)를 가지고 있습니다.\n\n사실, 서비스 컨테이너는 서비스 관리에 국한된 역할을 하는 것은 아닙니다. 정확히 말하면, 서비스 컨테이너는 다양한 클래스의 의존성을 관리하는 강력한 도구 입니다. 서비스 컨테이너에 대하여 더 알고싶다면, 이 문서 [https://laravel.kr/docs/5.8/container]를 참고하세요.",charsets:{cjk:!0}},{title:"템플릿",frontmatter:{},regularPath:"/04.%20%EA%B0%9C%EB%B0%9C%EC%9E%90%20%EB%AC%B8%EC%84%9C/template-blade.html",relativePath:"04. 개발자 문서/template-blade.md",key:"v-8e55b9c6",path:"/04.%20%EA%B0%9C%EB%B0%9C%EC%9E%90%20%EB%AC%B8%EC%84%9C/template-blade.html",headers:[{level:2,title:"소개",slug:"소개",charIndex:8},{level:2,title:"템플릿의 상속",slug:"템플릿의-상속",charIndex:262},{level:3,title:"레이아웃 정의하기",slug:"레이아웃-정의하기",charIndex:272},{level:3,title:"레이아웃 확장하기",slug:"레이아웃-확장하기",charIndex:1012},{level:2,title:"데이터 출력하기",slug:"데이터-출력하기",charIndex:1770},{level:2,title:"제어문",slug:"제어문",charIndex:3151},{level:2,title:"서비스 주입하기",slug:"서비스-주입하기",charIndex:5041}],headersStr:"소개 템플릿의 상속 레이아웃 정의하기 레이아웃 확장하기 데이터 출력하기 제어문 서비스 주입하기",content:"# 템플릿\n# 소개\nXE에서 제공하고 있는 블레이드는 간결하고 강력한 템플릿 엔진입니다. 다른 인기있는 PHP 템플릿 엔진들과는 다르게, 블레이드는 여러분이 순수한 PHP 코드를 뷰에 사용하는 것을 제한하지 않습니다. 모든 블레이드 뷰는 순수한 PHP 코드로 컴파일된 후 캐싱되고, 파일이 수정되지 않을 때까지 캐싱된 파일을 사용합니다. 이는 블레이드가 본질적으로 성능상의 부담이 없음을 의미합니다. 블레이드 뷰 파일은 확장자로 .blade.php를 사용합니다.\n\n# 템플릿의 상속\n# 레이아웃 정의하기\n블레이드를 사용할 때의 주된 장점 두가지는 _템플릿 상속_과 _섹션_입니다. 시작하기 전에 간단한 예제를 살펴보겠습니다. 첫번째로, 우리는 \"master\" 페이지 레이아웃을 보겠습니다. 대부분의 웹사이트는 여러 페이지에 걸쳐 동일한 레이아웃을 사용하기 때문에, 이 레이아웃을 하나의 블레이드 뷰로 정의하는 것이 편합니다.\n\n\x3c!-- Stored in resources/views/layouts/master.blade.php --\x3e\n\n<html>\n    <head>\n        <title>App Name - @yield('title')</title>\n    </head>\n    <body>\n        @section('sidebar')\n            This is the master sidebar.\n        @show\n\n        <div class=\"container\">\n            @yield('content')\n        </div>\n    </body>\n</html>\n\n\n보는 바와 같이, 이 파일은 일반적인 HTML 마크업을 가지고 있습니다. 그런데 @section 과 @yield 지시어에 주목해 주십시오. @section 지시어는 이름에서도 알 수 있듯이 컨텐츠의 섹션을 정의하고 있고. 반대로 @yield 지시어는 주어진 섹션의 컨텐츠를 출력하고 있습니다.\n\n이제 레이아웃은 정의했고, 이 레이아웃을 상속받을 자식 페이지를 정의해 보겠습니다.\n\n# 레이아웃 확장하기\n자식페이지를 정의할 때, @extends 지시어를 사용하여 자식 페이지에서 \"상속\"받을 레이아웃을 지정할 수 있습니다. 레이아웃을 상속(@extends)받는 뷰들은 @section 지시어를 사용해서 그 레이아웃의 섹션에 들어갈 컨텐츠를 주입해야 합니다. 앞의 예에서 보았듯이, 자식 페이지에서 주입한 섹션의 컨텐츠는 레이아웃의 @yield 부분에 출력될 것입니다.\n\n\x3c!-- Stored in resources/views/child.blade.php --\x3e\n\n@extends('layouts.master')\n\n@section('title', 'Page Title')\n\n@section('sidebar')\n    @@parent\n\n    <p>This is appended to the master sidebar.</p>\n@endsection\n\n@section('content')\n    <p>This is my body content.</p>\n@endsection\n\n\n위의 예에서, sidebar 섹션은 레이아웃의 사이드바에 컨텐츠를 붙이기 위해 @@parent 지시어를 사용하고 있습니다. @@parent 지시어는 뷰가 렌더링 될 때, 그 레이아웃의 sidebar 섹션이 가지고 있는 컨텐츠로 대체될 것입니다.\n\n블레이드 템플릿은 순수한 PHP 뷰와 마찬가지로 view 헬퍼를 사용하여 곧바로 반환될 수 있습니다.\n\nRoute::get('blade', function () {    return view('child');});\n\n\n# 데이터 출력하기\n중괄호(culry brace)로 변수를 감싸면, 블레이드 뷰로 전달된 데이터를 출력할 수 있습니다. 예를 들어, 주어진 라우트가 있을 때:\n\nRoute::get('greeting', function () {\n    return view('welcome', ['name' => 'Samantha']);\n});\n\n\nname 변수의 값을 다음과 같이 출력할 수 있습니다:\n\nHello, {{ $name }}.\n\n\n뷰로 전달된 변수들의 값을 출력하는 것에 별다른 제한은 없습니다. PHP 함수의 결과 값을 출력할 수도 있습니다. 블레이드의 데이터 출력 구문 안에는 어떤 PHP 코드도 들어갈 수 있습니다.\n\nThe current UNIX timestamp is {{ time() }}.\n\n\n>  주의: {{ $foo }} 구문은 자동으로 PHP의 htmlentities 함수로 감싼 후 출력합니다. XSS 공격을 방어하기 위함입니다.\n\n\n# 블레이드 & 자바스크립트 프레임워크\n많은 자바스크립트 프레임웍에서도 브라우저에 출력되어야 할 데이터를 표시하기 위해 중괄호(\"curly\" braces)를 사용하고 있습니다. 이럴 경우, @ 기호를 사용하면 블레이드 랜더링 엔진은 이 구문을 변환하지 않고 그대로 출력할 것입니다. 예를 들어:\n\n<h1>Laravel</h1>​Hello, @{{ name }}.\n\n\n위의 예에서 @ 기호는 블레이드에 의해서 제거될 것이고, 나머지 {{ name }} 구문은 블레이드 엔진에 의해 해석되지 않고 그대로 남아있게 되어, 자바스크립트 프레임워크에 의해 변환되어 집니다.\n\n# 데이터가 존재하는지 확인후 출력하기\n가끔 변수를 출력할 때, 그 변수가 실제로 존재하는지 확신하지 못할 때도 있습니다. 이때 다음과 같이 PHP 코드를 사용할 수 있습니다.\n\n{{ isset($name) ? $name : 'Default' }}\n\n\n이렇게 3항연산자를 사용하는 대신, 블레이드는 다음과 같은 편리한 구문을 제공합니다:\n\n{{ $name or 'Default' }}\n\n\n위의 예에서, 만약 $name 변수가 존재하면 그 값이 출력될 것이고, 존재하지 않는다면 대신 Default라는 문자가 출력될 것입니다.\n\n# 이스케이프하지 않고 데이터 출력하기\n기본적으로, {{ }} 구문은 XSS 공격을 방어하기 위해 자동으로 PHP의 htmlentities 함수를 실행후 반환합니다. 만약 데이터를 htmlentities 함수를 거치지 않은채 출력하고 싶다면, 다음과 같은 구문을 사용하십시오.\n\nHello, {!! $name !!}.\n\n\n>  주의: 사용자로부터 입력 된 내용을 표시 할 때에는 escape에 대한 매우 세심한 주의가 필요합니다. 컨텐츠의 HTML 엔티티를 escape 하기위해 항상 이중 중괄호 표기법을 사용하십시오.\n\n\n# 제어문\n블레이드는 템플릿 상속 및 데이터 출력과 더불어, 조건문이나 반복문과 같이 일반적인 PHP 제어문의 실행을 위해 편리하고 간결한 구문을 제공합니다. 이 구문들은 매우 깔끔하고 간단하면서도, 대응되는 PHP 제어문들과 비슷한 모습을 띄고 있습니다.\n\n# If문\nif 문은 @if, @elseif, @else와 @endif 지시어를 사용하여 구성할 수 있습니다. 이 지시어들은 각각 대응되는 PHP 구문과 동일하게 작동합니다.\n\n@if (count($records) === 1)\n    I have one record!\n@elseif (count($records) > 1)\n    I have multiple records!\n@else\n    I don't have any records!\n@endif\n\n\n편의성을 위해, 블레이드는 @unless 지시어를 제공합니다.\n\n@unless (Auth::check())    You are not signed in.@endunless\n\n\n# 반복문\n조건문과 더불어, 블레이드는 PHP가 지원하는 반복문 기능을 하는 간단한 지시어를 제공합니다. 다시 한번 말하지만, 각각의 지시어들은 대응하는 PHP 구문과 동일한 기능을 합니다.\n\n@for ($i = 0; $i < 10; $i++)\n    The current value is {{ $i }}\n@endfor\n\n@foreach ($users as $user)\n    <p>This is user {{ $user->id }}</p>\n@endforeach\n\n@forelse ($users as $user)\n    <li>{{ $user->name }}</li>\n@empty\n    <p>No users</p>\n@endforelse\n\n@while (true)\n    <p>I'm looping forever.</p>\n@endwhile\n\n\n# 서브 뷰 포함하기\n@include 지시어는 손쉽게 블레이드 뷰를 현재의 뷰에 포함(include)시킬수 있도록 도와줍니다. 부모 뷰에서 사용할 수 있는 모든 변수는 포함된 서브 뷰에서도 사용할 수 있습니다.\n\n<div>\n    @include('shared.errors')\n\n    <form>\n        \x3c!-- Form Contents --\x3e\n    </form>\n</div>\n\n\n서브 뷰는 부모 뷰의 모든 데이터를 상속받겠지만, 그 외에 더 많은 데이터를 배열 형식으로 전달할 수 있습니다.\n\n@include('view.name', ['some' => 'data'])\n\n\n>  주의: 블레이드 뷰 안에서 __DIR__과 __FILE__과 같은 상수를 사용하지 마십시오. 블레이드 뷰는 캐싱된 뷰의 위치를 참조하기 때문입니다.\n\n\n# 컬렉션을 뷰에서 렌더링하기\n블레이드의 @each 지시어를 사용하면 반복문(loop)과 include 구문을 한 줄로 합칠 수 있습니다.\n\n@each('view.name', $jobs, 'job')\n\n\n첫번째 인자는 배열이나 컬렉션의 각 요소를 렌더링하기 위한 서브 뷰의 이름입니다. 두번째 인자는 반복 처리하는 배열이나 컬렉션이며 세번째 인수는 뷰에서의 반복값이 대입되는 변수의 이름입니다. 예를 들어 jobs 배열을 반복 처리하려면 보통 서브 뷰에서 각 과제를 job 변수로 접근해야 할 것입니다.\n\n또한 @each 지시어로 네번째 인수를 전달할 수도 있습니다. 이 인자는 특정 배열이 비었을 경우 렌더링될 뷰를 결정합니다.\n\n@each('view.name', $jobs, 'job', 'view.empty')\n\n\n# 주석\n블레이드는 또한 뷰에 주석을 정의할 수 있습니다. 하지만 HTML 주석과는 다르게, 블레이드 주석은 브라우저로 전송되는 HTML에 포함되어 있지 않습니다:\n\n{{-- This comment will not be present in the rendered HTML --}}\n\n\n# 서비스 주입하기\n@inject 지시어는 서비스 컨테이너로부터 서비스를 조회하는 데에 사용될 수 있습니다. @inject에 전달된 첫번째 인자는 서비스가 할당될 변수의 이름이며 두번째 인자는 주입하려는 서비스의 클래스/인터페이스의 이름입니다:\n\n@inject('metrics', 'App\\Services\\MetricsService')​<div>    Monthly Revenue: {{ $metrics->monthlyRevenue() }}.</div>",contentLowercase:"# 템플릿\n# 소개\nxe에서 제공하고 있는 블레이드는 간결하고 강력한 템플릿 엔진입니다. 다른 인기있는 php 템플릿 엔진들과는 다르게, 블레이드는 여러분이 순수한 php 코드를 뷰에 사용하는 것을 제한하지 않습니다. 모든 블레이드 뷰는 순수한 php 코드로 컴파일된 후 캐싱되고, 파일이 수정되지 않을 때까지 캐싱된 파일을 사용합니다. 이는 블레이드가 본질적으로 성능상의 부담이 없음을 의미합니다. 블레이드 뷰 파일은 확장자로 .blade.php를 사용합니다.\n\n# 템플릿의 상속\n# 레이아웃 정의하기\n블레이드를 사용할 때의 주된 장점 두가지는 _템플릿 상속_과 _섹션_입니다. 시작하기 전에 간단한 예제를 살펴보겠습니다. 첫번째로, 우리는 \"master\" 페이지 레이아웃을 보겠습니다. 대부분의 웹사이트는 여러 페이지에 걸쳐 동일한 레이아웃을 사용하기 때문에, 이 레이아웃을 하나의 블레이드 뷰로 정의하는 것이 편합니다.\n\n\x3c!-- stored in resources/views/layouts/master.blade.php --\x3e\n\n<html>\n    <head>\n        <title>app name - @yield('title')</title>\n    </head>\n    <body>\n        @section('sidebar')\n            this is the master sidebar.\n        @show\n\n        <div class=\"container\">\n            @yield('content')\n        </div>\n    </body>\n</html>\n\n\n보는 바와 같이, 이 파일은 일반적인 html 마크업을 가지고 있습니다. 그런데 @section 과 @yield 지시어에 주목해 주십시오. @section 지시어는 이름에서도 알 수 있듯이 컨텐츠의 섹션을 정의하고 있고. 반대로 @yield 지시어는 주어진 섹션의 컨텐츠를 출력하고 있습니다.\n\n이제 레이아웃은 정의했고, 이 레이아웃을 상속받을 자식 페이지를 정의해 보겠습니다.\n\n# 레이아웃 확장하기\n자식페이지를 정의할 때, @extends 지시어를 사용하여 자식 페이지에서 \"상속\"받을 레이아웃을 지정할 수 있습니다. 레이아웃을 상속(@extends)받는 뷰들은 @section 지시어를 사용해서 그 레이아웃의 섹션에 들어갈 컨텐츠를 주입해야 합니다. 앞의 예에서 보았듯이, 자식 페이지에서 주입한 섹션의 컨텐츠는 레이아웃의 @yield 부분에 출력될 것입니다.\n\n\x3c!-- stored in resources/views/child.blade.php --\x3e\n\n@extends('layouts.master')\n\n@section('title', 'page title')\n\n@section('sidebar')\n    @@parent\n\n    <p>this is appended to the master sidebar.</p>\n@endsection\n\n@section('content')\n    <p>this is my body content.</p>\n@endsection\n\n\n위의 예에서, sidebar 섹션은 레이아웃의 사이드바에 컨텐츠를 붙이기 위해 @@parent 지시어를 사용하고 있습니다. @@parent 지시어는 뷰가 렌더링 될 때, 그 레이아웃의 sidebar 섹션이 가지고 있는 컨텐츠로 대체될 것입니다.\n\n블레이드 템플릿은 순수한 php 뷰와 마찬가지로 view 헬퍼를 사용하여 곧바로 반환될 수 있습니다.\n\nroute::get('blade', function () {    return view('child');});\n\n\n# 데이터 출력하기\n중괄호(culry brace)로 변수를 감싸면, 블레이드 뷰로 전달된 데이터를 출력할 수 있습니다. 예를 들어, 주어진 라우트가 있을 때:\n\nroute::get('greeting', function () {\n    return view('welcome', ['name' => 'samantha']);\n});\n\n\nname 변수의 값을 다음과 같이 출력할 수 있습니다:\n\nhello, {{ $name }}.\n\n\n뷰로 전달된 변수들의 값을 출력하는 것에 별다른 제한은 없습니다. php 함수의 결과 값을 출력할 수도 있습니다. 블레이드의 데이터 출력 구문 안에는 어떤 php 코드도 들어갈 수 있습니다.\n\nthe current unix timestamp is {{ time() }}.\n\n\n>  주의: {{ $foo }} 구문은 자동으로 php의 htmlentities 함수로 감싼 후 출력합니다. xss 공격을 방어하기 위함입니다.\n\n\n# 블레이드 & 자바스크립트 프레임워크\n많은 자바스크립트 프레임웍에서도 브라우저에 출력되어야 할 데이터를 표시하기 위해 중괄호(\"curly\" braces)를 사용하고 있습니다. 이럴 경우, @ 기호를 사용하면 블레이드 랜더링 엔진은 이 구문을 변환하지 않고 그대로 출력할 것입니다. 예를 들어:\n\n<h1>laravel</h1>​hello, @{{ name }}.\n\n\n위의 예에서 @ 기호는 블레이드에 의해서 제거될 것이고, 나머지 {{ name }} 구문은 블레이드 엔진에 의해 해석되지 않고 그대로 남아있게 되어, 자바스크립트 프레임워크에 의해 변환되어 집니다.\n\n# 데이터가 존재하는지 확인후 출력하기\n가끔 변수를 출력할 때, 그 변수가 실제로 존재하는지 확신하지 못할 때도 있습니다. 이때 다음과 같이 php 코드를 사용할 수 있습니다.\n\n{{ isset($name) ? $name : 'default' }}\n\n\n이렇게 3항연산자를 사용하는 대신, 블레이드는 다음과 같은 편리한 구문을 제공합니다:\n\n{{ $name or 'default' }}\n\n\n위의 예에서, 만약 $name 변수가 존재하면 그 값이 출력될 것이고, 존재하지 않는다면 대신 default라는 문자가 출력될 것입니다.\n\n# 이스케이프하지 않고 데이터 출력하기\n기본적으로, {{ }} 구문은 xss 공격을 방어하기 위해 자동으로 php의 htmlentities 함수를 실행후 반환합니다. 만약 데이터를 htmlentities 함수를 거치지 않은채 출력하고 싶다면, 다음과 같은 구문을 사용하십시오.\n\nhello, {!! $name !!}.\n\n\n>  주의: 사용자로부터 입력 된 내용을 표시 할 때에는 escape에 대한 매우 세심한 주의가 필요합니다. 컨텐츠의 html 엔티티를 escape 하기위해 항상 이중 중괄호 표기법을 사용하십시오.\n\n\n# 제어문\n블레이드는 템플릿 상속 및 데이터 출력과 더불어, 조건문이나 반복문과 같이 일반적인 php 제어문의 실행을 위해 편리하고 간결한 구문을 제공합니다. 이 구문들은 매우 깔끔하고 간단하면서도, 대응되는 php 제어문들과 비슷한 모습을 띄고 있습니다.\n\n# if문\nif 문은 @if, @elseif, @else와 @endif 지시어를 사용하여 구성할 수 있습니다. 이 지시어들은 각각 대응되는 php 구문과 동일하게 작동합니다.\n\n@if (count($records) === 1)\n    i have one record!\n@elseif (count($records) > 1)\n    i have multiple records!\n@else\n    i don't have any records!\n@endif\n\n\n편의성을 위해, 블레이드는 @unless 지시어를 제공합니다.\n\n@unless (auth::check())    you are not signed in.@endunless\n\n\n# 반복문\n조건문과 더불어, 블레이드는 php가 지원하는 반복문 기능을 하는 간단한 지시어를 제공합니다. 다시 한번 말하지만, 각각의 지시어들은 대응하는 php 구문과 동일한 기능을 합니다.\n\n@for ($i = 0; $i < 10; $i++)\n    the current value is {{ $i }}\n@endfor\n\n@foreach ($users as $user)\n    <p>this is user {{ $user->id }}</p>\n@endforeach\n\n@forelse ($users as $user)\n    <li>{{ $user->name }}</li>\n@empty\n    <p>no users</p>\n@endforelse\n\n@while (true)\n    <p>i'm looping forever.</p>\n@endwhile\n\n\n# 서브 뷰 포함하기\n@include 지시어는 손쉽게 블레이드 뷰를 현재의 뷰에 포함(include)시킬수 있도록 도와줍니다. 부모 뷰에서 사용할 수 있는 모든 변수는 포함된 서브 뷰에서도 사용할 수 있습니다.\n\n<div>\n    @include('shared.errors')\n\n    <form>\n        \x3c!-- form contents --\x3e\n    </form>\n</div>\n\n\n서브 뷰는 부모 뷰의 모든 데이터를 상속받겠지만, 그 외에 더 많은 데이터를 배열 형식으로 전달할 수 있습니다.\n\n@include('view.name', ['some' => 'data'])\n\n\n>  주의: 블레이드 뷰 안에서 __dir__과 __file__과 같은 상수를 사용하지 마십시오. 블레이드 뷰는 캐싱된 뷰의 위치를 참조하기 때문입니다.\n\n\n# 컬렉션을 뷰에서 렌더링하기\n블레이드의 @each 지시어를 사용하면 반복문(loop)과 include 구문을 한 줄로 합칠 수 있습니다.\n\n@each('view.name', $jobs, 'job')\n\n\n첫번째 인자는 배열이나 컬렉션의 각 요소를 렌더링하기 위한 서브 뷰의 이름입니다. 두번째 인자는 반복 처리하는 배열이나 컬렉션이며 세번째 인수는 뷰에서의 반복값이 대입되는 변수의 이름입니다. 예를 들어 jobs 배열을 반복 처리하려면 보통 서브 뷰에서 각 과제를 job 변수로 접근해야 할 것입니다.\n\n또한 @each 지시어로 네번째 인수를 전달할 수도 있습니다. 이 인자는 특정 배열이 비었을 경우 렌더링될 뷰를 결정합니다.\n\n@each('view.name', $jobs, 'job', 'view.empty')\n\n\n# 주석\n블레이드는 또한 뷰에 주석을 정의할 수 있습니다. 하지만 html 주석과는 다르게, 블레이드 주석은 브라우저로 전송되는 html에 포함되어 있지 않습니다:\n\n{{-- this comment will not be present in the rendered html --}}\n\n\n# 서비스 주입하기\n@inject 지시어는 서비스 컨테이너로부터 서비스를 조회하는 데에 사용될 수 있습니다. @inject에 전달된 첫번째 인자는 서비스가 할당될 변수의 이름이며 두번째 인자는 주입하려는 서비스의 클래스/인터페이스의 이름입니다:\n\n@inject('metrics', 'app\\services\\metricsservice')​<div>    monthly revenue: {{ $metrics->monthlyrevenue() }}.</div>",charsets:{cjk:!0}},{title:"뷰",frontmatter:{},regularPath:"/04.%20%EA%B0%9C%EB%B0%9C%EC%9E%90%20%EB%AC%B8%EC%84%9C/view.html",relativePath:"04. 개발자 문서/view.md",key:"v-1bf73dc6",path:"/04.%20%EA%B0%9C%EB%B0%9C%EC%9E%90%20%EB%AC%B8%EC%84%9C/view.html",headers:[{level:2,title:"뷰 사용의 제한",slug:"뷰-사용의-제한",charIndex:417},{level:2,title:"기본 사용법",slug:"기본-사용법",charIndex:679},{level:3,title:"뷰에 데이터 전달하기",slug:"뷰에-데이터-전달하기",charIndex:1185},{level:3,title:"파일 패스로부터 view 반환",slug:"파일-패스로부터-view-반환",charIndex:1627}],headersStr:"뷰 사용의 제한 기본 사용법 뷰에 데이터 전달하기 파일 패스로부터 view 반환",content:"# 뷰\n컨트롤러는 Request를 처리한 다음 다양한 형태의 Response를 반환합니다. GET 요청일 경우 대부분 html 형식으로 Response를 반환할 것이며, 때로는 json 형식으로 반환할 것입니다. POST 요청일 경우에는 대부분 리다이렉트(redirect) 형식으로 반환할 것입니다.\n\n뷰는 컨트롤러가 html 형식의 Response를 만들 때 사용됩니다. 컨트롤러는 html 형식의 Response를 반환하기 위해 우선 필요한 데이터를 생성합니다. 그 다음, 생성된 데이터를 미리 정의된 템플릿에 적용하여 html 형식의 Response를 만들어야 합니다. 이때 뷰에 템플릿 정보와 데이터를 전달하면 뷰는 이를 html로 생성해줍니다.\n\n뷰는 프리젠테이션 로직을 컨트롤러 및 어플리케이션 로직과 분리해주는 역할을 합니다.\n\n# 뷰 사용의 제한 \nXE는 웹 브라우저로 html 형식의 응답을 보낼 때, 스킨과 테마를 적용한 후 보내야 합니다. 특별한 경우가 아니라면 컨트롤러에서 뷰를 직접 반환(return)하지 마십시오. 대신 프리젠터를 사용하여 반환하십시오. 반드시 프리젠터를 사용해야만 테마와 스킨이 적용되고 위젯 또한 정상적으로 출력됩니다.\n\n단, 컨트롤러가 아닌 다른 구성요소이거나, 컨트롤러에서라도 반환하는 값이 아니라면, html 스트링을 생성할 때 뷰를 자유롭게 사용하십시오.\n\n# 기본 사용법\n간단한 뷰는 다음과 같습니다:\n\n// plugins/my_plugin/views/greeting.php\n<html>\n    <body>\n        <h1>Hello, <?php echo $name; ?></h1>\n    </body>\n</html>\n\n\n뷰는 다음과 같이 브라우저로 보내집니다:\n\nRoute::get('/', function()\n{\n    return view('my_plugin::views.greeting', ['name' => 'James']);\n});\n\n\n위와 같이 view 헬퍼함수에 전달하는 첫 번째 인자는 템플릿 파일의 이름이 됩니다. 두 번째 전달 인자는 템플릿에서 사용하기 위한 데이터의 배열입니다.\n\n템플릿 파일을 지정할 때, <플러그인아이디>:: 형태의 전치사(prefix)를 사용하면 플러그인 디렉토리를 기준으로 하는 상대경로로 파일 경로를 지정할 수 있습니다. 또, 점(.)을 사용하여 중첩된 서브 디렉토리에 있는 파일을 지정할 수도 있습니다.\n\n# 뷰에 데이터 전달하기\n// Using conventional approach\n$view = view('greeting')->with('name', 'Victoria');\n\n// Using Magic Methods\n$view = view('greeting')->withName('Victoria');\n\n\n위 예제의 경우 뷰에서는 $name 변수에 Victoria라는 값을 확인할 수 있습니다.\n\n필요한 경우에 view 헬퍼함수에 두 번째 인자로 데이터 배열을 전달할 수도 있습니다:\n\n$view = view('greetings', $data);\n\n\n이러한 방식으로 정보를 전달할 때,$data는 키/값으로 구성된 배열이어야 합니다. 뷰 안에서 여러분은 {{ $key }}와 같이 각각의 키에 해당하는 값에 엑세스 할 수 있습니다. ($data['$key']는 존재한다고 가정합니다. )\n\n# 파일 패스로부터 view 반환\n필요하다면 절대경로를 기반으로 뷰를 생성할 수도 있습니다:\n\nreturn view()->file($pathToFile, $data);",contentLowercase:"# 뷰\n컨트롤러는 request를 처리한 다음 다양한 형태의 response를 반환합니다. get 요청일 경우 대부분 html 형식으로 response를 반환할 것이며, 때로는 json 형식으로 반환할 것입니다. post 요청일 경우에는 대부분 리다이렉트(redirect) 형식으로 반환할 것입니다.\n\n뷰는 컨트롤러가 html 형식의 response를 만들 때 사용됩니다. 컨트롤러는 html 형식의 response를 반환하기 위해 우선 필요한 데이터를 생성합니다. 그 다음, 생성된 데이터를 미리 정의된 템플릿에 적용하여 html 형식의 response를 만들어야 합니다. 이때 뷰에 템플릿 정보와 데이터를 전달하면 뷰는 이를 html로 생성해줍니다.\n\n뷰는 프리젠테이션 로직을 컨트롤러 및 어플리케이션 로직과 분리해주는 역할을 합니다.\n\n# 뷰 사용의 제한 \nxe는 웹 브라우저로 html 형식의 응답을 보낼 때, 스킨과 테마를 적용한 후 보내야 합니다. 특별한 경우가 아니라면 컨트롤러에서 뷰를 직접 반환(return)하지 마십시오. 대신 프리젠터를 사용하여 반환하십시오. 반드시 프리젠터를 사용해야만 테마와 스킨이 적용되고 위젯 또한 정상적으로 출력됩니다.\n\n단, 컨트롤러가 아닌 다른 구성요소이거나, 컨트롤러에서라도 반환하는 값이 아니라면, html 스트링을 생성할 때 뷰를 자유롭게 사용하십시오.\n\n# 기본 사용법\n간단한 뷰는 다음과 같습니다:\n\n// plugins/my_plugin/views/greeting.php\n<html>\n    <body>\n        <h1>hello, <?php echo $name; ?></h1>\n    </body>\n</html>\n\n\n뷰는 다음과 같이 브라우저로 보내집니다:\n\nroute::get('/', function()\n{\n    return view('my_plugin::views.greeting', ['name' => 'james']);\n});\n\n\n위와 같이 view 헬퍼함수에 전달하는 첫 번째 인자는 템플릿 파일의 이름이 됩니다. 두 번째 전달 인자는 템플릿에서 사용하기 위한 데이터의 배열입니다.\n\n템플릿 파일을 지정할 때, <플러그인아이디>:: 형태의 전치사(prefix)를 사용하면 플러그인 디렉토리를 기준으로 하는 상대경로로 파일 경로를 지정할 수 있습니다. 또, 점(.)을 사용하여 중첩된 서브 디렉토리에 있는 파일을 지정할 수도 있습니다.\n\n# 뷰에 데이터 전달하기\n// using conventional approach\n$view = view('greeting')->with('name', 'victoria');\n\n// using magic methods\n$view = view('greeting')->withname('victoria');\n\n\n위 예제의 경우 뷰에서는 $name 변수에 victoria라는 값을 확인할 수 있습니다.\n\n필요한 경우에 view 헬퍼함수에 두 번째 인자로 데이터 배열을 전달할 수도 있습니다:\n\n$view = view('greetings', $data);\n\n\n이러한 방식으로 정보를 전달할 때,$data는 키/값으로 구성된 배열이어야 합니다. 뷰 안에서 여러분은 {{ $key }}와 같이 각각의 키에 해당하는 값에 엑세스 할 수 있습니다. ($data['$key']는 존재한다고 가정합니다. )\n\n# 파일 패스로부터 view 반환\n필요하다면 절대경로를 기반으로 뷰를 생성할 수도 있습니다:\n\nreturn view()->file($pathtofile, $data);",charsets:{cjk:!0}},{title:"디렉토리 구조",frontmatter:{},regularPath:"/04.%20%EA%B0%9C%EB%B0%9C%EC%9E%90%20%EB%AC%B8%EC%84%9C/xe-directory-info.html",relativePath:"04. 개발자 문서/xe-directory-info.md",key:"v-73232377",path:"/04.%20%EA%B0%9C%EB%B0%9C%EC%9E%90%20%EB%AC%B8%EC%84%9C/xe-directory-info.html",headers:[{level:2,title:"루트 디렉토리",slug:"루트-디렉토리",charIndex:10},{level:3,title:"app",slug:"app",charIndex:85},{level:3,title:"core",slug:"core",charIndex:133},{level:3,title:"migrations",slug:"migrations",charIndex:143},{level:3,title:"config",slug:"config",charIndex:121},{level:3,title:"assets",slug:"assets",charIndex:94},{level:3,title:"plugins",slug:"plugins",charIndex:159},{level:3,title:"resources",slug:"resources",charIndex:172},{level:3,title:"storage",slug:"storage",charIndex:187},{level:3,title:"vendor",slug:"vendor",charIndex:200},{level:3,title:"web_installer",slug:"web-installer",charIndex:212},{level:3,title:"artisan",slug:"artisan",charIndex:231},{level:3,title:"composer.json",slug:"composer-json",charIndex:243},{level:3,title:"composer.user.json.example",slug:"composer-user-json-example",charIndex:261},{level:3,title:"index.php",slug:"index-php",charIndex:292}],headersStr:"루트 디렉토리 app core migrations config assets plugins resources storage vendor web_installer artisan composer.json composer.user.json.example index.php",content:"# 디렉토리 구조\n루트 디렉토리에서 중요한 항목만 나열해 보았습니다. XE는 라라벨 프레임워크의 구조를 기반으로하여 커스터마이징되어 있습니다.\n\n├── app/\n├── assets/\n├── bootstrap/\n├── config/\n├── core/\n├── migrations/\n├── plugins/\n├── resources/\n├── storage/\n├── vendor/\n├── web_installer/\n├── artisan\n├── composer.json\n├── composer.user.json.example\n└── index.php\n\n\n# 루트 디렉토리\n# app\nXE를 구성하는 컨트롤러나 커맨드와 같은 어플리케이션 레벨에 해당하는 코드가 들어있습니다.\n\n# core\nXE의 핵심적인 서비스 및 컴포넌트 관리 기능을 위한 클래스 파일의 모음입니다.\n\n# migrations\nXE를 설치하거나 업데이트할 때, 실행되는 코드가 들어있습니다.\n\n# config\nXE의 설정을 저장하는 파일들이 들어있습니다.\n\n# assets\n웹페이지에서 필요한 stylesheet, javascript나 이미지 파일과 같은 assets 파일들이 들어있습니다.\n\n# plugins\n서드파티에서 작성한 플러그인이 설치되는 디렉토리입니다.\n\n# resources\nXE에서 필요한 템플릿 파일이나 언어파일이 들어있습니다.\n\n# storage\n이 디렉토리에는 XE가 실행되면서 생성되는 동적인 파일들이 저장되는 위치입니다. 회원 프로필 사진이나 게시판 첨부 파일, 그외 캐시 파일 등이 이 디렉토리에 생성됩니다.\n\n# vendor\ncomposer를 통해 설치되는 외부 라이브러리들이 설치되는 디렉토리입니다.\n\n# web_installer\nXE를 웹을 통해 설치할 때 필요한 파일들이 들어있습니다.\n\n# artisan\n터미널에서 XE의 명령을 실행할 때 사용하는 파일입니다.\n\n# composer.json\nXE는 PHP 패키지 관리툴인 composer를 사용합니다. 이 파일은 composer 툴에서 사용하는 설정 파일입니다.\n\n# composer.user.json.example\nXE에서는 composer.json파일을 직접 수정하는 것을 금지합니다. composer.json 파일은 XE의 소스코드에 포함된 파일이므로 XE를 업데이트할 때 덮어씌워집니다. composer.json을 수정하는 대신 composer.user.json 파일을 사용하여 패키지를 관리할 수 있습니다. composer.user.json.example 파일 이름을 composer.user.json로 바꿔서 사용하시면 됩니다.\n\n# index.php\n웹브라우저를 통해 사이트에 접근할 때, 항상 실행되는 PHP파일입니다.",contentLowercase:"# 디렉토리 구조\n루트 디렉토리에서 중요한 항목만 나열해 보았습니다. xe는 라라벨 프레임워크의 구조를 기반으로하여 커스터마이징되어 있습니다.\n\n├── app/\n├── assets/\n├── bootstrap/\n├── config/\n├── core/\n├── migrations/\n├── plugins/\n├── resources/\n├── storage/\n├── vendor/\n├── web_installer/\n├── artisan\n├── composer.json\n├── composer.user.json.example\n└── index.php\n\n\n# 루트 디렉토리\n# app\nxe를 구성하는 컨트롤러나 커맨드와 같은 어플리케이션 레벨에 해당하는 코드가 들어있습니다.\n\n# core\nxe의 핵심적인 서비스 및 컴포넌트 관리 기능을 위한 클래스 파일의 모음입니다.\n\n# migrations\nxe를 설치하거나 업데이트할 때, 실행되는 코드가 들어있습니다.\n\n# config\nxe의 설정을 저장하는 파일들이 들어있습니다.\n\n# assets\n웹페이지에서 필요한 stylesheet, javascript나 이미지 파일과 같은 assets 파일들이 들어있습니다.\n\n# plugins\n서드파티에서 작성한 플러그인이 설치되는 디렉토리입니다.\n\n# resources\nxe에서 필요한 템플릿 파일이나 언어파일이 들어있습니다.\n\n# storage\n이 디렉토리에는 xe가 실행되면서 생성되는 동적인 파일들이 저장되는 위치입니다. 회원 프로필 사진이나 게시판 첨부 파일, 그외 캐시 파일 등이 이 디렉토리에 생성됩니다.\n\n# vendor\ncomposer를 통해 설치되는 외부 라이브러리들이 설치되는 디렉토리입니다.\n\n# web_installer\nxe를 웹을 통해 설치할 때 필요한 파일들이 들어있습니다.\n\n# artisan\n터미널에서 xe의 명령을 실행할 때 사용하는 파일입니다.\n\n# composer.json\nxe는 php 패키지 관리툴인 composer를 사용합니다. 이 파일은 composer 툴에서 사용하는 설정 파일입니다.\n\n# composer.user.json.example\nxe에서는 composer.json파일을 직접 수정하는 것을 금지합니다. composer.json 파일은 xe의 소스코드에 포함된 파일이므로 xe를 업데이트할 때 덮어씌워집니다. composer.json을 수정하는 대신 composer.user.json 파일을 사용하여 패키지를 관리할 수 있습니다. composer.user.json.example 파일 이름을 composer.user.json로 바꿔서 사용하시면 됩니다.\n\n# index.php\n웹브라우저를 통해 사이트에 접근할 때, 항상 실행되는 php파일입니다.",charsets:{cjk:!0}},{title:"관리자 사이트 메뉴 추가 방법",frontmatter:{},regularPath:"/05.%20%ED%94%8C%EB%9F%AC%EA%B7%B8%EC%9D%B8%20%EA%B0%9C%EB%B0%9C/admin-menu-extend.html",relativePath:"05. 플러그인 개발/admin-menu-extend.md",key:"v-5a42ab6a",path:"/05.%20%ED%94%8C%EB%9F%AC%EA%B7%B8%EC%9D%B8%20%EA%B0%9C%EB%B0%9C/admin-menu-extend.html",headers:[{level:2,title:"페이지 등록\\(라우트 등록\\)",slug:"페이지-등록-라우트-등록",charIndex:367},{level:2,title:"메뉴 등록",slug:"메뉴-등록",charIndex:296},{level:3,title:"페이지에 메뉴 연결하기",slug:"페이지에-메뉴-연결하기",charIndex:2273},{level:2,title:"관리 권한",slug:"관리-권한",charIndex:319},{level:3,title:"권한 등록",slug:"권한-등록",charIndex:322},{level:3,title:"페이지에 권한 지정하기",slug:"페이지에-권한-지정하기",charIndex:3679}],headersStr:"페이지 등록\\(라우트 등록\\) 메뉴 등록 페이지에 메뉴 연결하기 관리 권한 권한 등록 페이지에 권한 지정하기",content:"# 관리자 사이트 메뉴 추가 방법\nXE는 사이트 관리자 또는 관리 등급을 가진 회원만 접근할 수 있는 '사이트 관리 영역'을 가지고 있습니다. 사이트 관리 영역은 사이트 관리에 필요한 다양한 '사이트 관리 페이지'들로 구성되어 있습니다. 사이트 관리 영역은 일반적으로 http://<도메인>/settings로 접근할 수 있습니다.\n\n플러그인도 사이트 관리 영역에 플러그인을 위한 관리페이지를 추가할 수 있습니다.\n\n사이트 관리 페이지를 추가할 때에는 크게 세가지 작업이 필요합니다.\n\n * 페이지(라우트) 등록\n * 사이트 관리 메뉴 등록 및 페이지와 연결\n * 사이트 관리 권한 등록 및 페이지와 연결\n\n세가지 작업에 대하여 자세히 살펴보겠습니다.\n\n# 페이지 등록(라우트 등록)\n관리 페이지를 등록하는 것은 결국 라우트를 등록하는 것을 뜻합니다. 관리 페이지를 위한 라우트를 등록하는 방법은 일반 웹페이지의 라우트를 등록하는 방법과 크게 다르지 않습니다. 다만, Route::group 메소드 대신 Route::settings 메소드를 사용하면 됩니다.\n\n  Route::settings($uri, function() {\n    Route::get('/', ...);\n    Route::post('/', ...);\n  });\n\n\n사이트 관리 영역에 속하는 모든 페이지의 URL은 모두 첫번째 세그먼트로 settings를 가지게 됩니다. 라우트를 등록하는 코드는 플러그인 클래스의 boot 메소드에 등록하십시오.\n\n<?php\n// plugins/my_plugin/plugin.php\nnamespace MyPlugin;\n\nuse Xpressengine\\Plugin\\AbstractPlugin;\nuse Route;\nuse Presenter;\n\nclass Plugin extends AbstractPlugin\n{\n  public function boot()\n  {\n      // 사이트 관리 페이지 추가\n      // http://<domain>/settings/my_plugin url로 접근 가능\n      Route::settings(static::getId(), function() {\n        Route::get('/', function(){\n          return Presenter::make(static::view('views.settings'));\n        }\n      });\n  }\n\n}\n\n\n사이트 관리 페이지들이 출력될 때에는 사이트 관리 영역용 테마를 적용한 후 출력돼야 합니다. Presenter를 사용하여 결과를 반환하십시오. 자동으로 사이트 관리 영역용 테마가 적용됩니다.\n\n# 메뉴 등록\n사이트 관리 영역의 화면 좌측에는 관리 메뉴 트리가 출력됩니다. 플러그인은 이 트리에 메뉴를 추가할 수 있습니다. XeRegister 파사드의 push 메소드를 사용하여 settings/menu에 메뉴 정보를 등록합니다.\n\n\\XeRegister::push('settings/menu', $menuId, $menuInfo);\n\n\n아래 코드는 사이트 관리 메뉴의 컨텐츠 메뉴 하위에 서브 메뉴로 게시판 메뉴를 추가하는 예제입니다.\n\n\\XeRegister::push('settings/menu', 'contents.board', [\n    'title' => '게시판',\n    'display' => true,\n    'description' => '',\n    'ordering' => 2000,\n]);\n\n\n첫번째 파라미터는 항상 settings/menu를 지정하십시오.\n\n두번째 파라미터는 메뉴의 아이디인 동시에 메뉴의 부모 메뉴를 지정하는 역할을 합니다. 부모메뉴의 아이디와 현재 메뉴의 아이디를 점(.)을 사용하여 연결해주십시오. 위 예제의 경우 contents 메뉴 하위에 board 메뉴를 추가합니다.\n\n세번째 파라미터는 메뉴의 상세정보를 담은 배열입니다.\n\n * title은 메뉴가 출력될 때 사용하는 메뉴의 이름입니다.\n * display가 true이면 메뉴가 메뉴 트리에 출력됩니다. false의 경우 메뉴 트리에 출력되지 않습니다. 예를 들어 회원 정보 수정과 같은 메뉴는 메뉴 트리에는 출력되지 않는 숨김 메뉴입니다. 사이트 관리페이지의 상단에는 빵조각(breadcrumb)으로 현재 관리페이지의 위치를 표시해주는데, 이때 숨김 메뉴를 등록해 놓으면 유용합니다.\n * description은 메뉴에 대한 설명입니다. 사이트 관리페이지의 상단에 출력됩니다.\n * ordering은 메뉴가 출력되는 순서를 지정할 때 사용됩니다. 같은 레벨의 메뉴들이 출력될 때 ordering이 작은 메뉴부터 출력됩니다.\n\n# 페이지에 메뉴 연결하기\n사이트 관리 페이지(라우트)를 등록할 때, 페이지에 해당하는 메뉴를 지정할 수 있습니다. 아래 코드는 회원 추가 페이지에 메뉴를 지정하는 예제입니다.\n\n// member.create 등록\n\\XeRegister::push('settings/menu', 'user.create', [\n    'title' => '새 회원 추가',\n    'description' => '신규회원을 추가합니다.',\n    'display' => false,\n    'ordering' => 200\n]);\n\n\n// settings_menu 지정\nRoute::settings('user', function () {\n    Route::get('create', [\n           'as' => 'settings.member.create',\n           'uses' => 'Member\\Settings\\UserController@create',\n           'settings_menu' => 'user.create'\n    ]);\n});\n\n\n라우트를 등록할 때, 두번째 파라미터 배열의 settings_menu 필드에 메뉴 아이디를 지정하면 됩니다. 위 예제의 경우 member.create 메뉴를 라우트와 연결하고 있습니다.\n\n# 관리 권한\n기본적으로 사이트의 최고관리자(super)는 모든 관리 페이지에 접근할 수 있습니다. 하지만, 최고관리자가 아닌 관리자(manager) 등급의 회원이더라도 선택적으로 사이트 관리 페이지에 접근할 수 있도록 지정할 수 있습니다.\n\n# 권한 등록\n권한을 등록하는 방법은 앞서 설명한 메뉴 등록 방법과 유사합니다. XeRegister 파사드의 push 메소드를 사용합니다.\n\n\\XeRegister::push('settings/permission', $permissionId, $permissionInfo);\n\n\n아래 코드는 '회원 생성'이라는 권한을 등록하는 예제입니다.\n\n\\XeRegister::push('settings/permission', 'user.create', [\n    'title' => '회원 생성',\n    'tab' => '회원관리'\n]);\n\n\n첫번째 파라미터는 항상 settings/permission을 지정하십시오.\n\n두번째 파라미터는 권한의 아이디입니다.\n\n세번째 파라미터는 권한의 상세정보를 담은 배열입니다.\n\n * title은 권한의 이름입니다. 권한 관리 페이지에서 권한을 표시할 때 사용됩니다.\n * tab은 권한이 속할 그룹을 이름을 지정합니다. 권한 관리 페이지에서는 동일한 tab을 가진 권한들을 그룹지어 출력합니다.\n\n위와 같이 권한을 등록해 놓으면, '사이트 관리 > 설정 > 관리페이지 권한 설정' 페이지에 등록한 권한이 표시됩니다. 사이트 관리자는 이 페이지에서 특정 사용자에게 권한을 부여할 수 있습니다.\n\n# 페이지에 권한 지정하기\n등록한 권한을 관리 페이지(라우트)에 연결하는 과정도 사이트 관리 메뉴를 지정했던 방식과 유사합니다. permission 필드에 권한의 아이디를 지정하십시오.\n\nRoute::settings('user', function () {\n    Route::get('create', [\n           'as' => 'settings.member.create',\n           'uses' => 'Member\\Settings\\UserController@create',\n           'settings_menu' => 'user.create',\n           'permission' => 'user.create'\n    ]);\n});\n\n\n위 예제에서는 '회원 생성' 권한을 회원 추가 페이지에 지정하고 있습니다.\n\n어떤 회원이 회원 추가 페이지에 접근할 경우, XE는 먼저 회원 추가 페이지에 지정된 권한을 찾습니다. 위의 경우 회원 추가(user.create) 권한을 찾게 됩니다. 그 다음 XE는 로그인한 회원에 권한이 부여되어 있는지 검사합니다. 만약 권한이 부여되어 있지 않은 회원이라면 오류를 출력하게 됩니다.",contentLowercase:"# 관리자 사이트 메뉴 추가 방법\nxe는 사이트 관리자 또는 관리 등급을 가진 회원만 접근할 수 있는 '사이트 관리 영역'을 가지고 있습니다. 사이트 관리 영역은 사이트 관리에 필요한 다양한 '사이트 관리 페이지'들로 구성되어 있습니다. 사이트 관리 영역은 일반적으로 http://<도메인>/settings로 접근할 수 있습니다.\n\n플러그인도 사이트 관리 영역에 플러그인을 위한 관리페이지를 추가할 수 있습니다.\n\n사이트 관리 페이지를 추가할 때에는 크게 세가지 작업이 필요합니다.\n\n * 페이지(라우트) 등록\n * 사이트 관리 메뉴 등록 및 페이지와 연결\n * 사이트 관리 권한 등록 및 페이지와 연결\n\n세가지 작업에 대하여 자세히 살펴보겠습니다.\n\n# 페이지 등록(라우트 등록)\n관리 페이지를 등록하는 것은 결국 라우트를 등록하는 것을 뜻합니다. 관리 페이지를 위한 라우트를 등록하는 방법은 일반 웹페이지의 라우트를 등록하는 방법과 크게 다르지 않습니다. 다만, route::group 메소드 대신 route::settings 메소드를 사용하면 됩니다.\n\n  route::settings($uri, function() {\n    route::get('/', ...);\n    route::post('/', ...);\n  });\n\n\n사이트 관리 영역에 속하는 모든 페이지의 url은 모두 첫번째 세그먼트로 settings를 가지게 됩니다. 라우트를 등록하는 코드는 플러그인 클래스의 boot 메소드에 등록하십시오.\n\n<?php\n// plugins/my_plugin/plugin.php\nnamespace myplugin;\n\nuse xpressengine\\plugin\\abstractplugin;\nuse route;\nuse presenter;\n\nclass plugin extends abstractplugin\n{\n  public function boot()\n  {\n      // 사이트 관리 페이지 추가\n      // http://<domain>/settings/my_plugin url로 접근 가능\n      route::settings(static::getid(), function() {\n        route::get('/', function(){\n          return presenter::make(static::view('views.settings'));\n        }\n      });\n  }\n\n}\n\n\n사이트 관리 페이지들이 출력될 때에는 사이트 관리 영역용 테마를 적용한 후 출력돼야 합니다. presenter를 사용하여 결과를 반환하십시오. 자동으로 사이트 관리 영역용 테마가 적용됩니다.\n\n# 메뉴 등록\n사이트 관리 영역의 화면 좌측에는 관리 메뉴 트리가 출력됩니다. 플러그인은 이 트리에 메뉴를 추가할 수 있습니다. xeregister 파사드의 push 메소드를 사용하여 settings/menu에 메뉴 정보를 등록합니다.\n\n\\xeregister::push('settings/menu', $menuid, $menuinfo);\n\n\n아래 코드는 사이트 관리 메뉴의 컨텐츠 메뉴 하위에 서브 메뉴로 게시판 메뉴를 추가하는 예제입니다.\n\n\\xeregister::push('settings/menu', 'contents.board', [\n    'title' => '게시판',\n    'display' => true,\n    'description' => '',\n    'ordering' => 2000,\n]);\n\n\n첫번째 파라미터는 항상 settings/menu를 지정하십시오.\n\n두번째 파라미터는 메뉴의 아이디인 동시에 메뉴의 부모 메뉴를 지정하는 역할을 합니다. 부모메뉴의 아이디와 현재 메뉴의 아이디를 점(.)을 사용하여 연결해주십시오. 위 예제의 경우 contents 메뉴 하위에 board 메뉴를 추가합니다.\n\n세번째 파라미터는 메뉴의 상세정보를 담은 배열입니다.\n\n * title은 메뉴가 출력될 때 사용하는 메뉴의 이름입니다.\n * display가 true이면 메뉴가 메뉴 트리에 출력됩니다. false의 경우 메뉴 트리에 출력되지 않습니다. 예를 들어 회원 정보 수정과 같은 메뉴는 메뉴 트리에는 출력되지 않는 숨김 메뉴입니다. 사이트 관리페이지의 상단에는 빵조각(breadcrumb)으로 현재 관리페이지의 위치를 표시해주는데, 이때 숨김 메뉴를 등록해 놓으면 유용합니다.\n * description은 메뉴에 대한 설명입니다. 사이트 관리페이지의 상단에 출력됩니다.\n * ordering은 메뉴가 출력되는 순서를 지정할 때 사용됩니다. 같은 레벨의 메뉴들이 출력될 때 ordering이 작은 메뉴부터 출력됩니다.\n\n# 페이지에 메뉴 연결하기\n사이트 관리 페이지(라우트)를 등록할 때, 페이지에 해당하는 메뉴를 지정할 수 있습니다. 아래 코드는 회원 추가 페이지에 메뉴를 지정하는 예제입니다.\n\n// member.create 등록\n\\xeregister::push('settings/menu', 'user.create', [\n    'title' => '새 회원 추가',\n    'description' => '신규회원을 추가합니다.',\n    'display' => false,\n    'ordering' => 200\n]);\n\n\n// settings_menu 지정\nroute::settings('user', function () {\n    route::get('create', [\n           'as' => 'settings.member.create',\n           'uses' => 'member\\settings\\usercontroller@create',\n           'settings_menu' => 'user.create'\n    ]);\n});\n\n\n라우트를 등록할 때, 두번째 파라미터 배열의 settings_menu 필드에 메뉴 아이디를 지정하면 됩니다. 위 예제의 경우 member.create 메뉴를 라우트와 연결하고 있습니다.\n\n# 관리 권한\n기본적으로 사이트의 최고관리자(super)는 모든 관리 페이지에 접근할 수 있습니다. 하지만, 최고관리자가 아닌 관리자(manager) 등급의 회원이더라도 선택적으로 사이트 관리 페이지에 접근할 수 있도록 지정할 수 있습니다.\n\n# 권한 등록\n권한을 등록하는 방법은 앞서 설명한 메뉴 등록 방법과 유사합니다. xeregister 파사드의 push 메소드를 사용합니다.\n\n\\xeregister::push('settings/permission', $permissionid, $permissioninfo);\n\n\n아래 코드는 '회원 생성'이라는 권한을 등록하는 예제입니다.\n\n\\xeregister::push('settings/permission', 'user.create', [\n    'title' => '회원 생성',\n    'tab' => '회원관리'\n]);\n\n\n첫번째 파라미터는 항상 settings/permission을 지정하십시오.\n\n두번째 파라미터는 권한의 아이디입니다.\n\n세번째 파라미터는 권한의 상세정보를 담은 배열입니다.\n\n * title은 권한의 이름입니다. 권한 관리 페이지에서 권한을 표시할 때 사용됩니다.\n * tab은 권한이 속할 그룹을 이름을 지정합니다. 권한 관리 페이지에서는 동일한 tab을 가진 권한들을 그룹지어 출력합니다.\n\n위와 같이 권한을 등록해 놓으면, '사이트 관리 > 설정 > 관리페이지 권한 설정' 페이지에 등록한 권한이 표시됩니다. 사이트 관리자는 이 페이지에서 특정 사용자에게 권한을 부여할 수 있습니다.\n\n# 페이지에 권한 지정하기\n등록한 권한을 관리 페이지(라우트)에 연결하는 과정도 사이트 관리 메뉴를 지정했던 방식과 유사합니다. permission 필드에 권한의 아이디를 지정하십시오.\n\nroute::settings('user', function () {\n    route::get('create', [\n           'as' => 'settings.member.create',\n           'uses' => 'member\\settings\\usercontroller@create',\n           'settings_menu' => 'user.create',\n           'permission' => 'user.create'\n    ]);\n});\n\n\n위 예제에서는 '회원 생성' 권한을 회원 추가 페이지에 지정하고 있습니다.\n\n어떤 회원이 회원 추가 페이지에 접근할 경우, xe는 먼저 회원 추가 페이지에 지정된 권한을 찾습니다. 위의 경우 회원 추가(user.create) 권한을 찾게 됩니다. 그 다음 xe는 로그인한 회원에 권한이 부여되어 있는지 검사합니다. 만약 권한이 부여되어 있지 않은 회원이라면 오류를 출력하게 됩니다.",charsets:{cjk:!0}},{title:"모듈 생성",frontmatter:{},regularPath:"/05.%20%ED%94%8C%EB%9F%AC%EA%B7%B8%EC%9D%B8%20%EA%B0%9C%EB%B0%9C/common-module-make.html",relativePath:"05. 플러그인 개발/common-module-make.md",key:"v-03e2b4b5",path:"/05.%20%ED%94%8C%EB%9F%AC%EA%B7%B8%EC%9D%B8%20%EA%B0%9C%EB%B0%9C/common-module-make.html",headers:[{level:2,title:"모듈 생성 방법",slug:"모듈-생성-방법",charIndex:10}],headersStr:"모듈 생성 방법",content:"# 모듈 생성\n# 모듈 생성 방법\nXE는 사이트 관리 페이지를 통해 각각의 메뉴를 정의할 수 있는 기능을 제공합니다. 메뉴의 아이템으로 등록되는 컴포넌트는 모듈로 생성하여 등록할 수 있습니다. 새로운 모듈을 생성하기 위해선 Xpressengine\\Menu\\AbstractModule을 상속받아 클래스를 구현해야 합니다. 이 클래스는 XE에서 사용되어지기 위해 다음과 같이 모듈을 지칭하는 아이디를 가져야 합니다.\n\nmodule/<plugin_id>@<module_id>",contentLowercase:"# 모듈 생성\n# 모듈 생성 방법\nxe는 사이트 관리 페이지를 통해 각각의 메뉴를 정의할 수 있는 기능을 제공합니다. 메뉴의 아이템으로 등록되는 컴포넌트는 모듈로 생성하여 등록할 수 있습니다. 새로운 모듈을 생성하기 위해선 xpressengine\\menu\\abstractmodule을 상속받아 클래스를 구현해야 합니다. 이 클래스는 xe에서 사용되어지기 위해 다음과 같이 모듈을 지칭하는 아이디를 가져야 합니다.\n\nmodule/<plugin_id>@<module_id>",charsets:{cjk:!0}},{title:"플러그인 생성",frontmatter:{},regularPath:"/05.%20%ED%94%8C%EB%9F%AC%EA%B7%B8%EC%9D%B8%20%EA%B0%9C%EB%B0%9C/common-plugin-make.html",relativePath:"05. 플러그인 개발/common-plugin-make.md",key:"v-24deb4fa",path:"/05.%20%ED%94%8C%EB%9F%AC%EA%B7%B8%EC%9D%B8%20%EA%B0%9C%EB%B0%9C/common-plugin-make.html",headers:[{level:2,title:"플러그인 생성 하기",slug:"플러그인-생성-하기",charIndex:12},{level:3,title:"플러그인 생성 방법 (터미널 환경)",slug:"플러그인-생성-방법-터미널-환경",charIndex:317},{level:3,title:"플러그인 생성 방법 (웹 환경)",slug:"플러그인-생성-방법-웹-환경",charIndex:1092}],headersStr:"플러그인 생성 하기 플러그인 생성 방법 (터미널 환경) 플러그인 생성 방법 (웹 환경)",content:'# 플러그인 생성\n# 플러그인 생성 하기\n플러그인 개발을 시작할 때 가장 중요한 것은 플러그인에 대한 기본적인 구조를 만드는 것입니다. 만약, BlogTheme라는 플러그인을 만들고자 한다면, 우선 plugins 디렉토리에 BlogTheme 라는 디렉토리를 만들고, 그 안에 XE 플러그인 등록 및 부팅에 필요한 파일을 생성하는 것 부터 시작해야합니다.\nXE에서는 그러한 수고와 어려움을 덜기 위하여 플러그인 생성 기능을 제공하고 있습니다.\n\nXE에서 제공하는 기능은 크게 "터미널"에서 기본 더미 플러그인을 만드는 방법과 "웹"에서 만드는 방법을 제공합니다.\n\n# 플러그인 생성 방법 (터미널 환경)\n플러그인 생성 커맨드를 사용해서 만든 플러그인은 웹페이지를 출력하는 기본적인 기능을 샘플로 포함하고 있습니다. 원치 않을 경우 샘플 웹페이지 출력 기능을 삭제하시고, 플러그인 개발을 시작하시기 바랍니다.\n\n터미널에서 아래와 같이 명령어를 실행하십시오.\n\n$ php artisan make:plugin <name> <vendor>\n\n\nname 파라메터는 플러그인의 고유 id입니다. 플러그인의 디렉토리 이름으로도 사용됩니다.\n\nvendor 파라메터에는 플러그인 클래스의 네임스페이스 첫자리를 지정합니다. 지정한 네임스페이스는 플러그인 클래스 뿐만 아니라 플러그인 내에 존재하는 모든 PHP 클래스의 네임스페이스로도 사용됩니다. 이 네임스페이스는 다른 개발자가 작성한 클래스와 클래스명이 동일할 때 서로 구분하기 위해 사용됩니다. 다른 사람과 중복되지 않는 자신만의 고유한 vendor를 지정하십시오. 가능하면 자신의 이름이나 소속회사명을 사용하시길 권장합니다.\n\n예를 들어, 본인의 이름이 \'GilDongHong\'이면 GildongHong\\HwalbinDang 또는 GilDongHong를 vendor로 사용하십시오. 만약 GilDongHong 을vendor로 사용하고 name이 my_plugin 인 플러그인을 생성하는 명령어\n\n$ php artisan make:plugin my_plugin GilDongHong\n\n\n를 실행한다면, 생성커맨드는 자동으로 GildongHong\\XePlugin\\MyPlugin를 네임스페이스로 생성할 것입니다.\n\n# 플러그인 생성 방법 (웹 환경)\n>  안내\n본 환경은 XE 3.0.8 부터 지원하는 기능입니다.\n\n\n관리자 사이트 > 플러그인 > 설치된 플러그인으로 이동합니다. [플러그인 생성하기]를 클릭하여 빈 플러그인을 만들 수 있습니다.',contentLowercase:'# 플러그인 생성\n# 플러그인 생성 하기\n플러그인 개발을 시작할 때 가장 중요한 것은 플러그인에 대한 기본적인 구조를 만드는 것입니다. 만약, blogtheme라는 플러그인을 만들고자 한다면, 우선 plugins 디렉토리에 blogtheme 라는 디렉토리를 만들고, 그 안에 xe 플러그인 등록 및 부팅에 필요한 파일을 생성하는 것 부터 시작해야합니다.\nxe에서는 그러한 수고와 어려움을 덜기 위하여 플러그인 생성 기능을 제공하고 있습니다.\n\nxe에서 제공하는 기능은 크게 "터미널"에서 기본 더미 플러그인을 만드는 방법과 "웹"에서 만드는 방법을 제공합니다.\n\n# 플러그인 생성 방법 (터미널 환경)\n플러그인 생성 커맨드를 사용해서 만든 플러그인은 웹페이지를 출력하는 기본적인 기능을 샘플로 포함하고 있습니다. 원치 않을 경우 샘플 웹페이지 출력 기능을 삭제하시고, 플러그인 개발을 시작하시기 바랍니다.\n\n터미널에서 아래와 같이 명령어를 실행하십시오.\n\n$ php artisan make:plugin <name> <vendor>\n\n\nname 파라메터는 플러그인의 고유 id입니다. 플러그인의 디렉토리 이름으로도 사용됩니다.\n\nvendor 파라메터에는 플러그인 클래스의 네임스페이스 첫자리를 지정합니다. 지정한 네임스페이스는 플러그인 클래스 뿐만 아니라 플러그인 내에 존재하는 모든 php 클래스의 네임스페이스로도 사용됩니다. 이 네임스페이스는 다른 개발자가 작성한 클래스와 클래스명이 동일할 때 서로 구분하기 위해 사용됩니다. 다른 사람과 중복되지 않는 자신만의 고유한 vendor를 지정하십시오. 가능하면 자신의 이름이나 소속회사명을 사용하시길 권장합니다.\n\n예를 들어, 본인의 이름이 \'gildonghong\'이면 gildonghong\\hwalbindang 또는 gildonghong를 vendor로 사용하십시오. 만약 gildonghong 을vendor로 사용하고 name이 my_plugin 인 플러그인을 생성하는 명령어\n\n$ php artisan make:plugin my_plugin gildonghong\n\n\n를 실행한다면, 생성커맨드는 자동으로 gildonghong\\xeplugin\\myplugin를 네임스페이스로 생성할 것입니다.\n\n# 플러그인 생성 방법 (웹 환경)\n>  안내\n본 환경은 xe 3.0.8 부터 지원하는 기능입니다.\n\n\n관리자 사이트 > 플러그인 > 설치된 플러그인으로 이동합니다. [플러그인 생성하기]를 클릭하여 빈 플러그인을 만들 수 있습니다.',charsets:{cjk:!0}},{title:"플러그인 경로 및 기본 구조",frontmatter:{},regularPath:"/05.%20%ED%94%8C%EB%9F%AC%EA%B7%B8%EC%9D%B8%20%EA%B0%9C%EB%B0%9C/common-structure.html",relativePath:"05. 플러그인 개발/common-structure.md",key:"v-776b6326",path:"/05.%20%ED%94%8C%EB%9F%AC%EA%B7%B8%EC%9D%B8%20%EA%B0%9C%EB%B0%9C/common-structure.html",headers:[{level:2,title:"개요",slug:"개요",charIndex:20},{level:2,title:"플러그인 경로 및 구조",slug:"플러그인-경로-및-구조",charIndex:76},{level:3,title:"기본 플러그인 경로",slug:"기본-플러그인-경로",charIndex:91},{level:3,title:"기본 플러그인 구조",slug:"기본-플러그인-구조",charIndex:156}],headersStr:"개요 플러그인 경로 및 구조 기본 플러그인 경로 기본 플러그인 구조",content:"# 플러그인 경로 및 기본 구조\n# 개요\n이 문서에서는 플러그인이 설치되는 경로와 기본 구조에 대해서 알아볼 수 있는 문서입니다.\n\n# 플러그인 경로 및 구조\n# 기본 플러그인 경로\n플러그인의 위치 : ./plugins/<플러그인명> 또는 ./privates/<플러그인명>\n\n# 기본 플러그인 구조\n├─composer.json // 의존성 관리를 위한 composer 구성 파일\n├─plugin.php // XE에 사용되는 플러그인 창작자 정보 및 플러그인 정보 파일\n├─assets // CSS, JS등 플러그인에 사용되는 공통 에셋 폴더\n├─src // 플러그인에 포함되는 테마, 스킨 등이 위치하는 폴더\n└─views",contentLowercase:"# 플러그인 경로 및 기본 구조\n# 개요\n이 문서에서는 플러그인이 설치되는 경로와 기본 구조에 대해서 알아볼 수 있는 문서입니다.\n\n# 플러그인 경로 및 구조\n# 기본 플러그인 경로\n플러그인의 위치 : ./plugins/<플러그인명> 또는 ./privates/<플러그인명>\n\n# 기본 플러그인 구조\n├─composer.json // 의존성 관리를 위한 composer 구성 파일\n├─plugin.php // xe에 사용되는 플러그인 창작자 정보 및 플러그인 정보 파일\n├─assets // css, js등 플러그인에 사용되는 공통 에셋 폴더\n├─src // 플러그인에 포함되는 테마, 스킨 등이 위치하는 폴더\n└─views",charsets:{cjk:!0}},{title:"위젯 제작",frontmatter:{},regularPath:"/05.%20%ED%94%8C%EB%9F%AC%EA%B7%B8%EC%9D%B8%20%EA%B0%9C%EB%B0%9C/common-widget-make.html",relativePath:"05. 플러그인 개발/common-widget-make.md",key:"v-cd05e336",path:"/05.%20%ED%94%8C%EB%9F%AC%EA%B7%B8%EC%9D%B8%20%EA%B0%9C%EB%B0%9C/common-widget-make.html",headers:[{level:2,title:"클래스 생성하기",slug:"클래스-생성하기",charIndex:10},{level:2,title:"위젯 등록하기",slug:"위젯-등록하기",charIndex:1069},{level:2,title:"위젯 등록하기",slug:"위젯-등록하기-2",charIndex:1069},{level:2,title:"위젯 출력하기",slug:"위젯-출력하기",charIndex:2715},{level:3,title:"기본적인 방법으로 출력하기",slug:"기본적인-방법으로-출력하기",charIndex:2725},{level:3,title:"위젯 스킨을 사용하여 출력하기",slug:"위젯-스킨을-사용하여-출력하기",charIndex:3271},{level:2,title:"위젯 변수 사용하기",slug:"위젯-변수-사용하기",charIndex:3722},{level:3,title:"위젯 설정폼 구현",slug:"위젯-설정폼-구현",charIndex:3825},{level:3,title:"입력된 설정 정보 처리",slug:"입력된-설정-정보-처리",charIndex:4269},{level:3,title:"위젯을 출력할 때 위젯 변수 사용하기",slug:"위젯을-출력할-때-위젯-변수-사용하기",charIndex:4719}],headersStr:"클래스 생성하기 위젯 등록하기 위젯 등록하기 위젯 출력하기 기본적인 방법으로 출력하기 위젯 스킨을 사용하여 출력하기 위젯 변수 사용하기 위젯 설정폼 구현 입력된 설정 정보 처리 위젯을 출력할 때 위젯 변수 사용하기",content:"# 위젯 제작\n# 클래스 생성하기\n가장 먼저 해야할 작업은 다른 컴포넌트와 마찬가지로 추상클래스인 \\Xpressengine\\Widget\\AbstractWidget을 상속받는 클래스를 구현해야 합니다. 그 다음 구현한 클래스를 XE에 등록해 주면 됩니다. 위젯 작성법을 쉽게 이해할 수 있도록 '로그인 정보 위젯'을 예로 들어 설명하겠습니다. 로그인 정보 위젯은 현재 로그인되어 있는 회원의 정보를 출력하는 간단한 위젯입니다.\n\n<?php\n// plugins/myplugin/src/Widgets/UserInfoWidget.php\nnamespace MyPlugin\\Widgets;\n\nclass UserInfoWidget extends \\Xpressengine\\Widget\\AbstractWidget\n{\n    public function render()\n    {\n    }\n\n    public function renderSetting(array $args = [])\n    {\n    }\n\n    public function resolveSetting(array $inputs = [])\n    {\n    }\n}\n\n\n위와 같이 작성한 클래스 파일을 컴포넌트를 담을 플러그인에 생성합니다. 파일의 위치는 플러그인 디렉토리 내의 어느 곳이든 상관없습니다. 다만 플러그인 디렉토리의 src/Widgets/UserInfoWidget.php에 생성하는 것을 권장합니다.\n\n위젯 클래스는 기본적으로 작성해야 할 메소드가 있습니다.\n\nrender - 위젯을 출력할 때 호출되는 메소드입니다.\n\nrenderSetting - 위젯변수를 입력받기 위한 폼을 출력합니다. 위젯변수는 위젯을 출력할 때 필요한 컨텐츠에 대하여 사이트 관리자로부터 입력받는 값을 말합니다. 사이트 관리자가 위젯 생성기를 통해 위젯(위젯코드)을 생성할 때, 위젯 생성기는 이 메소드를 실행하여 위젯 변수 입력폼을 출력합니다.\n\nresolveSetting - 사이트 관리자가 위젯 생성기에서 입력한 위젯 변수를 조합하여 위젯코드를 생성합니다. 이 메소드는 입력받은 위젯 변수를 파라미터로 전달 받은 다음, 위젯 변수를 한번 재가공하여 반환합니다.\n\n# 위젯 등록하기\n작성한 위젯 클래스는 다른 컴포넌트와 마찬가지로 XE에 등록해야 합니다. 위젯은 widget/<plugin_name>@<pure_id> 형식의 컴포넌트 아이디를 지정해야 합니다. 여기에서는 widget/myplugin@userinfo를 아이디로 사용하겠습니다.\n\n등록 방법은 컴포넌트 등록 문서를 참고하시기 바랍니다.\n\n성공적으로 등록되었는지 아래 코드로 테스트해 볼 수 있습니다.\n\n<xewidget id=\"widget/myplugin@userinfo\"></xewidget># 위젯 제작 방법\n\n가장 먼저 해야할 작업은 다른 컴포넌트와 마찬가지로 추상클래스인 `\\Xpressengine\\Widget\\AbstractWidget`을 상속받는 클래스를 구현해야 합니다. 그 다음 구현한 클래스를 XE에 등록해 주면 됩니다.\n\n## 클래스 생성하기\n\n이 문서에서는 위젯 작성법을 쉽게 이해할 수 있도록 '로그인 정보 위젯'을 예로 들어 설명하겠습니다. 로그인 정보 위젯은 현재 로그인되어 있는 회원의 정보를 출력하는 간단한 위젯입니다.\n\n```php\n<?php\n// plugins/myplugin/src/Widgets/UserInfoWidget.php\nnamespace MyPlugin\\Widgets;\n\nclass UserInfoWidget extends \\Xpressengine\\Widget\\AbstractWidget\n{\n    public function render()\n    {\n    }\n\n    public function renderSetting(array $args = [])\n    {\n    }\n\n    public function resolveSetting(array $inputs = [])\n    {\n    }\n}\n\n\n위와 같이 작성한 클래스 파일을 컴포넌트를 담을 플러그인에 생성합니다. 파일의 위치는 플러그인 디렉토리 내의 어느 곳이든 상관없습니다. 다만 플러그인 디렉토리의 src/Widgets/UserInfoWidget.php에 생성하는 것을 권장합니다.\n\n위젯 클래스는 기본적으로 작성해야 할 메소드가 있습니다.\n\nrender - 위젯을 출력할 때 호출되는 메소드입니다.\n\nrenderSetting - 위젯변수를 입력받기 위한 폼을 출력합니다. 위젯변수는 위젯을 출력할 때 필요한 컨텐츠에 대하여 사이트 관리자로부터 입력받는 값을 말합니다. 사이트 관리자가 위젯 생성기를 통해 위젯(위젯코드)을 생성할 때, 위젯 생성기는 이 메소드를 실행하여 위젯 변수 입력폼을 출력합니다.\n\nresolveSetting - 사이트 관리자가 위젯 생성기에서 입력한 위젯 변수를 조합하여 위젯코드를 생성합니다. 이 메소드는 입력받은 위젯 변수를 파라미터로 전달 받은 다음, 위젯 변수를 한번 재가공하여 반환합니다.\n\n# 위젯 등록하기\n작성한 위젯 클래스는 다른 컴포넌트와 마찬가지로 XE에 등록해야 합니다. 위젯은 widget/<plugin_name>@<pure_id> 형식의 컴포넌트 아이디를 지정해야 합니다. 여기에서는 widget/myplugin@userinfo를 아이디로 사용하겠습니다.\n\n등록 방법은 컴포넌트 등록 문서를 참고하시기 바랍니다.\n\n성공적으로 등록되었는지 아래 코드로 테스트해 볼 수 있습니다.\n\n<xewidget id=\"widget/myplugin@userinfo\"></xewidget>\n\n\n# 위젯 출력하기\n# 기본적인 방법으로 출력하기\n앞서 말한 바와 같이, 위젯이 출력될 때에는 render 메소드가 사용됩니다.\n\n<?php\n// plugins/myplugin/src/Widgets/UserInfoWidget.php\nnamespace MyPlugin\\Widgets;\n\nclass LoginInfoWidget extends \\Xpressengine\\Widget\\AbstractWidget\n{\n    public function render()\n    {\n      // 로그인 상태일 경우, 로그인 회원의 이름이 출력\n      if(auth()->check()) {\n        return auth()->user()->getDisplayName();\n      } else {\n        return '로그인 상태가 아닙니다'\n      }\n    }\n}\n\n\n로그인 회원의 이름을 출력하거나 '로그인 상태가 아닙니다' 메시지를 출력하도록 작성된 코드입니다. 이 예제에서는 간단히 문자열을 반환했습니다. 좀 더 복잡한 위젯일 경우 블레이드 템플릿을 사용할 수도 있습니다.\n\n# 위젯 스킨을 사용하여 출력하기\n위젯은 스킨시스템을 기본적으로 지원합니다. 동일한 컨텐츠를 출력하는 위젯이라고 해도, 사이트의 디자인이나 테마에 따라 다른 스킨을 선택하여 출력할 수 있습니다.\n\n<?php\n// plugins/myplugin/src/Widgets/UserInfoWidget.php\n\n    ...\n\n    public function render()\n    {\n      $data = [\n        'isLogged' => auth()->check(),\n        'user' => auth()->user()\n      ];\n      return $this->renderSkin($data);\n    }\n\n\n위 코드에서와 같이 renderSkin을 사용하면 됩니다. renderSkin 메소드는 위젯코드에 지정된 스킨정보를 자동으로 가져온 다음, 스킨을 적용하여 출력합니다.\n\n# 위젯 변수 사용하기\n사이트 관리자로부터 위젯 변수를 입력받기 위해 위젯 생성기는 위젯 변수 입력폼을 출력합니다. 위젯 변수를 사용하려면 위젯 변수 입력폼을 먼저 작성해야 합니다.\n\n# 위젯 설정폼 구현\n위젯 클래스의 renderSetting 메소드가 위젯 변수 입력폼을 출력하도록 하십시오.\n\n<?php\n// plugins/myplugin/src/Widgets/UserInfoWidget.php\n\n    ...\n\n    public function renderSetting(array $args = [])\n    {\n      // 회원이름 뒤에 나오는 호칭(예: xxx님)\n      return uio('formText', ['name'=>'postfix', 'value'=>array_get($args, 'postfix'), 'label'=>'호칭', 'description'=>'회원이름 뒤에 출력될 호칭을 적어주세요']);\n    }\n\n\n위 코드의 경우, 위젯 생성기에 하나의 텍스트박스가 출력됩니다. 텍스트박스를 출력하기 위해 UI오브젝트를 사용하고 있습니다.\n\n# 입력된 설정 정보 처리\n사이트 관리자가 위젯 변수 입력폼에 입력한 내용을 위젯코드로 변환하기 전에 한번 더 재가공할 수 있습니다. resolveSetting 메소드를 사용하십시오. 위젯시스템은 위젯코드를 생성하기 전에 이 메소드를 실행합니다. 만약 사용자가 입력한 위젯 변수의 유효성 검사나 재처리가 필요하다면 이 메소드에 구현하면 됩니다.\n\n<?php\n// plugins/myplugin/src/Widgets/UserInfoWidget.php\n\n    ...\n\n    public function resolveSetting(array $inputs = [])\n    {\n      if(!array_get($inputs, 'postfix'))\n      {\n        throw new ValidationException();\n      }\n\n      return $input;\n    }\n\n\n# 위젯을 출력할 때 위젯 변수 사용하기\n사이트 관리자가 입력한 위젯 변수는 render 메소드에서 바로 사용할 수 있습니다. 위젯변수는 $this->config 배열에 저장되어 있습니다.\n\n<?php\n// plugins/myplugin/src/Widgets/UserInfoWidget.php\n\n    ...\n\n    public function render()\n    {\n        // 로그인 상태일 경우, 로그인 회원의 이름이 출력\n        if(auth()->check()) {\n          return auth()->user()->getDisplayName().array_get($this->config, 'postfix');\n        } else {\n          return '로그인 상태가 아닙니다'\n        }\n    }\n}",contentLowercase:"# 위젯 제작\n# 클래스 생성하기\n가장 먼저 해야할 작업은 다른 컴포넌트와 마찬가지로 추상클래스인 \\xpressengine\\widget\\abstractwidget을 상속받는 클래스를 구현해야 합니다. 그 다음 구현한 클래스를 xe에 등록해 주면 됩니다. 위젯 작성법을 쉽게 이해할 수 있도록 '로그인 정보 위젯'을 예로 들어 설명하겠습니다. 로그인 정보 위젯은 현재 로그인되어 있는 회원의 정보를 출력하는 간단한 위젯입니다.\n\n<?php\n// plugins/myplugin/src/widgets/userinfowidget.php\nnamespace myplugin\\widgets;\n\nclass userinfowidget extends \\xpressengine\\widget\\abstractwidget\n{\n    public function render()\n    {\n    }\n\n    public function rendersetting(array $args = [])\n    {\n    }\n\n    public function resolvesetting(array $inputs = [])\n    {\n    }\n}\n\n\n위와 같이 작성한 클래스 파일을 컴포넌트를 담을 플러그인에 생성합니다. 파일의 위치는 플러그인 디렉토리 내의 어느 곳이든 상관없습니다. 다만 플러그인 디렉토리의 src/widgets/userinfowidget.php에 생성하는 것을 권장합니다.\n\n위젯 클래스는 기본적으로 작성해야 할 메소드가 있습니다.\n\nrender - 위젯을 출력할 때 호출되는 메소드입니다.\n\nrendersetting - 위젯변수를 입력받기 위한 폼을 출력합니다. 위젯변수는 위젯을 출력할 때 필요한 컨텐츠에 대하여 사이트 관리자로부터 입력받는 값을 말합니다. 사이트 관리자가 위젯 생성기를 통해 위젯(위젯코드)을 생성할 때, 위젯 생성기는 이 메소드를 실행하여 위젯 변수 입력폼을 출력합니다.\n\nresolvesetting - 사이트 관리자가 위젯 생성기에서 입력한 위젯 변수를 조합하여 위젯코드를 생성합니다. 이 메소드는 입력받은 위젯 변수를 파라미터로 전달 받은 다음, 위젯 변수를 한번 재가공하여 반환합니다.\n\n# 위젯 등록하기\n작성한 위젯 클래스는 다른 컴포넌트와 마찬가지로 xe에 등록해야 합니다. 위젯은 widget/<plugin_name>@<pure_id> 형식의 컴포넌트 아이디를 지정해야 합니다. 여기에서는 widget/myplugin@userinfo를 아이디로 사용하겠습니다.\n\n등록 방법은 컴포넌트 등록 문서를 참고하시기 바랍니다.\n\n성공적으로 등록되었는지 아래 코드로 테스트해 볼 수 있습니다.\n\n<xewidget id=\"widget/myplugin@userinfo\"></xewidget># 위젯 제작 방법\n\n가장 먼저 해야할 작업은 다른 컴포넌트와 마찬가지로 추상클래스인 `\\xpressengine\\widget\\abstractwidget`을 상속받는 클래스를 구현해야 합니다. 그 다음 구현한 클래스를 xe에 등록해 주면 됩니다.\n\n## 클래스 생성하기\n\n이 문서에서는 위젯 작성법을 쉽게 이해할 수 있도록 '로그인 정보 위젯'을 예로 들어 설명하겠습니다. 로그인 정보 위젯은 현재 로그인되어 있는 회원의 정보를 출력하는 간단한 위젯입니다.\n\n```php\n<?php\n// plugins/myplugin/src/widgets/userinfowidget.php\nnamespace myplugin\\widgets;\n\nclass userinfowidget extends \\xpressengine\\widget\\abstractwidget\n{\n    public function render()\n    {\n    }\n\n    public function rendersetting(array $args = [])\n    {\n    }\n\n    public function resolvesetting(array $inputs = [])\n    {\n    }\n}\n\n\n위와 같이 작성한 클래스 파일을 컴포넌트를 담을 플러그인에 생성합니다. 파일의 위치는 플러그인 디렉토리 내의 어느 곳이든 상관없습니다. 다만 플러그인 디렉토리의 src/widgets/userinfowidget.php에 생성하는 것을 권장합니다.\n\n위젯 클래스는 기본적으로 작성해야 할 메소드가 있습니다.\n\nrender - 위젯을 출력할 때 호출되는 메소드입니다.\n\nrendersetting - 위젯변수를 입력받기 위한 폼을 출력합니다. 위젯변수는 위젯을 출력할 때 필요한 컨텐츠에 대하여 사이트 관리자로부터 입력받는 값을 말합니다. 사이트 관리자가 위젯 생성기를 통해 위젯(위젯코드)을 생성할 때, 위젯 생성기는 이 메소드를 실행하여 위젯 변수 입력폼을 출력합니다.\n\nresolvesetting - 사이트 관리자가 위젯 생성기에서 입력한 위젯 변수를 조합하여 위젯코드를 생성합니다. 이 메소드는 입력받은 위젯 변수를 파라미터로 전달 받은 다음, 위젯 변수를 한번 재가공하여 반환합니다.\n\n# 위젯 등록하기\n작성한 위젯 클래스는 다른 컴포넌트와 마찬가지로 xe에 등록해야 합니다. 위젯은 widget/<plugin_name>@<pure_id> 형식의 컴포넌트 아이디를 지정해야 합니다. 여기에서는 widget/myplugin@userinfo를 아이디로 사용하겠습니다.\n\n등록 방법은 컴포넌트 등록 문서를 참고하시기 바랍니다.\n\n성공적으로 등록되었는지 아래 코드로 테스트해 볼 수 있습니다.\n\n<xewidget id=\"widget/myplugin@userinfo\"></xewidget>\n\n\n# 위젯 출력하기\n# 기본적인 방법으로 출력하기\n앞서 말한 바와 같이, 위젯이 출력될 때에는 render 메소드가 사용됩니다.\n\n<?php\n// plugins/myplugin/src/widgets/userinfowidget.php\nnamespace myplugin\\widgets;\n\nclass logininfowidget extends \\xpressengine\\widget\\abstractwidget\n{\n    public function render()\n    {\n      // 로그인 상태일 경우, 로그인 회원의 이름이 출력\n      if(auth()->check()) {\n        return auth()->user()->getdisplayname();\n      } else {\n        return '로그인 상태가 아닙니다'\n      }\n    }\n}\n\n\n로그인 회원의 이름을 출력하거나 '로그인 상태가 아닙니다' 메시지를 출력하도록 작성된 코드입니다. 이 예제에서는 간단히 문자열을 반환했습니다. 좀 더 복잡한 위젯일 경우 블레이드 템플릿을 사용할 수도 있습니다.\n\n# 위젯 스킨을 사용하여 출력하기\n위젯은 스킨시스템을 기본적으로 지원합니다. 동일한 컨텐츠를 출력하는 위젯이라고 해도, 사이트의 디자인이나 테마에 따라 다른 스킨을 선택하여 출력할 수 있습니다.\n\n<?php\n// plugins/myplugin/src/widgets/userinfowidget.php\n\n    ...\n\n    public function render()\n    {\n      $data = [\n        'islogged' => auth()->check(),\n        'user' => auth()->user()\n      ];\n      return $this->renderskin($data);\n    }\n\n\n위 코드에서와 같이 renderskin을 사용하면 됩니다. renderskin 메소드는 위젯코드에 지정된 스킨정보를 자동으로 가져온 다음, 스킨을 적용하여 출력합니다.\n\n# 위젯 변수 사용하기\n사이트 관리자로부터 위젯 변수를 입력받기 위해 위젯 생성기는 위젯 변수 입력폼을 출력합니다. 위젯 변수를 사용하려면 위젯 변수 입력폼을 먼저 작성해야 합니다.\n\n# 위젯 설정폼 구현\n위젯 클래스의 rendersetting 메소드가 위젯 변수 입력폼을 출력하도록 하십시오.\n\n<?php\n// plugins/myplugin/src/widgets/userinfowidget.php\n\n    ...\n\n    public function rendersetting(array $args = [])\n    {\n      // 회원이름 뒤에 나오는 호칭(예: xxx님)\n      return uio('formtext', ['name'=>'postfix', 'value'=>array_get($args, 'postfix'), 'label'=>'호칭', 'description'=>'회원이름 뒤에 출력될 호칭을 적어주세요']);\n    }\n\n\n위 코드의 경우, 위젯 생성기에 하나의 텍스트박스가 출력됩니다. 텍스트박스를 출력하기 위해 ui오브젝트를 사용하고 있습니다.\n\n# 입력된 설정 정보 처리\n사이트 관리자가 위젯 변수 입력폼에 입력한 내용을 위젯코드로 변환하기 전에 한번 더 재가공할 수 있습니다. resolvesetting 메소드를 사용하십시오. 위젯시스템은 위젯코드를 생성하기 전에 이 메소드를 실행합니다. 만약 사용자가 입력한 위젯 변수의 유효성 검사나 재처리가 필요하다면 이 메소드에 구현하면 됩니다.\n\n<?php\n// plugins/myplugin/src/widgets/userinfowidget.php\n\n    ...\n\n    public function resolvesetting(array $inputs = [])\n    {\n      if(!array_get($inputs, 'postfix'))\n      {\n        throw new validationexception();\n      }\n\n      return $input;\n    }\n\n\n# 위젯을 출력할 때 위젯 변수 사용하기\n사이트 관리자가 입력한 위젯 변수는 render 메소드에서 바로 사용할 수 있습니다. 위젯변수는 $this->config 배열에 저장되어 있습니다.\n\n<?php\n// plugins/myplugin/src/widgets/userinfowidget.php\n\n    ...\n\n    public function render()\n    {\n        // 로그인 상태일 경우, 로그인 회원의 이름이 출력\n        if(auth()->check()) {\n          return auth()->user()->getdisplayname().array_get($this->config, 'postfix');\n        } else {\n          return '로그인 상태가 아닙니다'\n        }\n    }\n}",charsets:{cjk:!0}},{title:"플러그인 정보 추가 및 수정",frontmatter:{},regularPath:"/05.%20%ED%94%8C%EB%9F%AC%EA%B7%B8%EC%9D%B8%20%EA%B0%9C%EB%B0%9C/creator-info-edit.html",relativePath:"05. 플러그인 개발/creator-info-edit.md",key:"v-bfa7b8ea",path:"/05.%20%ED%94%8C%EB%9F%AC%EA%B7%B8%EC%9D%B8%20%EA%B0%9C%EB%B0%9C/creator-info-edit.html",headers:[{level:2,title:"플러그인 이름 생성하기",slug:"플러그인-이름-생성하기",charIndex:20}],headersStr:"플러그인 이름 생성하기",content:'# 플러그인 정보 추가 및 수정\n# 플러그인 이름 생성하기\nXE에서 제공하는 php artisan 명령어로 플러그인을 만든경우 설치된 익스텐션 페이지에서 확인할 수 있는 이름은 플러그인이름 + Plugin이며, 이름과 설명은 기본적인 더미 설명으로 채워져있습니다. [이미지]\n\n이 항목을 수정하기 위하여 XE/plugins/만든플러그인명/composer.json 파일을 엽니다.\n\n생성된 직후의 플러그인의 composer.json 파일을 아래처럼 수정해줍니다.\n\n{\n  "name": "xpressengine-plugin/dummy",\n  "description": "이곳에는 플러그인 설명을 담습니다. 이 플러그인은 더미 플러그인 입니다.",\n  "keywords": [\n    "xpressengine",\n    "plugin"\n  ],\n  "license": "LGPL-3.0-or-later",\n  "version": "1.0.0",\n  "type": "xpressengine-plugin",\n  "support": {\n    //사용자에게 지원이 가능한 이메일 주소를 입력합니다.\n    "email": "contact@xpressengine.com"\n  },\n  "authors": [\n    {\n    //창작자의 이름(활동명), 이메일, 웹사이트 주소를 순서대로 적습니다.\n      "name": "XEHub",\n      "email": "contact@xpressengine.com",\n      "homepage": "https://xpressengine.io/",\n      "role": "Developer"\n    }\n  ],\n  "extra": {\n    "xpressengine": {\n    //설치된 익스텐션 페이지에 노출될 플러그인 이름을 입력합니다.\n      "title": "플러그인 생성 테스트용 이름.",\n      "component": {}\n    }\n  },\n  "require": {\n    //플러그인이 지원할 XE 코어의 최저 버전을 입력합니다.\n    "xpressengine/xpressengine": "~3.0.4"\n  },\n  "autoload": {\n    "psr-4": {\n      "LuisK\\\\XePlugin\\\\Dummy\\\\": "src/"\n    }\n  }\n}\n\n\n해당 항목을 그대로 복사하지 않고, 주석을 보고 창작자의 정보를 기입하시기 바랍니다.',contentLowercase:'# 플러그인 정보 추가 및 수정\n# 플러그인 이름 생성하기\nxe에서 제공하는 php artisan 명령어로 플러그인을 만든경우 설치된 익스텐션 페이지에서 확인할 수 있는 이름은 플러그인이름 + plugin이며, 이름과 설명은 기본적인 더미 설명으로 채워져있습니다. [이미지]\n\n이 항목을 수정하기 위하여 xe/plugins/만든플러그인명/composer.json 파일을 엽니다.\n\n생성된 직후의 플러그인의 composer.json 파일을 아래처럼 수정해줍니다.\n\n{\n  "name": "xpressengine-plugin/dummy",\n  "description": "이곳에는 플러그인 설명을 담습니다. 이 플러그인은 더미 플러그인 입니다.",\n  "keywords": [\n    "xpressengine",\n    "plugin"\n  ],\n  "license": "lgpl-3.0-or-later",\n  "version": "1.0.0",\n  "type": "xpressengine-plugin",\n  "support": {\n    //사용자에게 지원이 가능한 이메일 주소를 입력합니다.\n    "email": "contact@xpressengine.com"\n  },\n  "authors": [\n    {\n    //창작자의 이름(활동명), 이메일, 웹사이트 주소를 순서대로 적습니다.\n      "name": "xehub",\n      "email": "contact@xpressengine.com",\n      "homepage": "https://xpressengine.io/",\n      "role": "developer"\n    }\n  ],\n  "extra": {\n    "xpressengine": {\n    //설치된 익스텐션 페이지에 노출될 플러그인 이름을 입력합니다.\n      "title": "플러그인 생성 테스트용 이름.",\n      "component": {}\n    }\n  },\n  "require": {\n    //플러그인이 지원할 xe 코어의 최저 버전을 입력합니다.\n    "xpressengine/xpressengine": "~3.0.4"\n  },\n  "autoload": {\n    "psr-4": {\n      "luisk\\\\xeplugin\\\\dummy\\\\": "src/"\n    }\n  }\n}\n\n\n해당 항목을 그대로 복사하지 않고, 주석을 보고 창작자의 정보를 기입하시기 바랍니다.',charsets:{cjk:!0}},{title:"다이나믹 필드 제작 방법",frontmatter:{},regularPath:"/05.%20%ED%94%8C%EB%9F%AC%EA%B7%B8%EC%9D%B8%20%EA%B0%9C%EB%B0%9C/dynamic-field-guide.html",relativePath:"05. 플러그인 개발/dynamic-field-guide.md",key:"v-6186256b",path:"/05.%20%ED%94%8C%EB%9F%AC%EA%B7%B8%EC%9D%B8%20%EA%B0%9C%EB%B0%9C/dynamic-field-guide.html",headers:[{level:2,title:"다이나믹 필드",slug:"다이나믹-필드",charIndex:2},{level:3,title:"AbstractType",slug:"abstracttype",charIndex:178},{level:3,title:"빈 다이나믹 필드 생성 \\(draft\\)",slug:"빈-다이나믹-필드-생성-draft",charIndex:692},{level:3,title:"다이나믹 필드 등록",slug:"다이나믹-필드-등록",charIndex:1066},{level:3,title:"관리자 설정 페이지",slug:"관리자-설정-페이지",charIndex:1639}],headersStr:"다이나믹 필드 AbstractType 빈 다이나믹 필드 생성 \\(draft\\) 다이나믹 필드 등록 관리자 설정 페이지",content:'# 다이나믹 필드 제작 방법\n# 다이나믹 필드\n사이트 관리자가 사용자 입력 필드를 추가할 수 있는 기능을 제공합니다. 회원, 게시판 관리 페이지에서 기능을 제공하고 있습니다. 입력 필드 추가 기능은 다른 서드 파티 플러그인 에서도 제공할 수 있습니다.\n\n다이나믹 필드는 다양한 형태를 제공할 수 있도록 설계되었습니다. AbstractType 클래스로 데이터를 처리하기 위한 형태만 제한하고 다이나믹 필드 제작자가 유연하게 구현할 수 있도록 했습니다. 다이나믹 필드는 데이터를 처리하는 _필드 타입_과 출력에 필요한 처리를 담당하는 필드 스킨 으로 구성 됩니다. 여기는 필드 타입 에 대한 설명입니다.\n\n# AbstractType\n다이나믹 필드를 만들때 사용 되는 추상클래스 입니다. 모든 다이나믹 필드는 반드시 이 추상클래스를 사용합니다. 이것은 각 구현체가 제공하기 위한 필요한 데이터베이스 테이블 컬럼의 정의와 데이터를 처리하는데 집중할 수 있도록 해줍니다.\n\nclass Address extends AbstractType {}\n\nclass Category extends AbstractType {}\n\n\n데이터베이스 테이블 생성,삭제 그리고 데이터 등록,수정,삭제 및 검색에 필요한 요소를 구현했습니다. 제작자는 다이나믹 필드의 이름, 설명, 데이터베이스 테이블 컬럼 구성등의 정보만 처리하여 새로운 필드를 만들 수 있습니다.\n\n# 빈 다이나믹 필드 생성 (draft)\n다이나믹 필드 생성 커맨드를 사용하려면 우선 플러그인이 마련되어 있어야 합니다. 플러그인 생성은 플러그인 개발 시작하기를 참고 바랍니다.\n\n아래 커맨드로 빈 다이나믹 필드를 만들 수 있습니다.\n\n$ php artisan make:field <plugin> <name>\n\n\nplugin은 다이나믹 필드가 위치할 플러그인 이름입니다. 플러그인 디렉토리 명을 입력합니다.\nname에는 다이나믹 필드의 아이디를 입력합니다.\n\n# 컴포넌트 아이디\n컴포넌트 아이디는 아래와 같은 규칙으로 작성합니다.\n\nfieldType/<plugin>@<name>\n\n\nplugin은 플러그인 디렉토리 이름이고 name는 다이나믹 필드의 아이디 입니다.\n\n# 다이나믹 필드 등록\n커맨드를 사용할 경우, 자동으로 등록됩니다. 플러그인의 composer.json 파일에 아래와 같이 컴포넌트 정보가 등록되어 있습니다.\n\n// plugins/my_plugin/composer.json\n...\n  "extra": {\n        "xpressengine": {\n            "title": "my plugin",\n            "component": {\n                "fieldType/my_plugin@my_field": {\n                    "class": "GilDongHong\\\\XePlugin\\\\MyPlugin\\\\DynamicFields\\\\MyField\\\\MyFieldField",\n                    "name": "my_field fieldType",\n                    "description": "The fieldType supported by My_plugin plugin."\n                }\n            }\n        }\n    },\n\n    ...\n\n\n# 관리자 설정 페이지\n다이나믹 필드를 생성할 때 사용자로 부터 입력값이 필요하다면 getSettingsView() 메소드를 구현 합니다. 제작자는 $config를 이용해 설정 입력 폼을 추가할 수 있습니다. 카테고리 다이나믹 필드(/app/FieldTypes/Category.php) 클래스를 참고하세요.',contentLowercase:'# 다이나믹 필드 제작 방법\n# 다이나믹 필드\n사이트 관리자가 사용자 입력 필드를 추가할 수 있는 기능을 제공합니다. 회원, 게시판 관리 페이지에서 기능을 제공하고 있습니다. 입력 필드 추가 기능은 다른 서드 파티 플러그인 에서도 제공할 수 있습니다.\n\n다이나믹 필드는 다양한 형태를 제공할 수 있도록 설계되었습니다. abstracttype 클래스로 데이터를 처리하기 위한 형태만 제한하고 다이나믹 필드 제작자가 유연하게 구현할 수 있도록 했습니다. 다이나믹 필드는 데이터를 처리하는 _필드 타입_과 출력에 필요한 처리를 담당하는 필드 스킨 으로 구성 됩니다. 여기는 필드 타입 에 대한 설명입니다.\n\n# abstracttype\n다이나믹 필드를 만들때 사용 되는 추상클래스 입니다. 모든 다이나믹 필드는 반드시 이 추상클래스를 사용합니다. 이것은 각 구현체가 제공하기 위한 필요한 데이터베이스 테이블 컬럼의 정의와 데이터를 처리하는데 집중할 수 있도록 해줍니다.\n\nclass address extends abstracttype {}\n\nclass category extends abstracttype {}\n\n\n데이터베이스 테이블 생성,삭제 그리고 데이터 등록,수정,삭제 및 검색에 필요한 요소를 구현했습니다. 제작자는 다이나믹 필드의 이름, 설명, 데이터베이스 테이블 컬럼 구성등의 정보만 처리하여 새로운 필드를 만들 수 있습니다.\n\n# 빈 다이나믹 필드 생성 (draft)\n다이나믹 필드 생성 커맨드를 사용하려면 우선 플러그인이 마련되어 있어야 합니다. 플러그인 생성은 플러그인 개발 시작하기를 참고 바랍니다.\n\n아래 커맨드로 빈 다이나믹 필드를 만들 수 있습니다.\n\n$ php artisan make:field <plugin> <name>\n\n\nplugin은 다이나믹 필드가 위치할 플러그인 이름입니다. 플러그인 디렉토리 명을 입력합니다.\nname에는 다이나믹 필드의 아이디를 입력합니다.\n\n# 컴포넌트 아이디\n컴포넌트 아이디는 아래와 같은 규칙으로 작성합니다.\n\nfieldtype/<plugin>@<name>\n\n\nplugin은 플러그인 디렉토리 이름이고 name는 다이나믹 필드의 아이디 입니다.\n\n# 다이나믹 필드 등록\n커맨드를 사용할 경우, 자동으로 등록됩니다. 플러그인의 composer.json 파일에 아래와 같이 컴포넌트 정보가 등록되어 있습니다.\n\n// plugins/my_plugin/composer.json\n...\n  "extra": {\n        "xpressengine": {\n            "title": "my plugin",\n            "component": {\n                "fieldtype/my_plugin@my_field": {\n                    "class": "gildonghong\\\\xeplugin\\\\myplugin\\\\dynamicfields\\\\myfield\\\\myfieldfield",\n                    "name": "my_field fieldtype",\n                    "description": "the fieldtype supported by my_plugin plugin."\n                }\n            }\n        }\n    },\n\n    ...\n\n\n# 관리자 설정 페이지\n다이나믹 필드를 생성할 때 사용자로 부터 입력값이 필요하다면 getsettingsview() 메소드를 구현 합니다. 제작자는 $config를 이용해 설정 입력 폼을 추가할 수 있습니다. 카테고리 다이나믹 필드(/app/fieldtypes/category.php) 클래스를 참고하세요.',charsets:{cjk:!0}},{title:"에디터 제작 방법",frontmatter:{},regularPath:"/05.%20%ED%94%8C%EB%9F%AC%EA%B7%B8%EC%9D%B8%20%EA%B0%9C%EB%B0%9C/editor-guide.html",relativePath:"05. 플러그인 개발/editor-guide.md",key:"v-78ce2cd2",path:"/05.%20%ED%94%8C%EB%9F%AC%EA%B7%B8%EC%9D%B8%20%EA%B0%9C%EB%B0%9C/editor-guide.html",headers:[{level:2,title:"에디터",slug:"에디터",charIndex:2},{level:3,title:"에디터 생성",slug:"에디터-생성",charIndex:76},{level:3,title:"Frontend",slug:"frontend",charIndex:1216}],headersStr:"에디터 에디터 생성 Frontend",content:"# 에디터 제작 방법\n# 에디터\nXE에서는 에디터를 추가하여 사용할 수 있고, 또한 에디터에서 사용할 도구를 추가할 수 있습니다.\n\n# 에디터 생성\n# 컴포넌트 추가\n에디터가 사용되기 위해선 AbstractEditor 를 상속받은 컴포넌트가 생성되어야 합니다. 그리고 정의된 추상 메서드를 구현하세요.\n\n * getName: js 스크립트에서 정의된 에디터의 이름입니다.\n * htmlable: 해당 에디터가 wisywig 에디터 인지를 반환합니다.\n * compileBody: 작성된 내용이 에디터를 통해 출력되기전 출력을 위한 처리동작을 수행합니다.\n\n# 스크립트 load\n에디터는 frontend 에서 동작하므로 js 파일을 필요로 합니다. 이때 해당 파일을 불러오기 위한 방법으로 다음과 같은 방식을 권장합니다.\n\n이벤트\n\n에디터는 표현되기 전에 처리하기 위한 이벤트 시점이 등록되어 있습니다. 이 이벤트 시점에 에디터에서 사용하고자 하는 스크립트 파일을 불러올 수 있습니다.\n\napp('event')->listen('xe.editor.render', function ($editor) {\n  app('xe.frontend')->js('path/to/editor.js')->load();\n  app('xe.frontend')->js('path/to/editor.define.js')->before(['path/to/editor.js', 'assets/core/common/js/xe.editor.core.js'])->load();\n});\n\n\noverride\n\n에디터는 AbstractEditor 의 render 메서드를 통해 표현됩니다. 에디터는 이 메서드를 구현하여 원하는 동작을 추가할 수 있습니다.\n\npublic function render()\n{\n  app('xe.frontend')->js('path/to/editor.js')->load();\n  app('xe.frontend')->js('path/to/editor.define.js')->before(['path/to/editor.js', 'assets/core/common/js/xe.editor.core.js'])->load();\n\n  return parent::render();\n}\n\n\n>  에디터를 정의한 스크립트 파일은 반드시 XE의 xe.editor.core.js 를 필요로 합니다. 그러므로 XE core 의 스크립트가 해당 에디터 스크립트보다 먼저 불러질 수 있도록 하여야 합니다.\n\n\n# Frontend\n# XEeditor\n프론트엔드에서는 기본적으로 에디터 Core가 있고 인터페이스 구현을 통해 에디터기능을 정의할 수 있습니다. XEeditor에서는 구현되는 에디터들의 인터페이스를 정의하고 생성된 에디터 인스턴스들을 관리합니다. 에디터 Core의 코드는 xpressengine/assets/core/common/js/xe.editor.core.js에서 확인할 수 있습니다.\n\nXEeditor.define(object)\n\nxe.editor.core.js에서는 에디터의 인터페이스가 존재하며 에디터를 정의하기 위해 아래의 형식과 같이 XEeditor.define을 통해 아래의 형식들을 구현하여 에디터를 정의합니다.\n\nXEeditor.define({\n  editorSettings: {\n    name: \"\",\n    configs: {},\n  },\n  interfaces: {\n    initialize: function (selector, options) {},\n    getContents: function () {},\n    setContents: function (text) {},\n    addContents: function (text) {},\n    on: function (eventName, callback) {},\n    reset: function () {},\n  },\n});\n\n\neditorSettings\n\nname (string) 필수\n\n에디터의 명칭을 정의합니다. 추후 에디터 사용시 XEeditor.getEditor('에디터명')으로 정의된 에디터를 가져올때 사용됩니다.\n\nconfigs(object)\n\n에디터 생성시 사용되는 공통 config들을 정의합니다.\n\ninterfaces\n\n에디터 Core에서 정의된 인터페이스들로 일부 인터페이스들은 필수로 구현되어야 합니다.\n\naddProps(object)\n\n각 구현되는 인터페이스들의 함수 내부에서 사용가능하며 object로 데이터를 저장할 수 있습니다. 추가된 데이터는 this.props['프로퍼티명']으로 사용 가능합니다.\n\ninitialize(selector, options) 필수구현\n\n * selector (string)\n * options (object)\n\n에디터 생성시 호출되며 selector와 configs에서 정의된 옵션을 인자로 받을 수 있습니다.\n\n//예시\ninitialize: function(selector, options) {\n  var editor = CKEDITOR.replace(selector, options);\n\n  //selector를 저장\n  this.addProps({\n    selector: selector\n  });\n\n  this.on(\"instanceReady\", ...\n}\n\n\ngetContents 필수구현\n\n에디터의 컨텐츠를 리턴해주는 인터페이스로 필수 구현되어야 합니다.\n\n//예시\ngetContents: function() {\n  return CKEDITOR.instances[this.props.selector].getData();\n}\n\n\nsetContents(content) 필수구현\n\n * content (string)\n\n에디터의 컨텐츠를 입력하는 인터페이스로 필수 구현되어야 합니다.\n\n//예시\nsetContents: function(content) {\n  CKEDITOR.instances[this.props.selector].setData(content);\n}\n\n\naddContents(content) 필수구현\n\n * content (string)\n\n에디터의 컨텐츠를 추가하는 인터페이스로 필수 구현되어야 합니다.\n\n//예시\naddContents: function(content) {\n  CKEDITOR.instances[this.props.selector].insertHtml(content);\n}\n\n\non(eventName, callback)\n\n * eventName (string)\n * callback (function)\n\n에디터의 이벤트를 정의하는 인터페이스입니다.\n\n//예시\non: function(eventName, callback) {\n  CKEDITOR.instances[this.props.selector].on(eventName, callback);\n}\n\n\nreset\n\n에디터를 초기화하는 인터페이스입니다.\n\n//예시\nreset: function() {\n  this.setContents(\"\");\n}\n\n\naddTools(toolsMap, toolInfoList)\n\n * toolsMap (object) 정의된 툴의 정보\n * toolInfoList (array) 에디터가 create될때 4번째 인자로 받은 값 (id, icon 정보 등)\n\n툴정보가 있을 경우 에디터 Core에서 등록된 툴정보들을 addTools인터페이스를 통해 전달합니다. 정의된 에디터에서는 addTools 인터페이스를 통해 넘겨 받은 tool정보로 툴들을 등록하는 코드를 구현해야 합니다.\n\n//예시\naddTools: function(toolsMap, toolInfoList) {\n  var editor = this.props.editor;\n  var component = toolsMap[toolInfoList[0].id];\n  var toolOption = component.props;\n\n  toolOption.options.icon = toolInfoList[0].icon;\n\n  editor.ui.add(editorOption.name, CKEDITOR.UI_BUTTON, toolOption);\n  editor.addCommand(editorOption.options.command, function() {\n    return {\n      exec: function(editor) {\n        component.events.iconClick(editor);\n      }\n    }\n  })\n}\n\n\n# 에디터 생성\nXEeditor.getEditor('에디터명').create(selector, options, editorOptions, toolInfoList)\n\n * selector (string) - 생성되는 에디터의 selector\n * options (object) - 에디터 생성시 필요한 옵션\n * editorOptions (object) - 에디터 옵션\n * toolInfoList (array) - 등록된 tool정보\n\n정의된 에디터를 생성하기 위해서는 XEeditor.getEditor('에디터명').create를 통해 생성할 수 있습니다.",contentLowercase:"# 에디터 제작 방법\n# 에디터\nxe에서는 에디터를 추가하여 사용할 수 있고, 또한 에디터에서 사용할 도구를 추가할 수 있습니다.\n\n# 에디터 생성\n# 컴포넌트 추가\n에디터가 사용되기 위해선 abstracteditor 를 상속받은 컴포넌트가 생성되어야 합니다. 그리고 정의된 추상 메서드를 구현하세요.\n\n * getname: js 스크립트에서 정의된 에디터의 이름입니다.\n * htmlable: 해당 에디터가 wisywig 에디터 인지를 반환합니다.\n * compilebody: 작성된 내용이 에디터를 통해 출력되기전 출력을 위한 처리동작을 수행합니다.\n\n# 스크립트 load\n에디터는 frontend 에서 동작하므로 js 파일을 필요로 합니다. 이때 해당 파일을 불러오기 위한 방법으로 다음과 같은 방식을 권장합니다.\n\n이벤트\n\n에디터는 표현되기 전에 처리하기 위한 이벤트 시점이 등록되어 있습니다. 이 이벤트 시점에 에디터에서 사용하고자 하는 스크립트 파일을 불러올 수 있습니다.\n\napp('event')->listen('xe.editor.render', function ($editor) {\n  app('xe.frontend')->js('path/to/editor.js')->load();\n  app('xe.frontend')->js('path/to/editor.define.js')->before(['path/to/editor.js', 'assets/core/common/js/xe.editor.core.js'])->load();\n});\n\n\noverride\n\n에디터는 abstracteditor 의 render 메서드를 통해 표현됩니다. 에디터는 이 메서드를 구현하여 원하는 동작을 추가할 수 있습니다.\n\npublic function render()\n{\n  app('xe.frontend')->js('path/to/editor.js')->load();\n  app('xe.frontend')->js('path/to/editor.define.js')->before(['path/to/editor.js', 'assets/core/common/js/xe.editor.core.js'])->load();\n\n  return parent::render();\n}\n\n\n>  에디터를 정의한 스크립트 파일은 반드시 xe의 xe.editor.core.js 를 필요로 합니다. 그러므로 xe core 의 스크립트가 해당 에디터 스크립트보다 먼저 불러질 수 있도록 하여야 합니다.\n\n\n# frontend\n# xeeditor\n프론트엔드에서는 기본적으로 에디터 core가 있고 인터페이스 구현을 통해 에디터기능을 정의할 수 있습니다. xeeditor에서는 구현되는 에디터들의 인터페이스를 정의하고 생성된 에디터 인스턴스들을 관리합니다. 에디터 core의 코드는 xpressengine/assets/core/common/js/xe.editor.core.js에서 확인할 수 있습니다.\n\nxeeditor.define(object)\n\nxe.editor.core.js에서는 에디터의 인터페이스가 존재하며 에디터를 정의하기 위해 아래의 형식과 같이 xeeditor.define을 통해 아래의 형식들을 구현하여 에디터를 정의합니다.\n\nxeeditor.define({\n  editorsettings: {\n    name: \"\",\n    configs: {},\n  },\n  interfaces: {\n    initialize: function (selector, options) {},\n    getcontents: function () {},\n    setcontents: function (text) {},\n    addcontents: function (text) {},\n    on: function (eventname, callback) {},\n    reset: function () {},\n  },\n});\n\n\neditorsettings\n\nname (string) 필수\n\n에디터의 명칭을 정의합니다. 추후 에디터 사용시 xeeditor.geteditor('에디터명')으로 정의된 에디터를 가져올때 사용됩니다.\n\nconfigs(object)\n\n에디터 생성시 사용되는 공통 config들을 정의합니다.\n\ninterfaces\n\n에디터 core에서 정의된 인터페이스들로 일부 인터페이스들은 필수로 구현되어야 합니다.\n\naddprops(object)\n\n각 구현되는 인터페이스들의 함수 내부에서 사용가능하며 object로 데이터를 저장할 수 있습니다. 추가된 데이터는 this.props['프로퍼티명']으로 사용 가능합니다.\n\ninitialize(selector, options) 필수구현\n\n * selector (string)\n * options (object)\n\n에디터 생성시 호출되며 selector와 configs에서 정의된 옵션을 인자로 받을 수 있습니다.\n\n//예시\ninitialize: function(selector, options) {\n  var editor = ckeditor.replace(selector, options);\n\n  //selector를 저장\n  this.addprops({\n    selector: selector\n  });\n\n  this.on(\"instanceready\", ...\n}\n\n\ngetcontents 필수구현\n\n에디터의 컨텐츠를 리턴해주는 인터페이스로 필수 구현되어야 합니다.\n\n//예시\ngetcontents: function() {\n  return ckeditor.instances[this.props.selector].getdata();\n}\n\n\nsetcontents(content) 필수구현\n\n * content (string)\n\n에디터의 컨텐츠를 입력하는 인터페이스로 필수 구현되어야 합니다.\n\n//예시\nsetcontents: function(content) {\n  ckeditor.instances[this.props.selector].setdata(content);\n}\n\n\naddcontents(content) 필수구현\n\n * content (string)\n\n에디터의 컨텐츠를 추가하는 인터페이스로 필수 구현되어야 합니다.\n\n//예시\naddcontents: function(content) {\n  ckeditor.instances[this.props.selector].inserthtml(content);\n}\n\n\non(eventname, callback)\n\n * eventname (string)\n * callback (function)\n\n에디터의 이벤트를 정의하는 인터페이스입니다.\n\n//예시\non: function(eventname, callback) {\n  ckeditor.instances[this.props.selector].on(eventname, callback);\n}\n\n\nreset\n\n에디터를 초기화하는 인터페이스입니다.\n\n//예시\nreset: function() {\n  this.setcontents(\"\");\n}\n\n\naddtools(toolsmap, toolinfolist)\n\n * toolsmap (object) 정의된 툴의 정보\n * toolinfolist (array) 에디터가 create될때 4번째 인자로 받은 값 (id, icon 정보 등)\n\n툴정보가 있을 경우 에디터 core에서 등록된 툴정보들을 addtools인터페이스를 통해 전달합니다. 정의된 에디터에서는 addtools 인터페이스를 통해 넘겨 받은 tool정보로 툴들을 등록하는 코드를 구현해야 합니다.\n\n//예시\naddtools: function(toolsmap, toolinfolist) {\n  var editor = this.props.editor;\n  var component = toolsmap[toolinfolist[0].id];\n  var tooloption = component.props;\n\n  tooloption.options.icon = toolinfolist[0].icon;\n\n  editor.ui.add(editoroption.name, ckeditor.ui_button, tooloption);\n  editor.addcommand(editoroption.options.command, function() {\n    return {\n      exec: function(editor) {\n        component.events.iconclick(editor);\n      }\n    }\n  })\n}\n\n\n# 에디터 생성\nxeeditor.geteditor('에디터명').create(selector, options, editoroptions, toolinfolist)\n\n * selector (string) - 생성되는 에디터의 selector\n * options (object) - 에디터 생성시 필요한 옵션\n * editoroptions (object) - 에디터 옵션\n * toolinfolist (array) - 등록된 tool정보\n\n정의된 에디터를 생성하기 위해서는 xeeditor.geteditor('에디터명').create를 통해 생성할 수 있습니다.",charsets:{cjk:!0}},{title:"다이나믹 필드 스킨 제작 방법",frontmatter:{},regularPath:"/05.%20%ED%94%8C%EB%9F%AC%EA%B7%B8%EC%9D%B8%20%EA%B0%9C%EB%B0%9C/dynamic-field-skin.html",relativePath:"05. 플러그인 개발/dynamic-field-skin.md",key:"v-7738ead3",path:"/05.%20%ED%94%8C%EB%9F%AC%EA%B7%B8%EC%9D%B8%20%EA%B0%9C%EB%B0%9C/dynamic-field-skin.html",headers:[{level:2,title:"다이나믹 필드 스킨",slug:"다이나믹-필드-스킨",charIndex:2},{level:3,title:"AbstractSkin",slug:"abstractskin",charIndex:220},{level:3,title:"빈 스킨 생성 \\(draft\\)",slug:"빈-스킨-생성-draft",charIndex:304},{level:3,title:"스킨 등록",slug:"스킨-등록",charIndex:889},{level:3,title:"디자인 파일 처리",slug:"디자인-파일-처리",charIndex:1480}],headersStr:"다이나믹 필드 스킨 AbstractSkin 빈 스킨 생성 \\(draft\\) 스킨 등록 디자인 파일 처리",content:'# 다이나믹 필드 스킨 제작 방법\n# 다이나믹 필드 스킨\n사이트 관리자는 다이나믹 필드를 이용해서 사용자 입력 필드를 추가할 수 있습니다. 추가된 다이나믹 필드는 데이터베이스 테이블 구조 및 데이터 입출력을 제어하는 필드 타입과 디자인 요소를 처리하는 _필드 스킨_으로 구분됩니다.\n\n_필드 스킨_은 등록, 수정, 검색 폼, 상세 보기 등의 디자인을 구성할 수 있도록 구조를 제공합니다.\n\n# AbstractSkin\n스킨을 만들때 사용하는 추상클래스 입니다.\n\nclass DefaultSkin extends AbstractSkin {}\n\n\n# 빈 스킨 생성 (draft)\n스킨 생성 커맨드를 사용하려면 플러그인과 대상 다이나믹 필드가 마련되어 있어야 합니다. 플러그인 생성과 다이나믹 필드 생성은 다이나믹 필드 매뉴얼을 참고 바랍니다.\n\n아래 커맨드로 스킨을 만들 수 있습니다.\n\n$ php artisan make:fieldSkin <plugin> <name> <dynamic_field_id>\n\n\nplugin는 스킨이 위치할 플러그 경로입니다. 플러그인 디렉토리 명을 입력합니다.\n\nname에는 스킨의 아이디를 입력합니다.\n\ndynamic_field_id에는 스킨이 사용될 대상의 다이나믹필드아이디를 입력합니다. SampleType::getId()를 통해 확인합니다. 해당 다이나믹필드가 있는 플러그인의 composer.json파일을 통해서도 확인할 수 있습니다.\n\n# 컴포넌트 아이디\n컴포넌트 아이디는 아래와 같은 규칙으로 작성합니다.\n\n<dynamic_field_id>/fieldSkin/<plugin>@<name>\n\n\ndynamic_field_id 스킨이 사용될 대상 다이나믹 필드 아이디 입니다.\n\nplugin는 플러그인 디렉토리 이름입니다.\n\nname 스킨의 id입니다.\n\n# 스킨 등록\n커맨드를 사용할 경우, 자동으로 등록됩니다. 플러그인의 composer.json 파일에 아래와 같이 컴포넌트 정보가 등록되어 있습니다.\n\n// plugins/my_plugin/composer.json\n...\n  "extra": {\n        "xpressengine": {\n            "title": "my plugin",\n            "component": {\n                "fieldType/my_plugin@my_field/fieldSkin/my_plugin@my_skin": {\n                    "class": "GilDongHong\\\\XePlugin\\\\MyPlugin\\\\DynamicFieldSkins\\\\MySkin\\\\MySkin",\n                    "name": "MySkin fieldSkin",\n                    "description": "The fieldSkin supported by My_plugin plugin."\n                }\n            }\n        }\n    },\n\n    ...\n\n\n# 디자인 파일 처리\nAbstractSkin 추상 클래스는 제작자가 스킨구현에 집중할 수 있도록 blade 템플릿 파일에서 사용할 데이터를 처리하여 제공합니다. 제작자가 구현체 클래스에 getPath()를 구현하여 블레이드 템플릿 파일이 있는 디렉토리 경로를 설정하면 이 추상 클래스는 스킨에서 사용해야할 설정과 데이터베이스 데이터를 전달합니다. 커맨드를 이용해 생성할 경우 자동으로 생성된 블레이드파일의 경로를 지정하고 있습니다.\n\n# 전달 데이터\nAbstractSkin 이 View 로 전달하는 데이터는 아래와 같습니다.\n\n * $config 다이나믹 필드를 만들때 관리자에서 입력한 설정값 입니다.\n * $data 데이터베이스 테이블에 등록된 정보 입니다.\n * $key 다이나믹 필드에서 정의한 데이터베이스 컬럼 이름과 실제 사용하는 입력 필드 이름의 정보입니다.\n\n스킨에서 만들어야 하는 템플릿 파일은 아래와 같습니다. 커맨드를 이용해 생성할 경우 자동으로 비어있는 블레이드파일이 views 디렉토리안에 생성되어있습니다.\n\n * create.blade.php 회원 등록, 새글 작성에 사용합니다.\n * edit.blade.php 회원 정보 수정, 글 수정에 사용합니다.\n * show.blade.php 회원 정보 보기, 작성된 글 보기 페이지에 사용 합니다.\n * search.blade.php 게시판 리스트의 상세 검색 폼에 사용합니다.\n * settings.blade.php 관리자에서 다이나믹 필드를 생성할 때 설정 값을 입력 받기위해 사용합니다.',contentLowercase:'# 다이나믹 필드 스킨 제작 방법\n# 다이나믹 필드 스킨\n사이트 관리자는 다이나믹 필드를 이용해서 사용자 입력 필드를 추가할 수 있습니다. 추가된 다이나믹 필드는 데이터베이스 테이블 구조 및 데이터 입출력을 제어하는 필드 타입과 디자인 요소를 처리하는 _필드 스킨_으로 구분됩니다.\n\n_필드 스킨_은 등록, 수정, 검색 폼, 상세 보기 등의 디자인을 구성할 수 있도록 구조를 제공합니다.\n\n# abstractskin\n스킨을 만들때 사용하는 추상클래스 입니다.\n\nclass defaultskin extends abstractskin {}\n\n\n# 빈 스킨 생성 (draft)\n스킨 생성 커맨드를 사용하려면 플러그인과 대상 다이나믹 필드가 마련되어 있어야 합니다. 플러그인 생성과 다이나믹 필드 생성은 다이나믹 필드 매뉴얼을 참고 바랍니다.\n\n아래 커맨드로 스킨을 만들 수 있습니다.\n\n$ php artisan make:fieldskin <plugin> <name> <dynamic_field_id>\n\n\nplugin는 스킨이 위치할 플러그 경로입니다. 플러그인 디렉토리 명을 입력합니다.\n\nname에는 스킨의 아이디를 입력합니다.\n\ndynamic_field_id에는 스킨이 사용될 대상의 다이나믹필드아이디를 입력합니다. sampletype::getid()를 통해 확인합니다. 해당 다이나믹필드가 있는 플러그인의 composer.json파일을 통해서도 확인할 수 있습니다.\n\n# 컴포넌트 아이디\n컴포넌트 아이디는 아래와 같은 규칙으로 작성합니다.\n\n<dynamic_field_id>/fieldskin/<plugin>@<name>\n\n\ndynamic_field_id 스킨이 사용될 대상 다이나믹 필드 아이디 입니다.\n\nplugin는 플러그인 디렉토리 이름입니다.\n\nname 스킨의 id입니다.\n\n# 스킨 등록\n커맨드를 사용할 경우, 자동으로 등록됩니다. 플러그인의 composer.json 파일에 아래와 같이 컴포넌트 정보가 등록되어 있습니다.\n\n// plugins/my_plugin/composer.json\n...\n  "extra": {\n        "xpressengine": {\n            "title": "my plugin",\n            "component": {\n                "fieldtype/my_plugin@my_field/fieldskin/my_plugin@my_skin": {\n                    "class": "gildonghong\\\\xeplugin\\\\myplugin\\\\dynamicfieldskins\\\\myskin\\\\myskin",\n                    "name": "myskin fieldskin",\n                    "description": "the fieldskin supported by my_plugin plugin."\n                }\n            }\n        }\n    },\n\n    ...\n\n\n# 디자인 파일 처리\nabstractskin 추상 클래스는 제작자가 스킨구현에 집중할 수 있도록 blade 템플릿 파일에서 사용할 데이터를 처리하여 제공합니다. 제작자가 구현체 클래스에 getpath()를 구현하여 블레이드 템플릿 파일이 있는 디렉토리 경로를 설정하면 이 추상 클래스는 스킨에서 사용해야할 설정과 데이터베이스 데이터를 전달합니다. 커맨드를 이용해 생성할 경우 자동으로 생성된 블레이드파일의 경로를 지정하고 있습니다.\n\n# 전달 데이터\nabstractskin 이 view 로 전달하는 데이터는 아래와 같습니다.\n\n * $config 다이나믹 필드를 만들때 관리자에서 입력한 설정값 입니다.\n * $data 데이터베이스 테이블에 등록된 정보 입니다.\n * $key 다이나믹 필드에서 정의한 데이터베이스 컬럼 이름과 실제 사용하는 입력 필드 이름의 정보입니다.\n\n스킨에서 만들어야 하는 템플릿 파일은 아래와 같습니다. 커맨드를 이용해 생성할 경우 자동으로 비어있는 블레이드파일이 views 디렉토리안에 생성되어있습니다.\n\n * create.blade.php 회원 등록, 새글 작성에 사용합니다.\n * edit.blade.php 회원 정보 수정, 글 수정에 사용합니다.\n * show.blade.php 회원 정보 보기, 작성된 글 보기 페이지에 사용 합니다.\n * search.blade.php 게시판 리스트의 상세 검색 폼에 사용합니다.\n * settings.blade.php 관리자에서 다이나믹 필드를 생성할 때 설정 값을 입력 받기위해 사용합니다.',charsets:{cjk:!0}},{title:"플러그인 개발",frontmatter:{},regularPath:"/05.%20%ED%94%8C%EB%9F%AC%EA%B7%B8%EC%9D%B8%20%EA%B0%9C%EB%B0%9C/introduce.html",relativePath:"05. 플러그인 개발/introduce.md",key:"v-6432b42b",path:"/05.%20%ED%94%8C%EB%9F%AC%EA%B7%B8%EC%9D%B8%20%EA%B0%9C%EB%B0%9C/introduce.html",headers:[{level:2,title:"개요",slug:"개요",charIndex:12},{level:2,title:"주요 도움말 링크",slug:"주요-도움말-링크",charIndex:191}],headersStr:"개요 주요 도움말 링크",content:'# 플러그인 개발\n# 개요\n플러그인은 프로그램이 배포되는 단위를 말합니다. 플러그인은 여러개의 컴포넌트로 구성되어 배포될 수 있습니다. 플러그인을 구성하는 요소로 "테마", "익스텐션" 으로 나눌 수 있습니다.\n\n이 문서에서는 프로그램을 배포하기 위한 가장 큰 틀인 플러그인을 만들고 활용할 수 있는 방법에 대해서 알아볼 수 있습니다.\n\n# 주요 도움말 링크\n * 기본경로 및 구조\n * 기본 플러그인 생성\n * 플러그인 정보 추가 및 수정\n * 관리자 사이트 메뉴 추가\n * 다국어 지원(언어셋)',contentLowercase:'# 플러그인 개발\n# 개요\n플러그인은 프로그램이 배포되는 단위를 말합니다. 플러그인은 여러개의 컴포넌트로 구성되어 배포될 수 있습니다. 플러그인을 구성하는 요소로 "테마", "익스텐션" 으로 나눌 수 있습니다.\n\n이 문서에서는 프로그램을 배포하기 위한 가장 큰 틀인 플러그인을 만들고 활용할 수 있는 방법에 대해서 알아볼 수 있습니다.\n\n# 주요 도움말 링크\n * 기본경로 및 구조\n * 기본 플러그인 생성\n * 플러그인 정보 추가 및 수정\n * 관리자 사이트 메뉴 추가\n * 다국어 지원(언어셋)',charsets:{cjk:!0}},{title:"에디터툴 제작 방법",frontmatter:{},regularPath:"/05.%20%ED%94%8C%EB%9F%AC%EA%B7%B8%EC%9D%B8%20%EA%B0%9C%EB%B0%9C/editor-tool-guide.html",relativePath:"05. 플러그인 개발/editor-tool-guide.md",key:"v-3989122b",path:"/05.%20%ED%94%8C%EB%9F%AC%EA%B7%B8%EC%9D%B8%20%EA%B0%9C%EB%B0%9C/editor-tool-guide.html",headers:[{level:2,title:"에디터툴",slug:"에디터툴",charIndex:2},{level:3,title:"에디터 도구 생성",slug:"에디터-도구-생성",charIndex:107},{level:3,title:"사용제한",slug:"사용제한",charIndex:693},{level:3,title:"Frontend",slug:"frontend",charIndex:432}],headersStr:"에디터툴 에디터 도구 생성 사용제한 Frontend",content:"# 에디터툴 제작 방법\n# 에디터툴\n에디터툴은 에디터상에서 제공되는 기능 도구들을 말합니다. 기본적으로 제공되는 도구 이외에 사용자가 에디터에서 사용가능한 도구들을 추가할 수 있습니다.\n\n# 에디터 도구 생성\n# 컴포넌트 추가\n에디터 도구는 AbstractTool 을 상속받아 구현되어야 합니다. 그리고 다음 추상 메서드를 구현해야 합니다.\n\n * initAssets: 도구가 동작하는데 필요로하는 파일들을 불러옵니다. (js, css)\n * getIcon: 에디터 도구영역에 추가되기 위해 필요한 아이콘 파일입니다.\n * compile: 등록된 내용중 해당 도구로 작성된 영역을 표현하기 위한 동작을 수행합니다.\n\nclass SomeTool extends AbstractTool\n{\n    public function initAssets()\n    {\n        XeFrontend::js(asset('path/to/sometool.js'))->load();\n    }\n\n    public function getIcon()\n    {\n        return asset('path/to/icon.gif');\n    }\n\n    public function compile($content)\n    {\n        $content = /* 내용 변환 코드 */;\n\n        return $content;\n    }\n}\n\n\n# 사용제한\n때로는 특정 사용자만 추가된 에디터 도구를 사용하기를 원할 수 있습니다. 이럴땐 enable 메서드를 작성하여 현재 사용자가 해당 도구를 사용할 수 있는지에 대한 권한 검사를 수행해주어야 합니다.\n\npublic function enable()\n{\n    return /* true or false */;\n}\n\n\nXE 의 기능을 이용하여 검사를 하고자 한다면 권한 페이지를 확인해 주십시오.\n\n# Frontend\n# XEeditor.defineTool\n에디터의 툴 스크립트를 정의하기 위해서는 XEeditor.defineTool ~~(XEeditor.tools.define은 deprecated 처리되었습니다.)~~을 통해 아래의 형식과 같이 정의되어야 합니다. XEeditor객체에서는 Tool의 인터페이스를 제공하며 인스턴스를 관리합니다.\n\nXEeditor.defineTool{\n    id : '',\n    events: {\n        iconClick: function() {},\n        elementDoubleClick: function() {},\n    }\n});\n\n\nid (string)\n\ntool의 유니크값을 사용합니다. 다른 tool들과 구분을 위해 사용됩니다.\n\n//예시\nid: 'editortool/navermap@navermap'\n\n\nevents\n\niconClick (function)\n\n에디터 툴이 클릭됐을 경우 호출되는 이벤트입니다.\n\n//예시\niconClick: function() {\n    window.open('/tool');\n}\n\n\nelementDoubleClick (function)\n\n에디터 내의 생성된 요소가 더블클릭될 경우 호출되는 이벤트입니다.\n\n//예시\nelementDoubleClick: function() {\n    window.open('/tool_edit');\n}\n\n\n# Tool사용\nXEeditor.getEditor('에디터명').create시 4번째 인자로 툴정보를 넣어주게 됩니다. 해당 툴정보들은 정의된 에디터의 addTools 인터페이스를 통해 등록됩니다.\n\n//예시\nXEeditor.getEditor('에디터명').create('content', {}, {}, [{\"id\":\"editortool\\/navermap@navermap\",\"icon\":\"http:\\/\\/domain\\/plugins\\/template_tool\\/assets\\/icon.gif\",\"options\":[],\"enable\":true}]\n)",contentLowercase:"# 에디터툴 제작 방법\n# 에디터툴\n에디터툴은 에디터상에서 제공되는 기능 도구들을 말합니다. 기본적으로 제공되는 도구 이외에 사용자가 에디터에서 사용가능한 도구들을 추가할 수 있습니다.\n\n# 에디터 도구 생성\n# 컴포넌트 추가\n에디터 도구는 abstracttool 을 상속받아 구현되어야 합니다. 그리고 다음 추상 메서드를 구현해야 합니다.\n\n * initassets: 도구가 동작하는데 필요로하는 파일들을 불러옵니다. (js, css)\n * geticon: 에디터 도구영역에 추가되기 위해 필요한 아이콘 파일입니다.\n * compile: 등록된 내용중 해당 도구로 작성된 영역을 표현하기 위한 동작을 수행합니다.\n\nclass sometool extends abstracttool\n{\n    public function initassets()\n    {\n        xefrontend::js(asset('path/to/sometool.js'))->load();\n    }\n\n    public function geticon()\n    {\n        return asset('path/to/icon.gif');\n    }\n\n    public function compile($content)\n    {\n        $content = /* 내용 변환 코드 */;\n\n        return $content;\n    }\n}\n\n\n# 사용제한\n때로는 특정 사용자만 추가된 에디터 도구를 사용하기를 원할 수 있습니다. 이럴땐 enable 메서드를 작성하여 현재 사용자가 해당 도구를 사용할 수 있는지에 대한 권한 검사를 수행해주어야 합니다.\n\npublic function enable()\n{\n    return /* true or false */;\n}\n\n\nxe 의 기능을 이용하여 검사를 하고자 한다면 권한 페이지를 확인해 주십시오.\n\n# frontend\n# xeeditor.definetool\n에디터의 툴 스크립트를 정의하기 위해서는 xeeditor.definetool ~~(xeeditor.tools.define은 deprecated 처리되었습니다.)~~을 통해 아래의 형식과 같이 정의되어야 합니다. xeeditor객체에서는 tool의 인터페이스를 제공하며 인스턴스를 관리합니다.\n\nxeeditor.definetool{\n    id : '',\n    events: {\n        iconclick: function() {},\n        elementdoubleclick: function() {},\n    }\n});\n\n\nid (string)\n\ntool의 유니크값을 사용합니다. 다른 tool들과 구분을 위해 사용됩니다.\n\n//예시\nid: 'editortool/navermap@navermap'\n\n\nevents\n\niconclick (function)\n\n에디터 툴이 클릭됐을 경우 호출되는 이벤트입니다.\n\n//예시\niconclick: function() {\n    window.open('/tool');\n}\n\n\nelementdoubleclick (function)\n\n에디터 내의 생성된 요소가 더블클릭될 경우 호출되는 이벤트입니다.\n\n//예시\nelementdoubleclick: function() {\n    window.open('/tool_edit');\n}\n\n\n# tool사용\nxeeditor.geteditor('에디터명').create시 4번째 인자로 툴정보를 넣어주게 됩니다. 해당 툴정보들은 정의된 에디터의 addtools 인터페이스를 통해 등록됩니다.\n\n//예시\nxeeditor.geteditor('에디터명').create('content', {}, {}, [{\"id\":\"editortool\\/navermap@navermap\",\"icon\":\"http:\\/\\/domain\\/plugins\\/template_tool\\/assets\\/icon.gif\",\"options\":[],\"enable\":true}]\n)",charsets:{cjk:!0}},{title:"패키징 방법",frontmatter:{},regularPath:"/05.%20%ED%94%8C%EB%9F%AC%EA%B7%B8%EC%9D%B8%20%EA%B0%9C%EB%B0%9C/package-information.html",relativePath:"05. 플러그인 개발/package-information.md",key:"v-511cc0ab",path:"/05.%20%ED%94%8C%EB%9F%AC%EA%B7%B8%EC%9D%B8%20%EA%B0%9C%EB%B0%9C/package-information.html",headers:[{level:2,title:"압축 방법",slug:"압축-방법",charIndex:57},{level:2,title:"활용 TIP",slug:"활용-tip",charIndex:242}],headersStr:"압축 방법 활용 TIP",content:"# 패키징 방법\n이 문서에서는 개발한 플러그인을 패키징 하는 방법에 대해서 알아볼 수 있습니다.\n\n# 압축 방법\n플러그인 압축 파일은 플러그인명.zip 인 것이 좋습니다.개발한 플러그인 이름이 together 일 경우 together.zip 으로 압축합니다. 단, 압축 파일인 플러그인명.zip의 압축을 풀었을때 바로 플러그인 구성 폴더가 생성되면 안됩니다.\n\n플러그인의 이름이 폴더로 생성되고, 플러그인이 구성되어야 합니다.\n\n# 활용 TIP\n플러그인을 직접 만들기 위해서는 어느정도 구조파악에 대한 시간이 필요합니다. 이를 가장 단축하기 좋은 방법은 XE에 포함되어 있는 기본 플러그인들을 파악해보고 수정해 보는 것입니다. 약간의 변경을 통해서 새로운 플러그인을 만들다 보면 어느 순간 플러그인에 대한 감을 잡는데 크게 도움이 될 것입니다.\n\n그 후에는 개발에 드는 시간이 대폭 줄게 될거라 확신합니다.",contentLowercase:"# 패키징 방법\n이 문서에서는 개발한 플러그인을 패키징 하는 방법에 대해서 알아볼 수 있습니다.\n\n# 압축 방법\n플러그인 압축 파일은 플러그인명.zip 인 것이 좋습니다.개발한 플러그인 이름이 together 일 경우 together.zip 으로 압축합니다. 단, 압축 파일인 플러그인명.zip의 압축을 풀었을때 바로 플러그인 구성 폴더가 생성되면 안됩니다.\n\n플러그인의 이름이 폴더로 생성되고, 플러그인이 구성되어야 합니다.\n\n# 활용 tip\n플러그인을 직접 만들기 위해서는 어느정도 구조파악에 대한 시간이 필요합니다. 이를 가장 단축하기 좋은 방법은 xe에 포함되어 있는 기본 플러그인들을 파악해보고 수정해 보는 것입니다. 약간의 변경을 통해서 새로운 플러그인을 만들다 보면 어느 순간 플러그인에 대한 감을 잡는데 크게 도움이 될 것입니다.\n\n그 후에는 개발에 드는 시간이 대폭 줄게 될거라 확신합니다.",charsets:{cjk:!0}},{title:"테마 제작 방법",frontmatter:{},regularPath:"/06.%20%ED%85%8C%EB%A7%88%20%EA%B0%9C%EB%B0%9C&%EC%A0%9C%EC%9E%91/common-theme-make.html",relativePath:"06. 테마 개발&제작/common-theme-make.md",key:"v-39eb2c48",path:"/06.%20%ED%85%8C%EB%A7%88%20%EA%B0%9C%EB%B0%9C&%EC%A0%9C%EC%9E%91/common-theme-make.html",headers:[{level:2,title:"빈 테마 생성 (터미널 환경)",slug:"빈-테마-생성-터미널-환경",charIndex:135},{level:2,title:"빈 테마 생성 (웹 환경)",slug:"빈-테마-생성-웹-환경",charIndex:982},{level:3,title:"컨텐츠를 출력하는 방법",slug:"컨텐츠를-출력하는-방법",charIndex:1218},{level:3,title:"asset 파일 로드하기",slug:"asset-파일-로드하기",charIndex:1446}],headersStr:"빈 테마 생성 (터미널 환경) 빈 테마 생성 (웹 환경) 컨텐츠를 출력하는 방법 asset 파일 로드하기",content:'# 테마 제작 방법\n테마를 만들기 위해서는, 플러그인에 테마를 포함시켜야 합니다. 플러그인 생성을 먼저 한 후 아래의 순서를 따라해주세요.\n\nXE에서는 터미널(SSH)와, 웹 환경에서 테마를 생ㅅ어할 수 있는 방법을 제공하고 있습니다.\n\n# 빈 테마 생성 (터미널 환경)\n$ php artisan make:theme <plugin> <name>\n\n\nplugin 은 테마가 소속될 플러그인입니다. 플러그인이 위치한 디렉토리 이름을 입력해줍니다.\n\nname에는 테마의 제목을 지정해 주십시오. 지정한 테마 제목은 사이트 관리자에서 테마의 이름으로 표시됩니다.\n\n만약 my_plugin 플러그인 기본 플러그인 생성의 예제를 그대로 사용합니다.)에 테마를 넣고, 테마 이름을 First Theme로 지정하고 싶다면, 아래와 같이 커맨드를 실행하시면 됩니다. 커맨드를 실행하면 생성되는 테마의 개략적인 정보를 터미널에서 볼 수 있습니다.\n\n$ php artisan make:theme my_plugin \'First Theme\'\n\n[New theme info]\n  plugin:        my_plugin\n  path:          src/Themes/FirstTheme\n  class file:    src/Themes/FirstTheme/FirstThemeTheme.php\n  class name:    GilDongHong\\XePlugin\\MyPlugin\\Themes\\FirstTheme\\FirstThemeTheme\n  id:            theme/my_plugin@first theme\n  title:         FirstTheme theme\n  description:   The Theme supported by My_plugin plugin.\n\n Do you want to add theme? [yes|no]:\n > yes\n\nGenerating autoload files\nTheme is created successfully.\n\n\n# 빈 테마 생성 (웹 환경)\n>  본 환경은 XE 3.0.2 이후로는 지원하지 않습니다.\n\n\n플러그인 > 설치된 플러그인 > 직접 설치한 플러그인 페이지에서 테마 생성 버튼을 눌러주세요.\n\n\n\n본격적으로 테마를 제작해보겠습니다.\n\n테마가 웹페이지에 출력될 때 사용될 템플릿은 info.php 파일의 view 필드에 지정되어 있습니다. 위 설정의 경우 실제로는 views/theme.blade.php 파일에 해당됩니다.\n\n# 컨텐츠를 출력하는 방법\n테마를 만들때 게시판이나 위젯, 페이지 등을 보여줘야 합니다. XE는 웹페이지를 출력할때 컨텐츠의 내용을 $content 변수에 담아 테마에 전달해 보여줍니다.\n\n컨텐츠가 출력될 파일의 영역에 아래와 같이 변수를 출력해주세요.\n\n<div class="theme_example_content" id="content_presenter">\n{!! $content !!}\n</div>\n\n\n# asset 파일 로드하기\n# 이미지 파일 로드하기\n이미지 파일을 로드하려면 $theme::asset() 메소드를 사용하십시오. assets 디렉토리를 기준으로 파일의 상대경로를 입력해주시면 됩니다.\n\n\x3c!-- theme.blade.php --\x3e\n\n<img src="{{ $theme::asset(\'img/logo.png\') }}" alt="로고 이미지">\n\n\n# css, js 파일 로드하기\ncss, js 파일은 XeFrontend 파사드(Frontend 서비스)를 사용하여 로드하십시오.\n\n\x3c!-- theme.blade.php --\x3e\n\n{{ XeFrontend::css(\n    $theme::asset(\'css/theme.css\')\n)->load() }}\n\n\n역시 $theme::asset() 메소드를 사용하면 상대경로로 파일경로를 입력할 수 있습니다.\n\nXeFrontend 파사드의 자세한 사용법은 Frontend 서비스 문서를 참고하십시오.',contentLowercase:'# 테마 제작 방법\n테마를 만들기 위해서는, 플러그인에 테마를 포함시켜야 합니다. 플러그인 생성을 먼저 한 후 아래의 순서를 따라해주세요.\n\nxe에서는 터미널(ssh)와, 웹 환경에서 테마를 생ㅅ어할 수 있는 방법을 제공하고 있습니다.\n\n# 빈 테마 생성 (터미널 환경)\n$ php artisan make:theme <plugin> <name>\n\n\nplugin 은 테마가 소속될 플러그인입니다. 플러그인이 위치한 디렉토리 이름을 입력해줍니다.\n\nname에는 테마의 제목을 지정해 주십시오. 지정한 테마 제목은 사이트 관리자에서 테마의 이름으로 표시됩니다.\n\n만약 my_plugin 플러그인 기본 플러그인 생성의 예제를 그대로 사용합니다.)에 테마를 넣고, 테마 이름을 first theme로 지정하고 싶다면, 아래와 같이 커맨드를 실행하시면 됩니다. 커맨드를 실행하면 생성되는 테마의 개략적인 정보를 터미널에서 볼 수 있습니다.\n\n$ php artisan make:theme my_plugin \'first theme\'\n\n[new theme info]\n  plugin:        my_plugin\n  path:          src/themes/firsttheme\n  class file:    src/themes/firsttheme/firstthemetheme.php\n  class name:    gildonghong\\xeplugin\\myplugin\\themes\\firsttheme\\firstthemetheme\n  id:            theme/my_plugin@first theme\n  title:         firsttheme theme\n  description:   the theme supported by my_plugin plugin.\n\n do you want to add theme? [yes|no]:\n > yes\n\ngenerating autoload files\ntheme is created successfully.\n\n\n# 빈 테마 생성 (웹 환경)\n>  본 환경은 xe 3.0.2 이후로는 지원하지 않습니다.\n\n\n플러그인 > 설치된 플러그인 > 직접 설치한 플러그인 페이지에서 테마 생성 버튼을 눌러주세요.\n\n\n\n본격적으로 테마를 제작해보겠습니다.\n\n테마가 웹페이지에 출력될 때 사용될 템플릿은 info.php 파일의 view 필드에 지정되어 있습니다. 위 설정의 경우 실제로는 views/theme.blade.php 파일에 해당됩니다.\n\n# 컨텐츠를 출력하는 방법\n테마를 만들때 게시판이나 위젯, 페이지 등을 보여줘야 합니다. xe는 웹페이지를 출력할때 컨텐츠의 내용을 $content 변수에 담아 테마에 전달해 보여줍니다.\n\n컨텐츠가 출력될 파일의 영역에 아래와 같이 변수를 출력해주세요.\n\n<div class="theme_example_content" id="content_presenter">\n{!! $content !!}\n</div>\n\n\n# asset 파일 로드하기\n# 이미지 파일 로드하기\n이미지 파일을 로드하려면 $theme::asset() 메소드를 사용하십시오. assets 디렉토리를 기준으로 파일의 상대경로를 입력해주시면 됩니다.\n\n\x3c!-- theme.blade.php --\x3e\n\n<img src="{{ $theme::asset(\'img/logo.png\') }}" alt="로고 이미지">\n\n\n# css, js 파일 로드하기\ncss, js 파일은 xefrontend 파사드(frontend 서비스)를 사용하여 로드하십시오.\n\n\x3c!-- theme.blade.php --\x3e\n\n{{ xefrontend::css(\n    $theme::asset(\'css/theme.css\')\n)->load() }}\n\n\n역시 $theme::asset() 메소드를 사용하면 상대경로로 파일경로를 입력할 수 있습니다.\n\nxefrontend 파사드의 자세한 사용법은 frontend 서비스 문서를 참고하십시오.',charsets:{cjk:!0}},{title:"테마 개발/제작",frontmatter:{},regularPath:"/06.%20%ED%85%8C%EB%A7%88%20%EA%B0%9C%EB%B0%9C&%EC%A0%9C%EC%9E%91/introduce.html",relativePath:"06. 테마 개발&제작/introduce.md",key:"v-182fb532",path:"/06.%20%ED%85%8C%EB%A7%88%20%EA%B0%9C%EB%B0%9C&%EC%A0%9C%EC%9E%91/introduce.html",headers:[{level:2,title:"개요",slug:"개요",charIndex:13},{level:2,title:"주요 도움말",slug:"주요-도움말",charIndex:167}],headersStr:"개요 주요 도움말",content:"# 테마 개발/제작\n# 개요\n이 문서를 통해서 테마를 만들고, 구성하는 방법에 대해서 알아볼 수 있습니다.\n\n테마의 기본 설치 경로와 구조를 알아보고, 테마를 생성하여 내 테마를 만들 수 있는 기본 테마를 만들 수 있습니다. 더 나아가 서브 테마를 활용하여 설정을 구성할 수 있게 도와줍니다.\n\n# 주요 도움말\n * 기본경로 및 구조\n * 기본 테마 생성\n * 서브 테마 활용\n * 설정 파일 작성",contentLowercase:"# 테마 개발/제작\n# 개요\n이 문서를 통해서 테마를 만들고, 구성하는 방법에 대해서 알아볼 수 있습니다.\n\n테마의 기본 설치 경로와 구조를 알아보고, 테마를 생성하여 내 테마를 만들 수 있는 기본 테마를 만들 수 있습니다. 더 나아가 서브 테마를 활용하여 설정을 구성할 수 있게 도와줍니다.\n\n# 주요 도움말\n * 기본경로 및 구조\n * 기본 테마 생성\n * 서브 테마 활용\n * 설정 파일 작성",charsets:{cjk:!0}},{title:"테마 기본 경로 및 구조",frontmatter:{},regularPath:"/06.%20%ED%85%8C%EB%A7%88%20%EA%B0%9C%EB%B0%9C&%EC%A0%9C%EC%9E%91/common-structure.html",relativePath:"06. 테마 개발&제작/common-structure.md",key:"v-04f64614",path:"/06.%20%ED%85%8C%EB%A7%88%20%EA%B0%9C%EB%B0%9C&%EC%A0%9C%EC%9E%91/common-structure.html",headers:[{level:2,title:"테마 기본 경로",slug:"테마-기본-경로",charIndex:2},{level:2,title:"테마 구조",slug:"테마-구조",charIndex:160}],headersStr:"테마 기본 경로 테마 구조",content:"# 테마 기본 경로 및 구조\n# 테마 기본 경로\n테마의 기본 경로는 php artisan 명령어로 만든 테마 기준으로 plugins/<플러그인명>/src/Theme/테마명 의 경로로 생성됩니다.src폴더에는 Theme만이 아닌 Skin, widget등이 같이 존재할 수 있습니다.\n\n# 테마 구조\n테마 폴더에 진입하면 테마의 설정 파일인 info.php와 테마의 관련 클래스 파일인 테마명Theme.php파일이 존재하고 있습니다.\n\n│  info.php\n│  테마명Theme.php\n│\n├─assets\n│  ├─css\n│  │      main.css\n│  │      reset.css\n│  │      setting.css\n│  │      theme.css\n│  │\n│  ├─images\n│  └─js\n│          main.js\n│          respond.min.js\n│\n└─views\n        gnb.blade.php\n        theme.blade.php",contentLowercase:"# 테마 기본 경로 및 구조\n# 테마 기본 경로\n테마의 기본 경로는 php artisan 명령어로 만든 테마 기준으로 plugins/<플러그인명>/src/theme/테마명 의 경로로 생성됩니다.src폴더에는 theme만이 아닌 skin, widget등이 같이 존재할 수 있습니다.\n\n# 테마 구조\n테마 폴더에 진입하면 테마의 설정 파일인 info.php와 테마의 관련 클래스 파일인 테마명theme.php파일이 존재하고 있습니다.\n\n│  info.php\n│  테마명theme.php\n│\n├─assets\n│  ├─css\n│  │      main.css\n│  │      reset.css\n│  │      setting.css\n│  │      theme.css\n│  │\n│  ├─images\n│  └─js\n│          main.js\n│          respond.min.js\n│\n└─views\n        gnb.blade.php\n        theme.blade.php",charsets:{cjk:!0}},{title:"서브테마 활용",frontmatter:{},regularPath:"/06.%20%ED%85%8C%EB%A7%88%20%EA%B0%9C%EB%B0%9C&%EC%A0%9C%EC%9E%91/sub-theme.html",relativePath:"06. 테마 개발&제작/sub-theme.md",key:"v-e52ddb10",path:"/06.%20%ED%85%8C%EB%A7%88%20%EA%B0%9C%EB%B0%9C&%EC%A0%9C%EC%9E%91/sub-theme.html",headers:[{level:2,title:"서브테마 구성",slug:"서브테마-구성",charIndex:12}],headersStr:"서브테마 구성",content:"# 서브테마 활용\n# 서브테마 구성\n테마에서 출력해야할 내용이 많아지거나, 설정에 따라서 보여줘야할 항목이 다르다면 theme.blade.php이 너무 복잡해집니다. 이때 블레이드 문법의 @extends, @section, @yield @include 키워드를 사용하면 템플릿 파일을 분리할 수 있습니다. 레이아웃을 구성하는 블레이드의 사용법은 템플릿 문서에 자세히 설명되어 있습니다.\n\ntheme.blade.php에서 @include를 사용하여 header와 footer 영역을 분리해보았습니다.\n\n\x3c!-- theme.blade.php --\x3e\n\n@include($theme::view('header'))\n\n<div class=\"content\" id=\"content\">\n{!! $content !!}\n</div>\n\n@include($theme::view('footer'))\n\n\nheader와 footer에 해당하는 파일은 views 디렉토리에 미리 추가되어 있어야 합니다.\n\n..\n└── views/\n    ├── header.blade.php\n    ├── footer.blade.php    \n    └── theme.blade.php\n\n\n테마의 템플릿 파일에서 뷰이름을 지정할 때에는 $theme::view() 메소드를 사용하십시오. 이 메소드는 views 디렉토리를 기준으로 하는 상대경로로 템플릿 파일의 경로를 지정할 수 있도록 도와줍니다.",contentLowercase:"# 서브테마 활용\n# 서브테마 구성\n테마에서 출력해야할 내용이 많아지거나, 설정에 따라서 보여줘야할 항목이 다르다면 theme.blade.php이 너무 복잡해집니다. 이때 블레이드 문법의 @extends, @section, @yield @include 키워드를 사용하면 템플릿 파일을 분리할 수 있습니다. 레이아웃을 구성하는 블레이드의 사용법은 템플릿 문서에 자세히 설명되어 있습니다.\n\ntheme.blade.php에서 @include를 사용하여 header와 footer 영역을 분리해보았습니다.\n\n\x3c!-- theme.blade.php --\x3e\n\n@include($theme::view('header'))\n\n<div class=\"content\" id=\"content\">\n{!! $content !!}\n</div>\n\n@include($theme::view('footer'))\n\n\nheader와 footer에 해당하는 파일은 views 디렉토리에 미리 추가되어 있어야 합니다.\n\n..\n└── views/\n    ├── header.blade.php\n    ├── footer.blade.php    \n    └── theme.blade.php\n\n\n테마의 템플릿 파일에서 뷰이름을 지정할 때에는 $theme::view() 메소드를 사용하십시오. 이 메소드는 views 디렉토리를 기준으로 하는 상대경로로 템플릿 파일의 경로를 지정할 수 있도록 도와줍니다.",charsets:{cjk:!0}},{title:"테마 설정 작성",frontmatter:{},regularPath:"/06.%20%ED%85%8C%EB%A7%88%20%EA%B0%9C%EB%B0%9C&%EC%A0%9C%EC%9E%91/theme-config-edit.html",relativePath:"06. 테마 개발&제작/theme-config-edit.md",key:"v-ed7a53e4",path:"/06.%20%ED%85%8C%EB%A7%88%20%EA%B0%9C%EB%B0%9C&%EC%A0%9C%EC%9E%91/theme-config-edit.html",headers:[{level:2,title:"테마 설정이란?",slug:"테마-설정이란",charIndex:13},{level:3,title:"폼 빌더로 작성하기",slug:"폼-빌더로-작성하기",charIndex:142},{level:3,title:"템플릿 파일로 작성하기",slug:"템플릿-파일로-작성하기",charIndex:311}],headersStr:"테마 설정이란? 폼 빌더로 작성하기 템플릿 파일로 작성하기",content:"# 테마 설정 작성\n# 테마 설정이란?\n테마 설정을 통해 사이트 관리자가 테마를 커스터 마이징할 수 있도록 테마 설정 페이지를 제공할 수 있습니다. 테마 설정 페이지를 작성하는 방법은 크게 폼 빌더와 템플릿 파일로 작성하는 방법 2가지가 있습니다.\n\n# 폼 빌더로 작성하기\n폼 빌더로 작성하는 방법을 사용하면 손쉽게 테마 설정 페이지를 작성할 수 있습니다.\n\ninfo.php 파일의 setting 항목에 폼에서 사용할 필드의 정보를 담은 배열을 추가합니다. setting 항목을 작성하는 규칙은 폼 빌 문서의 fields 항목을 참고하시기 바랍니다.\n\n# 템플릿 파일로 작성하기\n폼 빌더를 사용할 경우, 간편하게 테마 설정 페이지를 작성할 수는 있지만, 자유롭지 못한 단점이 있습니다. 좀 더 자유롭게 설정 페이지를 작성하고 싶다면 설정 페이지를 출력하는 블레이드 템플릿 파일을 작성하십시오. 그리고 info.php 파일의 setting 항목에 블레이드 템플릿 파일의 경로를 지정하면 됩니다.\n\n이때 템플릿 파일은 반드시 views 디렉토리에 존재해야 합니다. 만약 views/config.blade.php를 설정 페이지의 템플릿으\n로 사용하고 싶다면, 아래와 같이 setting 항목을 지정합니다.\n\n<?php\nreturn [\n  ...\n\n  'setting' => 'config',\n\n  ...\n];",contentLowercase:"# 테마 설정 작성\n# 테마 설정이란?\n테마 설정을 통해 사이트 관리자가 테마를 커스터 마이징할 수 있도록 테마 설정 페이지를 제공할 수 있습니다. 테마 설정 페이지를 작성하는 방법은 크게 폼 빌더와 템플릿 파일로 작성하는 방법 2가지가 있습니다.\n\n# 폼 빌더로 작성하기\n폼 빌더로 작성하는 방법을 사용하면 손쉽게 테마 설정 페이지를 작성할 수 있습니다.\n\ninfo.php 파일의 setting 항목에 폼에서 사용할 필드의 정보를 담은 배열을 추가합니다. setting 항목을 작성하는 규칙은 폼 빌 문서의 fields 항목을 참고하시기 바랍니다.\n\n# 템플릿 파일로 작성하기\n폼 빌더를 사용할 경우, 간편하게 테마 설정 페이지를 작성할 수는 있지만, 자유롭지 못한 단점이 있습니다. 좀 더 자유롭게 설정 페이지를 작성하고 싶다면 설정 페이지를 출력하는 블레이드 템플릿 파일을 작성하십시오. 그리고 info.php 파일의 setting 항목에 블레이드 템플릿 파일의 경로를 지정하면 됩니다.\n\n이때 템플릿 파일은 반드시 views 디렉토리에 존재해야 합니다. 만약 views/config.blade.php를 설정 페이지의 템플릿으\n로 사용하고 싶다면, 아래와 같이 setting 항목을 지정합니다.\n\n<?php\nreturn [\n  ...\n\n  'setting' => 'config',\n\n  ...\n];",charsets:{cjk:!0}},{title:"테마 편집",frontmatter:{},regularPath:"/06.%20%ED%85%8C%EB%A7%88%20%EA%B0%9C%EB%B0%9C&%EC%A0%9C%EC%9E%91/theme-edit.html",relativePath:"06. 테마 개발&제작/theme-edit.md",key:"v-08103096",path:"/06.%20%ED%85%8C%EB%A7%88%20%EA%B0%9C%EB%B0%9C&%EC%A0%9C%EC%9E%91/theme-edit.html",headers:[{level:2,title:"테마 편집",slug:"테마-편집-2",charIndex:2},{level:3,title:"테마 설정 변수 사용하기",slug:"테마-설정-변수-사용하기",charIndex:166},{level:3,title:"메뉴 출력하기",slug:"메뉴-출력하기",charIndex:581},{level:3,title:"업로드한 이미지 출력하기",slug:"업로드한-이미지-출력하기",charIndex:1116}],headersStr:"테마 편집 테마 설정 변수 사용하기 메뉴 출력하기 업로드한 이미지 출력하기",content:"# 테마 편집\n# 테마 편집\n사이트 관리자는 테마의 템플릿을 직접 편집하여 테마를 커스터마이징 할 수 있습니다. 테마 제작자는 사이트관리자가 편집할 수 있는 파일 목록을 지정해주어야 합니다.\n\ninfo.php 파일의 editable 필드에 편집할 수 있는 템플릿 파일 목록을 지정해주십시오.\n\n# 테마 설정 변수 사용하기\n사이트 관리자가 테마 설정 페이지를 통해 지정한 설정들의 값은 테마를 출력할 때 $config 변수를 사용하여 참조할 수 있습니다.\n\n\x3c!-- theme.blade.php --\x3e\n\n@if($config->get('use_sidebar', false))\n<div class=\"sidebar\">\n...\n</div>\n@endif\n\n\n$config 변수는 ConfigEntity의 인스턴스입니다. get 메소드를 사용하면 손쉽게 설정값을 가져올 수 있습니다. get 메소드의 두번째 파라메터는 기본값(default value)입니다.\n\n// use_sidebar 설정 조회, use_sidebar 설정이 존재하지 않을 경우 기본값으로 false를 반환\n$config->get('use_sidebar', false);\n\n\n# 메뉴 출력하기\nXE에 등록된 메뉴도 테마 설정 변수로 저장할 수 있습니다.\n\n만약 설정변수에 'mainMenu'라는 이름으로 메뉴가 저장되어 있다면, menu_list 함수를 사용하여 메뉴 정보를 가져올 수 있습니다.\n\n@foreach(menu_list($config->get('mainMenu')) as $menu)\n  ...\n@endforeach\n\n\nmenu_list는 지정된 메뉴에 속해 있는 메뉴 아이템의 목록을 배열로 반환합니다. 위의 예제에서는 $menu 변수가 하나의 메뉴 아이템입니다.\n\n메뉴 아이템은 아래와 같은 프로퍼티를 가지고 있습니다. 이 프로퍼티를 사용하여 메뉴를 원하는대로 출력하십시오.\n\n * $menu['url'] - 메뉴의 링크주소\n * $menu['link'] - 메뉴의 링크텍스트, 만약 메뉴 이미지가 사용됐을 경우 이미지를 출력하는 태그를 출력합니다.\n * $menu['selected'] - 현재 페이지에 해당하는 메뉴일 경우 true를 가집니다.\n * $menu['children'] - 자식 메뉴아이템 리스트\n\n# 업로드한 이미지 출력하기\n테마 설정페이지에서 사이트 관리자는 이미지를 업로드할 수 있습니다.\n\n사이트 관리자가 업로드한 이미지를 출력할 때에는 아래와 같이 코드를 작성하십시오.\n\n<img src=\"{{$config->get('logoImage.path')}}\">\n\n\n이미지를 저장한 변수명(logoImage)에 .path를 붙여서 출력하면 됩니다.",contentLowercase:"# 테마 편집\n# 테마 편집\n사이트 관리자는 테마의 템플릿을 직접 편집하여 테마를 커스터마이징 할 수 있습니다. 테마 제작자는 사이트관리자가 편집할 수 있는 파일 목록을 지정해주어야 합니다.\n\ninfo.php 파일의 editable 필드에 편집할 수 있는 템플릿 파일 목록을 지정해주십시오.\n\n# 테마 설정 변수 사용하기\n사이트 관리자가 테마 설정 페이지를 통해 지정한 설정들의 값은 테마를 출력할 때 $config 변수를 사용하여 참조할 수 있습니다.\n\n\x3c!-- theme.blade.php --\x3e\n\n@if($config->get('use_sidebar', false))\n<div class=\"sidebar\">\n...\n</div>\n@endif\n\n\n$config 변수는 configentity의 인스턴스입니다. get 메소드를 사용하면 손쉽게 설정값을 가져올 수 있습니다. get 메소드의 두번째 파라메터는 기본값(default value)입니다.\n\n// use_sidebar 설정 조회, use_sidebar 설정이 존재하지 않을 경우 기본값으로 false를 반환\n$config->get('use_sidebar', false);\n\n\n# 메뉴 출력하기\nxe에 등록된 메뉴도 테마 설정 변수로 저장할 수 있습니다.\n\n만약 설정변수에 'mainmenu'라는 이름으로 메뉴가 저장되어 있다면, menu_list 함수를 사용하여 메뉴 정보를 가져올 수 있습니다.\n\n@foreach(menu_list($config->get('mainmenu')) as $menu)\n  ...\n@endforeach\n\n\nmenu_list는 지정된 메뉴에 속해 있는 메뉴 아이템의 목록을 배열로 반환합니다. 위의 예제에서는 $menu 변수가 하나의 메뉴 아이템입니다.\n\n메뉴 아이템은 아래와 같은 프로퍼티를 가지고 있습니다. 이 프로퍼티를 사용하여 메뉴를 원하는대로 출력하십시오.\n\n * $menu['url'] - 메뉴의 링크주소\n * $menu['link'] - 메뉴의 링크텍스트, 만약 메뉴 이미지가 사용됐을 경우 이미지를 출력하는 태그를 출력합니다.\n * $menu['selected'] - 현재 페이지에 해당하는 메뉴일 경우 true를 가집니다.\n * $menu['children'] - 자식 메뉴아이템 리스트\n\n# 업로드한 이미지 출력하기\n테마 설정페이지에서 사이트 관리자는 이미지를 업로드할 수 있습니다.\n\n사이트 관리자가 업로드한 이미지를 출력할 때에는 아래와 같이 코드를 작성하십시오.\n\n<img src=\"{{$config->get('logoimage.path')}}\">\n\n\n이미지를 저장한 변수명(logoimage)에 .path를 붙여서 출력하면 됩니다.",charsets:{cjk:!0}},{title:"스킨 제작 방법",frontmatter:{},regularPath:"/07.%20%EC%8A%A4%ED%82%A8%20%EA%B0%9C%EB%B0%9C&%EC%A0%9C%EC%9E%91/common-skin-make.html",relativePath:"07. 스킨 개발&제작/common-skin-make.md",key:"v-beda24f0",path:"/07.%20%EC%8A%A4%ED%82%A8%20%EA%B0%9C%EB%B0%9C&%EC%A0%9C%EC%9E%91/common-skin-make.html",headers:[{level:2,title:"스킨 타겟",slug:"스킨-타겟",charIndex:13},{level:3,title:"빈 스킨생성 (터미널 환경)",slug:"빈-스킨생성-터미널-환경",charIndex:388},{level:3,title:"빈 스킨생성 (웹 환경)",slug:"빈-스킨생성-웹-환경",charIndex:1494},{level:2,title:"스킨 컴포넌트 아이디",slug:"스킨-컴포넌트-아이디",charIndex:1512},{level:2,title:"스킨 등록",slug:"스킨-등록",charIndex:1702},{level:2,title:"스킨의 출력",slug:"스킨의-출력",charIndex:2334}],headersStr:"스킨 타겟 빈 스킨생성 (터미널 환경) 빈 스킨생성 (웹 환경) 스킨 컴포넌트 아이디 스킨 등록 스킨의 출력",content:'# 스킨 제작 방법\n# 스킨 타겟\n이 문서는 스킨 생성 커맨드를 사용한 보편적인 방법의 스킨 제작 방법을 설명합니다.\n\n스킨은 항상 그 스킨이 사용되는 대상(타겟)이 있습니다. 예를 들어 게시판 스킨은 게시판이 대상이 되며, 회원 프로필 스킨은 회원 프로필 컨트롤러가 대상이 됩니다. 또 특정 위젯이 대상이 될 수도 있습니다. 게시판, 회원 프로필 컨트롤러, 위젯과 같이 스킨이 적용되는 대상을 \'스킨 타겟\'이라고 합니다. 모든 스킨은 스킨 타겟을 반드시 지정해야 합니다.\n\nXE의 구성요소중 HTML을 출력하는 모든 구성요소는 스킨 타겟이 될 수 있습니다. 스킨 타겟은 HTML을 출력할 때, 스킨 시스템이 적용될 수 있도록 구현되어야 하며, 스킨 타겟 아이디를 지정해 주어야 합니다.\n\n# 빈 스킨생성 (터미널 환경)\n스킨 생성 커맨드를 사용하려면 우선 스킨이 소속될 플러그인이 마련되어 있어야 합니다. 아직 플러그인이 준비되지 않았다면, 플러그인 개발 시작하기 문서를 참고하여 플러그인을 생성하길 바랍니다. 또, 스킨 타겟의 아이디를 미리 알고 있어야 합니다.\n\n소속될 플러그인과 스킨 타겟 아이디가 준비되었다면 아래 커맨드를 사용하여 빈 스킨을 생성합니다.\n\n$ php artisan make:skin <plugin> <name> <target>\n\n\nplugin는 스킨 소속될 플러그인입니다. 플러그인이 위치한 디렉토리 이름을 입력해줍니다.\n\nname에는 스킨의 제목을 지정해 주십시오. 지정한 스킨 제목은 스킨 선택시 스킨의 이름으로 표시됩니다.\n\ntarget는 스킨 타겟 아이디를 지정해주십시오.\n\n만약 my_plugin 플러그인(플러그인 개발 시작하기의 예제를 그대로 사용합니다.)에 스킨을 넣고, 스킨 이름을 나만의 프로필 스킨으로 지정하고 싶다면, 아래와 같이 커맨드를 실행하시면 됩니다. 커맨드를 실행하면 생성되는 스킨의 개략적인 정보를 터미널에서 볼 수 있습니다. 회원 프로필 컨트롤러의 스킨 타겟 아이디는 member/profile입니다.\n\n$ php artisan make:skin my_plugin Profile member/profile\n\n[New skin info]\n  plugin:        my_plugin\n  path:          src/Skins/Profile\n  class file:    src/Skins/Profile/ProfileSkin.php\n  class name:    GilDongHong\\XePlugin\\MyPlugin\\Skins\\Profile\\ProfileSkin\n  id:            member/profile/skin/my_plugin@profile\n  title:         Profile Skin\n  description:   The Skin supported by My_plugin plugin.\n\n Do you want to add skin? [yes|no]:\n > yes\n\nGenerating autoload files\nSkin is created successfully.\n\n\n# 빈 스킨생성 (웹 환경)\n\n\n# 스킨 컴포넌트 아이디\n스킨도 컴포넌트이므로 컴포넌트 아이디를 가지고 있어야 합니다. 스킨의 컴포넌트 아이디는 아래 규칙을 따라야 합니다.\n\n<skin_target_id>/skin/<plugin_id>@<pure_id>\n\n\n위의 예시에서 생성한 스킨의 아이디는 member/profile/skin/my_plugin@profile입니다.\n\n# 스킨 등록\n스킨 생성 커맨드를 사용할 경우, 자동으로 스킨을 등록해 줍니다. 플러그인의 composer.json 파일에 아래와 같이 컴포넌트 정보가 등록되어 있습니다.\n\n// plugins/my_plugin/composer.json\n...\n  "extra": {\n        "xpressengine": {\n            "title": "my plugin",\n            "component": {\n                "member/profile/skin/my_plugin@profile": {\n                    "name": "Profile skin",\n                    "description": "The skin supported by My_plugin plugin.",\n                    "class": "GilDongHong\\\\XePlugin\\\\MyPlugin\\\\Skins\\\\Profile\\\\ProfileSkin"\n                }\n            }\n        }\n    }\n\n\nautoload 항목을 생성하지 않아도 src폴더안에 skin이 배치되어있기 때문 플러그인에서 자동으로 class를 로드합니다.\n\n# 스킨의 출력\n하나의 스킨은 하나 이상의 페이지의 출력을 담당할 수 있습니다. 출력하는 페이지의 갯수는 스킨 타겟에 따라 다릅니다. 게시판의 경우, 글보기, 글쓰기, 글목록 등의 페이지를 가지고 있는데, 스킨은 게시판이 필요로 하는 모든 페이지의 출력을 담당합니다.',contentLowercase:'# 스킨 제작 방법\n# 스킨 타겟\n이 문서는 스킨 생성 커맨드를 사용한 보편적인 방법의 스킨 제작 방법을 설명합니다.\n\n스킨은 항상 그 스킨이 사용되는 대상(타겟)이 있습니다. 예를 들어 게시판 스킨은 게시판이 대상이 되며, 회원 프로필 스킨은 회원 프로필 컨트롤러가 대상이 됩니다. 또 특정 위젯이 대상이 될 수도 있습니다. 게시판, 회원 프로필 컨트롤러, 위젯과 같이 스킨이 적용되는 대상을 \'스킨 타겟\'이라고 합니다. 모든 스킨은 스킨 타겟을 반드시 지정해야 합니다.\n\nxe의 구성요소중 html을 출력하는 모든 구성요소는 스킨 타겟이 될 수 있습니다. 스킨 타겟은 html을 출력할 때, 스킨 시스템이 적용될 수 있도록 구현되어야 하며, 스킨 타겟 아이디를 지정해 주어야 합니다.\n\n# 빈 스킨생성 (터미널 환경)\n스킨 생성 커맨드를 사용하려면 우선 스킨이 소속될 플러그인이 마련되어 있어야 합니다. 아직 플러그인이 준비되지 않았다면, 플러그인 개발 시작하기 문서를 참고하여 플러그인을 생성하길 바랍니다. 또, 스킨 타겟의 아이디를 미리 알고 있어야 합니다.\n\n소속될 플러그인과 스킨 타겟 아이디가 준비되었다면 아래 커맨드를 사용하여 빈 스킨을 생성합니다.\n\n$ php artisan make:skin <plugin> <name> <target>\n\n\nplugin는 스킨 소속될 플러그인입니다. 플러그인이 위치한 디렉토리 이름을 입력해줍니다.\n\nname에는 스킨의 제목을 지정해 주십시오. 지정한 스킨 제목은 스킨 선택시 스킨의 이름으로 표시됩니다.\n\ntarget는 스킨 타겟 아이디를 지정해주십시오.\n\n만약 my_plugin 플러그인(플러그인 개발 시작하기의 예제를 그대로 사용합니다.)에 스킨을 넣고, 스킨 이름을 나만의 프로필 스킨으로 지정하고 싶다면, 아래와 같이 커맨드를 실행하시면 됩니다. 커맨드를 실행하면 생성되는 스킨의 개략적인 정보를 터미널에서 볼 수 있습니다. 회원 프로필 컨트롤러의 스킨 타겟 아이디는 member/profile입니다.\n\n$ php artisan make:skin my_plugin profile member/profile\n\n[new skin info]\n  plugin:        my_plugin\n  path:          src/skins/profile\n  class file:    src/skins/profile/profileskin.php\n  class name:    gildonghong\\xeplugin\\myplugin\\skins\\profile\\profileskin\n  id:            member/profile/skin/my_plugin@profile\n  title:         profile skin\n  description:   the skin supported by my_plugin plugin.\n\n do you want to add skin? [yes|no]:\n > yes\n\ngenerating autoload files\nskin is created successfully.\n\n\n# 빈 스킨생성 (웹 환경)\n\n\n# 스킨 컴포넌트 아이디\n스킨도 컴포넌트이므로 컴포넌트 아이디를 가지고 있어야 합니다. 스킨의 컴포넌트 아이디는 아래 규칙을 따라야 합니다.\n\n<skin_target_id>/skin/<plugin_id>@<pure_id>\n\n\n위의 예시에서 생성한 스킨의 아이디는 member/profile/skin/my_plugin@profile입니다.\n\n# 스킨 등록\n스킨 생성 커맨드를 사용할 경우, 자동으로 스킨을 등록해 줍니다. 플러그인의 composer.json 파일에 아래와 같이 컴포넌트 정보가 등록되어 있습니다.\n\n// plugins/my_plugin/composer.json\n...\n  "extra": {\n        "xpressengine": {\n            "title": "my plugin",\n            "component": {\n                "member/profile/skin/my_plugin@profile": {\n                    "name": "profile skin",\n                    "description": "the skin supported by my_plugin plugin.",\n                    "class": "gildonghong\\\\xeplugin\\\\myplugin\\\\skins\\\\profile\\\\profileskin"\n                }\n            }\n        }\n    }\n\n\nautoload 항목을 생성하지 않아도 src폴더안에 skin이 배치되어있기 때문 플러그인에서 자동으로 class를 로드합니다.\n\n# 스킨의 출력\n하나의 스킨은 하나 이상의 페이지의 출력을 담당할 수 있습니다. 출력하는 페이지의 갯수는 스킨 타겟에 따라 다릅니다. 게시판의 경우, 글보기, 글쓰기, 글목록 등의 페이지를 가지고 있는데, 스킨은 게시판이 필요로 하는 모든 페이지의 출력을 담당합니다.',charsets:{cjk:!0}},{title:"스킨 기본경로 및 구조",frontmatter:{},regularPath:"/07.%20%EC%8A%A4%ED%82%A8%20%EA%B0%9C%EB%B0%9C&%EC%A0%9C%EC%9E%91/common-structure.html",relativePath:"07. 스킨 개발&제작/common-structure.md",key:"v-6a18f668",path:"/07.%20%EC%8A%A4%ED%82%A8%20%EA%B0%9C%EB%B0%9C&%EC%A0%9C%EC%9E%91/common-structure.html",headers:[{level:2,title:"스킨 디렉토리 구조",slug:"스킨-디렉토리-구조",charIndex:17},{level:3,title:"assets 파일",slug:"assets-파일",charIndex:325},{level:3,title:"views 디렉토리",slug:"views-디렉토리",charIndex:396},{level:3,title:"Skin.php 파일",slug:"skin-php-파일",charIndex:523},{level:3,title:"info.php 파일",slug:"info-php-파일",charIndex:1275}],headersStr:"스킨 디렉토리 구조 assets 파일 views 디렉토리 Skin.php 파일 info.php 파일",content:"# 스킨 기본경로 및 구조\n# 스킨 디렉토리 구조\n생성된 스킨은 아래의 디렉토리 구조를 가집니다. plugins/my_plugin/src/Skins/{skinName} 디렉토리는 스킨의 모든 파일이 담겨 있는 '스킨 디렉토리'입니다.\n\nplugins/my_plugin/src/Skins\n└── {skinName}/\n    ├── assets/\n    │   └── css/\n    │       └── skin.css\n    ├── views/\n    │   └── index.blade.php\n    ├── {skinName}Skin.php\n    └── info.php\n\n\n# assets 파일\n스킨에 필요한 .js나 .css 파일 그리고 이미지 파일과 같은 asset 파일을 담는 디렉토리입니다.\n\n# views 디렉토리\n스킨을 출력할 때 사용하는 템플릿 파일들을 저장하는 디렉토리입니다. 템플릿 파일은 blade 템플릿 언어로 작성되어야 합니다. blade 템플릿 언어의 사용법은 템플릿 문서에 자세히 기술되어 있습니다.\n\n# Skin.php 파일\nSkin.php 파일(위의 예에서는 ProfileSkin.php 파일)은 스킨클래스 파일입니다. 스킨 생성 커맨드로 생성된 스킨의 클래스는 \\Xpressengine\\Skin\\GenericSkin 클래스를 상속받고 있습니다. 또, GenericSkin 클래스는 스킨 컴포넌트의 추상클래스인 \\Xpressengine\\Skin\\AbstractSkin를 상속받고 있습니다.\n\n\\Xpressengine\\Skin\\AbstractSkin\n└── \\Xpressengine\\Skin\\GenericSkin\n    └── Skin(Skin.php)\n\n\nPHP 개발자가 아닌 스킨 제작자가 스킨 클래스를 직접 작성하는 것은 쉬운 일이 아닙니다. GenericSkin 클래스는 스킨 제작자들에게 규격화 된 스킨 구조를 제공함으로써 스킨 제작을 손쉽게 할 수 있도록 도와줍니다. Skin.php 파일은 처음 생성한 다음부터는 거의 직접 수정할 필요가 없습니다. Skin.php를 직접 수정하는 대신, info.php를 수정하십시오.\n\n일반적으로 Skin.php 파일을 직접 수정하지 않아도 원하는 스킨을 제작하는 데에는 문제가 없습니다. 다만, 좀더 고수준의 스킨을 제작하고 싶거나, 특별한 기능을 스킨에 추가하고 싶다면 Skin.php 파일을 직접 수정하셔도 됩니다. Skin.php 파일을 수정하면 훨씬 자유롭고 편하게 스킨을 제작할 수 있습니다. 물론 그 전에 스킨 클래스의 각 메소드가 갖는 역할과 원리를 잘 이해하고 있어야 합니다.\n\n# info.php 파일\ninfo.php 파일은 스킨의 구동에 필요한 여러가지 정보를 입력하는 파일입니다. 간단한 php 문법으로 쉽게 작성할 수 있습니다.",contentLowercase:"# 스킨 기본경로 및 구조\n# 스킨 디렉토리 구조\n생성된 스킨은 아래의 디렉토리 구조를 가집니다. plugins/my_plugin/src/skins/{skinname} 디렉토리는 스킨의 모든 파일이 담겨 있는 '스킨 디렉토리'입니다.\n\nplugins/my_plugin/src/skins\n└── {skinname}/\n    ├── assets/\n    │   └── css/\n    │       └── skin.css\n    ├── views/\n    │   └── index.blade.php\n    ├── {skinname}skin.php\n    └── info.php\n\n\n# assets 파일\n스킨에 필요한 .js나 .css 파일 그리고 이미지 파일과 같은 asset 파일을 담는 디렉토리입니다.\n\n# views 디렉토리\n스킨을 출력할 때 사용하는 템플릿 파일들을 저장하는 디렉토리입니다. 템플릿 파일은 blade 템플릿 언어로 작성되어야 합니다. blade 템플릿 언어의 사용법은 템플릿 문서에 자세히 기술되어 있습니다.\n\n# skin.php 파일\nskin.php 파일(위의 예에서는 profileskin.php 파일)은 스킨클래스 파일입니다. 스킨 생성 커맨드로 생성된 스킨의 클래스는 \\xpressengine\\skin\\genericskin 클래스를 상속받고 있습니다. 또, genericskin 클래스는 스킨 컴포넌트의 추상클래스인 \\xpressengine\\skin\\abstractskin를 상속받고 있습니다.\n\n\\xpressengine\\skin\\abstractskin\n└── \\xpressengine\\skin\\genericskin\n    └── skin(skin.php)\n\n\nphp 개발자가 아닌 스킨 제작자가 스킨 클래스를 직접 작성하는 것은 쉬운 일이 아닙니다. genericskin 클래스는 스킨 제작자들에게 규격화 된 스킨 구조를 제공함으로써 스킨 제작을 손쉽게 할 수 있도록 도와줍니다. skin.php 파일은 처음 생성한 다음부터는 거의 직접 수정할 필요가 없습니다. skin.php를 직접 수정하는 대신, info.php를 수정하십시오.\n\n일반적으로 skin.php 파일을 직접 수정하지 않아도 원하는 스킨을 제작하는 데에는 문제가 없습니다. 다만, 좀더 고수준의 스킨을 제작하고 싶거나, 특별한 기능을 스킨에 추가하고 싶다면 skin.php 파일을 직접 수정하셔도 됩니다. skin.php 파일을 수정하면 훨씬 자유롭고 편하게 스킨을 제작할 수 있습니다. 물론 그 전에 스킨 클래스의 각 메소드가 갖는 역할과 원리를 잘 이해하고 있어야 합니다.\n\n# info.php 파일\ninfo.php 파일은 스킨의 구동에 필요한 여러가지 정보를 입력하는 파일입니다. 간단한 php 문법으로 쉽게 작성할 수 있습니다.",charsets:{cjk:!0}},{title:"스킨 개발/제작",frontmatter:{},regularPath:"/07.%20%EC%8A%A4%ED%82%A8%20%EA%B0%9C%EB%B0%9C&%EC%A0%9C%EC%9E%91/introduce.html",relativePath:"07. 스킨 개발&제작/introduce.md",key:"v-71304e8e",path:"/07.%20%EC%8A%A4%ED%82%A8%20%EA%B0%9C%EB%B0%9C&%EC%A0%9C%EC%9E%91/introduce.html",headers:[{level:2,title:"개요",slug:"개요",charIndex:13},{level:2,title:"스킨 타겟",slug:"스킨-타겟",charIndex:66},{level:2,title:"빈 스킨생성 (터미널 환경)",slug:"빈-스킨생성-터미널-환경",charIndex:393},{level:2,title:"빈 스킨생성",slug:"빈-스킨생성",charIndex:393},{level:2,title:"스킨 컴포넌트 아이디",slug:"스킨-컴포넌트-아이디",charIndex:1510},{level:2,title:"스킨 등록",slug:"스킨-등록",charIndex:1700},{level:3,title:"스킨 디렉토리 구조",slug:"스킨-디렉토리-구조",charIndex:2332},{level:2,title:"스킨의 출력",slug:"스킨의-출력",charIndex:4131}],headersStr:"개요 스킨 타겟 빈 스킨생성 (터미널 환경) 빈 스킨생성 스킨 컴포넌트 아이디 스킨 등록 스킨 디렉토리 구조 스킨의 출력",content:"# 스킨 개발/제작\n# 개요\n이 문서는 스킨 생성 커맨드를 사용한 보편적인 방법의 스킨 제작 방법을 설명합니다.\n\n# 스킨 타겟\n스킨은 항상 그 스킨이 사용되는 대상(타겟)이 있습니다. 예를 들어 게시판 스킨은 게시판이 대상이 되며, 회원 프로필 스킨은 회원 프로필 컨트롤러가 대상이 됩니다. 또 특정 위젯이 대상이 될 수도 있습니다. 게시판, 회원 프로필 컨트롤러, 위젯과 같이 스킨이 적용되는 대상을 '스킨 타겟'이라고 합니다. 모든 스킨은 스킨 타겟을 반드시 지정해야 합니다.\n\nXE의 구성요소중 HTML을 출력하는 모든 구성요소는 스킨 타겟이 될 수 있습니다. 스킨 타겟은 HTML을 출력할 때, 스킨 시스템이 적용될 수 있도록 구현되어야 하며, 스킨 타겟 아이디를 지정해 주어야 합니다.\n\n# 빈 스킨생성 (터미널 환경)\n스킨 생성 커맨드를 사용하려면 우선 스킨이 소속될 플러그인이 마련되어 있어야 합니다. 아직 플러그인이 준비되지 않았다면, 플러그인 개발 시작하기 문서를 참고하여 플러그인을 생성하길 바랍니다. 또, 스킨 타겟의 아이디를 미리 알고 있어야 합니다.\n\n소속될 플러그인과 스킨 타겟 아이디가 준비되었다면 아래 커맨드를 사용하여 빈 스킨을 생성합니다.\n\n$ php artisan make:skin <plugin> <name> <target>\n\n\nplugin는 스킨 소속될 플러그인입니다. 플러그인이 위치한 디렉토리 이름을 입력해줍니다.\n\nname에는 스킨의 제목을 지정해 주십시오. 지정한 스킨 제목은 스킨 선택시 스킨의 이름으로 표시됩니다.\n\ntarget는 스킨 타겟 아이디를 지정해주십시오.\n\n만약 my_plugin 플러그인(플러그인 개발 시작하기의 예제를 그대로 사용합니다.)에 스킨을 넣고, 스킨 이름을 나만의 프로필 스킨으로 지정하고 싶다면, 아래와 같이 커맨드를 실행하시면 됩니다. 커맨드를 실행하면 생성되는 스킨의 개략적인 정보를 터미널에서 볼 수 있습니다. 회원 프로필 컨트롤러의 스킨 타겟 아이디는 member/profile입니다.\n\n$ php artisan make:skin my_plugin Profile member/profile\n\n[New skin info]\n  plugin:        my_plugin\n  path:          src/Skins/Profile\n  class file:    src/Skins/Profile/ProfileSkin.php\n  class name:    GilDongHong\\XePlugin\\MyPlugin\\Skins\\Profile\\ProfileSkin\n  id:            member/profile/skin/my_plugin@profile\n  title:         Profile Skin\n  description:   The Skin supported by My_plugin plugin.\n\n Do you want to add skin? [yes|no]:\n > yes\n\nGenerating autoload files\nSkin is created successfully.\n\n\n# 빈 스킨생성\n\n\n# 스킨 컴포넌트 아이디\n스킨도 컴포넌트이므로 컴포넌트 아이디를 가지고 있어야 합니다. 스킨의 컴포넌트 아이디는 아래 규칙을 따라야 합니다.\n\n<skin_target_id>/skin/<plugin_id>@<pure_id>\n\n\n위의 예시에서 생성한 스킨의 아이디는 member/profile/skin/my_plugin@profile입니다.\n\n# 스킨 등록\n스킨 생성 커맨드를 사용할 경우, 자동으로 스킨을 등록해 줍니다. 플러그인의 composer.json 파일에 아래와 같이 컴포넌트 정보가 등록되어 있습니다.\n\n// plugins/my_plugin/composer.json\n...\n  \"extra\": {\n        \"xpressengine\": {\n            \"title\": \"my plugin\",\n            \"component\": {\n                \"member/profile/skin/my_plugin@profile\": {\n                    \"name\": \"Profile skin\",\n                    \"description\": \"The skin supported by My_plugin plugin.\",\n                    \"class\": \"GilDongHong\\\\XePlugin\\\\MyPlugin\\\\Skins\\\\Profile\\\\ProfileSkin\"\n                }\n            }\n        }\n    }\n\n\nautoload 항목을 생성하지 않아도 src폴더안에 skin이 배치되어있기 때문 플러그인에서 자동으로 class를 로드합니다.\n\n# 스킨 디렉토리 구조\n생성된 스킨은 아래의 디렉토리 구조를 가집니다. plugins/my_plugin/src/Skins/{skinName} 디렉토리는 스킨의 모든 파일이 담겨 있는 '스킨 디렉토리'입니다.\n\nplugins/my_plugin/src/Skins\n└── {skinName}/\n    ├── assets/\n    │   └── css/\n    │       └── skin.css\n    ├── views/\n    │   └── index.blade.php\n    ├── {skinName}Skin.php\n    └── info.php\n\n\n# assets 파일\n스킨에 필요한 .js나 .css 파일 그리고 이미지 파일과 같은 asset 파일을 담는 디렉토리입니다.\n\n# views 디렉토리\n스킨을 출력할 때 사용하는 템플릿 파일들을 저장하는 디렉토리입니다. 템플릿 파일은 blade 템플릿 언어로 작성되어야 합니다. blade 템플릿 언어의 사용법은 템플릿 문서에 자세히 기술되어 있습니다.\n\n# Skin.php 파일\nSkin.php 파일(위의 예에서는 ProfileSkin.php 파일)은 스킨클래스 파일입니다. 스킨 생성 커맨드로 생성된 스킨의 클래스는 \\Xpressengine\\Skin\\GenericSkin 클래스를 상속받고 있습니다. 또, GenericSkin 클래스는 스킨 컴포넌트의 추상클래스인 \\Xpressengine\\Skin\\AbstractSkin를 상속받고 있습니다.\n\n\\Xpressengine\\Skin\\AbstractSkin\n└── \\Xpressengine\\Skin\\GenericSkin\n    └── Skin(Skin.php)\n\n\nPHP 개발자가 아닌 스킨 제작자가 스킨 클래스를 직접 작성하는 것은 쉬운 일이 아닙니다. GenericSkin 클래스는 스킨 제작자들에게 규격화 된 스킨 구조를 제공함으로써 스킨 제작을 손쉽게 할 수 있도록 도와줍니다. Skin.php 파일은 처음 생성한 다음부터는 거의 직접 수정할 필요가 없습니다. Skin.php를 직접 수정하는 대신, info.php를 수정하십시오.\n\n일반적으로 Skin.php 파일을 직접 수정하지 않아도 원하는 스킨을 제작하는 데에는 문제가 없습니다. 다만, 좀더 고수준의 스킨을 제작하고 싶거나, 특별한 기능을 스킨에 추가하고 싶다면 Skin.php 파일을 직접 수정하셔도 됩니다. Skin.php 파일을 수정하면 훨씬 자유롭고 편하게 스킨을 제작할 수 있습니다. 물론 그 전에 스킨 클래스의 각 메소드가 갖는 역할과 원리를 잘 이해하고 있어야 합니다.\n\n# info.php 파일\ninfo.php 파일은 스킨의 구동에 필요한 여러가지 정보를 입력하는 파일입니다. 간단한 php 문법으로 쉽게 작성할 수 있습니다.\n\n<?php\nreturn [\n    'setting' => [\n        'sample_text' => [\n            '_type' => 'text',\n            '_section' => '기본설정',\n            'label' => '샘플 문구',\n            'placeholder' => '샘플용 설정 필드입니다.',\n            'description' => '샘플용 설정 필드입니다.',\n        ],\n    ],\n    'support' => [\n        'mobile' => true,\n        'desktop' => true\n    ]\n];\n\n\nsetting 필드에는 스킨 설정 페이지에서 사용할 설정 항목에 대한 정보를 지정합니다.\n\nsupport 필드에는 이 스킨이 데스크탑 버전과 모바일 버전을 지원하는지를 지정합니다.\n\n# 스킨의 출력\n하나의 스킨은 하나 이상의 페이지의 출력을 담당할 수 있습니다. 출력하는 페이지의 갯수는 스킨 타겟에 따라 다릅니다. 게시판의 경우, 글보기, 글쓰기, 글목록 등의 페이지를 가지고 있는데, 스킨은 게시판이 필요로 하는 모든 페이지의 출력을 담당합니다.",contentLowercase:"# 스킨 개발/제작\n# 개요\n이 문서는 스킨 생성 커맨드를 사용한 보편적인 방법의 스킨 제작 방법을 설명합니다.\n\n# 스킨 타겟\n스킨은 항상 그 스킨이 사용되는 대상(타겟)이 있습니다. 예를 들어 게시판 스킨은 게시판이 대상이 되며, 회원 프로필 스킨은 회원 프로필 컨트롤러가 대상이 됩니다. 또 특정 위젯이 대상이 될 수도 있습니다. 게시판, 회원 프로필 컨트롤러, 위젯과 같이 스킨이 적용되는 대상을 '스킨 타겟'이라고 합니다. 모든 스킨은 스킨 타겟을 반드시 지정해야 합니다.\n\nxe의 구성요소중 html을 출력하는 모든 구성요소는 스킨 타겟이 될 수 있습니다. 스킨 타겟은 html을 출력할 때, 스킨 시스템이 적용될 수 있도록 구현되어야 하며, 스킨 타겟 아이디를 지정해 주어야 합니다.\n\n# 빈 스킨생성 (터미널 환경)\n스킨 생성 커맨드를 사용하려면 우선 스킨이 소속될 플러그인이 마련되어 있어야 합니다. 아직 플러그인이 준비되지 않았다면, 플러그인 개발 시작하기 문서를 참고하여 플러그인을 생성하길 바랍니다. 또, 스킨 타겟의 아이디를 미리 알고 있어야 합니다.\n\n소속될 플러그인과 스킨 타겟 아이디가 준비되었다면 아래 커맨드를 사용하여 빈 스킨을 생성합니다.\n\n$ php artisan make:skin <plugin> <name> <target>\n\n\nplugin는 스킨 소속될 플러그인입니다. 플러그인이 위치한 디렉토리 이름을 입력해줍니다.\n\nname에는 스킨의 제목을 지정해 주십시오. 지정한 스킨 제목은 스킨 선택시 스킨의 이름으로 표시됩니다.\n\ntarget는 스킨 타겟 아이디를 지정해주십시오.\n\n만약 my_plugin 플러그인(플러그인 개발 시작하기의 예제를 그대로 사용합니다.)에 스킨을 넣고, 스킨 이름을 나만의 프로필 스킨으로 지정하고 싶다면, 아래와 같이 커맨드를 실행하시면 됩니다. 커맨드를 실행하면 생성되는 스킨의 개략적인 정보를 터미널에서 볼 수 있습니다. 회원 프로필 컨트롤러의 스킨 타겟 아이디는 member/profile입니다.\n\n$ php artisan make:skin my_plugin profile member/profile\n\n[new skin info]\n  plugin:        my_plugin\n  path:          src/skins/profile\n  class file:    src/skins/profile/profileskin.php\n  class name:    gildonghong\\xeplugin\\myplugin\\skins\\profile\\profileskin\n  id:            member/profile/skin/my_plugin@profile\n  title:         profile skin\n  description:   the skin supported by my_plugin plugin.\n\n do you want to add skin? [yes|no]:\n > yes\n\ngenerating autoload files\nskin is created successfully.\n\n\n# 빈 스킨생성\n\n\n# 스킨 컴포넌트 아이디\n스킨도 컴포넌트이므로 컴포넌트 아이디를 가지고 있어야 합니다. 스킨의 컴포넌트 아이디는 아래 규칙을 따라야 합니다.\n\n<skin_target_id>/skin/<plugin_id>@<pure_id>\n\n\n위의 예시에서 생성한 스킨의 아이디는 member/profile/skin/my_plugin@profile입니다.\n\n# 스킨 등록\n스킨 생성 커맨드를 사용할 경우, 자동으로 스킨을 등록해 줍니다. 플러그인의 composer.json 파일에 아래와 같이 컴포넌트 정보가 등록되어 있습니다.\n\n// plugins/my_plugin/composer.json\n...\n  \"extra\": {\n        \"xpressengine\": {\n            \"title\": \"my plugin\",\n            \"component\": {\n                \"member/profile/skin/my_plugin@profile\": {\n                    \"name\": \"profile skin\",\n                    \"description\": \"the skin supported by my_plugin plugin.\",\n                    \"class\": \"gildonghong\\\\xeplugin\\\\myplugin\\\\skins\\\\profile\\\\profileskin\"\n                }\n            }\n        }\n    }\n\n\nautoload 항목을 생성하지 않아도 src폴더안에 skin이 배치되어있기 때문 플러그인에서 자동으로 class를 로드합니다.\n\n# 스킨 디렉토리 구조\n생성된 스킨은 아래의 디렉토리 구조를 가집니다. plugins/my_plugin/src/skins/{skinname} 디렉토리는 스킨의 모든 파일이 담겨 있는 '스킨 디렉토리'입니다.\n\nplugins/my_plugin/src/skins\n└── {skinname}/\n    ├── assets/\n    │   └── css/\n    │       └── skin.css\n    ├── views/\n    │   └── index.blade.php\n    ├── {skinname}skin.php\n    └── info.php\n\n\n# assets 파일\n스킨에 필요한 .js나 .css 파일 그리고 이미지 파일과 같은 asset 파일을 담는 디렉토리입니다.\n\n# views 디렉토리\n스킨을 출력할 때 사용하는 템플릿 파일들을 저장하는 디렉토리입니다. 템플릿 파일은 blade 템플릿 언어로 작성되어야 합니다. blade 템플릿 언어의 사용법은 템플릿 문서에 자세히 기술되어 있습니다.\n\n# skin.php 파일\nskin.php 파일(위의 예에서는 profileskin.php 파일)은 스킨클래스 파일입니다. 스킨 생성 커맨드로 생성된 스킨의 클래스는 \\xpressengine\\skin\\genericskin 클래스를 상속받고 있습니다. 또, genericskin 클래스는 스킨 컴포넌트의 추상클래스인 \\xpressengine\\skin\\abstractskin를 상속받고 있습니다.\n\n\\xpressengine\\skin\\abstractskin\n└── \\xpressengine\\skin\\genericskin\n    └── skin(skin.php)\n\n\nphp 개발자가 아닌 스킨 제작자가 스킨 클래스를 직접 작성하는 것은 쉬운 일이 아닙니다. genericskin 클래스는 스킨 제작자들에게 규격화 된 스킨 구조를 제공함으로써 스킨 제작을 손쉽게 할 수 있도록 도와줍니다. skin.php 파일은 처음 생성한 다음부터는 거의 직접 수정할 필요가 없습니다. skin.php를 직접 수정하는 대신, info.php를 수정하십시오.\n\n일반적으로 skin.php 파일을 직접 수정하지 않아도 원하는 스킨을 제작하는 데에는 문제가 없습니다. 다만, 좀더 고수준의 스킨을 제작하고 싶거나, 특별한 기능을 스킨에 추가하고 싶다면 skin.php 파일을 직접 수정하셔도 됩니다. skin.php 파일을 수정하면 훨씬 자유롭고 편하게 스킨을 제작할 수 있습니다. 물론 그 전에 스킨 클래스의 각 메소드가 갖는 역할과 원리를 잘 이해하고 있어야 합니다.\n\n# info.php 파일\ninfo.php 파일은 스킨의 구동에 필요한 여러가지 정보를 입력하는 파일입니다. 간단한 php 문법으로 쉽게 작성할 수 있습니다.\n\n<?php\nreturn [\n    'setting' => [\n        'sample_text' => [\n            '_type' => 'text',\n            '_section' => '기본설정',\n            'label' => '샘플 문구',\n            'placeholder' => '샘플용 설정 필드입니다.',\n            'description' => '샘플용 설정 필드입니다.',\n        ],\n    ],\n    'support' => [\n        'mobile' => true,\n        'desktop' => true\n    ]\n];\n\n\nsetting 필드에는 스킨 설정 페이지에서 사용할 설정 항목에 대한 정보를 지정합니다.\n\nsupport 필드에는 이 스킨이 데스크탑 버전과 모바일 버전을 지원하는지를 지정합니다.\n\n# 스킨의 출력\n하나의 스킨은 하나 이상의 페이지의 출력을 담당할 수 있습니다. 출력하는 페이지의 갯수는 스킨 타겟에 따라 다릅니다. 게시판의 경우, 글보기, 글쓰기, 글목록 등의 페이지를 가지고 있는데, 스킨은 게시판이 필요로 하는 모든 페이지의 출력을 담당합니다.",charsets:{cjk:!0}},{title:"스킨 설정",frontmatter:{},regularPath:"/07.%20%EC%8A%A4%ED%82%A8%20%EA%B0%9C%EB%B0%9C&%EC%A0%9C%EC%9E%91/skin-config-edit.html",relativePath:"07. 스킨 개발&제작/skin-config-edit.md",key:"v-51816c30",path:"/07.%20%EC%8A%A4%ED%82%A8%20%EA%B0%9C%EB%B0%9C&%EC%A0%9C%EC%9E%91/skin-config-edit.html",headers:[{level:2,title:"스킨 설정 파일",slug:"스킨-설정-파일",charIndex:10},{level:3,title:"info.php",slug:"info-php",charIndex:21}],headersStr:"스킨 설정 파일 info.php",content:"# 스킨 설정\n# 스킨 설정 파일\n# info.php\ninfo.php 파일은 스킨의 구동에 필요한 여러가지 정보를 입력하는 파일입니다. 간단한 php 문법으로 쉽게 작성할 수 있습니다.\n\n<?php\nreturn [\n    'setting' => [\n        'sample_text' => [\n            '_type' => 'text',\n            '_section' => '기본설정',\n            'label' => '샘플 문구',\n            'placeholder' => '샘플용 설정 필드입니다.',\n            'description' => '샘플용 설정 필드입니다.',\n        ],\n    ],\n    'support' => [\n        'mobile' => true,\n        'desktop' => true\n    ]\n];\n\n\nsetting 필드에는 스킨 설정 페이지에서 사용할 설정 항목에 대한 정보를 지정합니다.\n\nsupport 필드에는 이 스킨이 데스크탑 버전과 모바일 버전을 지원하는지를 지정합니다.",contentLowercase:"# 스킨 설정\n# 스킨 설정 파일\n# info.php\ninfo.php 파일은 스킨의 구동에 필요한 여러가지 정보를 입력하는 파일입니다. 간단한 php 문법으로 쉽게 작성할 수 있습니다.\n\n<?php\nreturn [\n    'setting' => [\n        'sample_text' => [\n            '_type' => 'text',\n            '_section' => '기본설정',\n            'label' => '샘플 문구',\n            'placeholder' => '샘플용 설정 필드입니다.',\n            'description' => '샘플용 설정 필드입니다.',\n        ],\n    ],\n    'support' => [\n        'mobile' => true,\n        'desktop' => true\n    ]\n];\n\n\nsetting 필드에는 스킨 설정 페이지에서 사용할 설정 항목에 대한 정보를 지정합니다.\n\nsupport 필드에는 이 스킨이 데스크탑 버전과 모바일 버전을 지원하는지를 지정합니다.",charsets:{cjk:!0}},{title:"서비스",frontmatter:{},regularPath:"/08.%20%EC%84%9C%EB%B9%84%EC%8A%A4/",relativePath:"08. 서비스/README.md",key:"v-69924ac0",path:"/08.%20%EC%84%9C%EB%B9%84%EC%8A%A4/",headersStr:null,content:"# 서비스",contentLowercase:"# 서비스",charsets:{cjk:!0}},{title:"캡챠",frontmatter:{},regularPath:"/08.%20%EC%84%9C%EB%B9%84%EC%8A%A4/service-captcha.html",relativePath:"08. 서비스/service-captcha.md",key:"v-d02f1876",path:"/08.%20%EC%84%9C%EB%B9%84%EC%8A%A4/service-captcha.html",headersStr:null,content:"# 캡챠",contentLowercase:"# 캡챠",charsets:{cjk:!0}},{title:"카테고리",frontmatter:{},regularPath:"/08.%20%EC%84%9C%EB%B9%84%EC%8A%A4/service-category.html",relativePath:"08. 서비스/service-category.md",key:"v-63f29e3b",path:"/08.%20%EC%84%9C%EB%B9%84%EC%8A%A4/service-category.html",headers:[{level:2,title:"카테고리\\(category\\)",slug:"카테고리-category",charIndex:9},{level:3,title:"등록",slug:"등록",charIndex:85},{level:3,title:"트리",slug:"트리",charIndex:478}],headersStr:"카테고리\\(category\\) 등록 트리",content:"# 카테고리\n# 카테고리(category)\n웹 애플리케이션을 구성하다보면 컨텐츠를 분류하고자 할때가 있습니다. 이때 필요한게 카테고리 기능입니다.\n\n# 등록\n카테고리를 사용하기 위해선 먼저 카테고리의 그룹을 생성해야 합니다. 그리고 해당 카테고리 그룹에 아이템들을 등록시킵니다.\n\n// 신규 카테고리 그룹 생성\n$category = XeCategory::createCate();\n// 카테고리 그룹에 아이템 추가\n$item = XeCategory::createItem($category, ['word' => 'foo']);\n\n\n만약 특정 카테고리 아이템의 자식에 해당하는 아이템을 등록하고자 한다면, 전달하는 값에 parentId 항목에 부모에 해당하는 아이디값을 포함하면 됩니다.\n\n$item = XeCategory::createItem($category, ['word' => 'foo', 'parentId' => '{parent id}']);\n\n\n# 트리\n카테고리는 트리구조를 가지고 있습니다. 그래서 특정 카테고리 아이템의 부모 또는 자식에 해당하는 아이템들을 조회할 수 있습니다.\n\n$item = XeCategory::items()->find($id);\n// 자식에 해당하는 아이템\n$children = $item->getChildren();\n// 부모 아이템\n$parent = $item->getParent();\n\n\n또한 트리형태로 아이템들을 얻을 수 있습니다.\n\n$category = XeCagetory::cates()->find($id);\n$tree = $category->getTree();     // 카테고리 전체 트리\n\n$item = XeCategory::items()->find($id);\n$tree = $item->getDescendantTree();  // 특정 아이템의 자손들로 이루어진 트리",contentLowercase:"# 카테고리\n# 카테고리(category)\n웹 애플리케이션을 구성하다보면 컨텐츠를 분류하고자 할때가 있습니다. 이때 필요한게 카테고리 기능입니다.\n\n# 등록\n카테고리를 사용하기 위해선 먼저 카테고리의 그룹을 생성해야 합니다. 그리고 해당 카테고리 그룹에 아이템들을 등록시킵니다.\n\n// 신규 카테고리 그룹 생성\n$category = xecategory::createcate();\n// 카테고리 그룹에 아이템 추가\n$item = xecategory::createitem($category, ['word' => 'foo']);\n\n\n만약 특정 카테고리 아이템의 자식에 해당하는 아이템을 등록하고자 한다면, 전달하는 값에 parentid 항목에 부모에 해당하는 아이디값을 포함하면 됩니다.\n\n$item = xecategory::createitem($category, ['word' => 'foo', 'parentid' => '{parent id}']);\n\n\n# 트리\n카테고리는 트리구조를 가지고 있습니다. 그래서 특정 카테고리 아이템의 부모 또는 자식에 해당하는 아이템들을 조회할 수 있습니다.\n\n$item = xecategory::items()->find($id);\n// 자식에 해당하는 아이템\n$children = $item->getchildren();\n// 부모 아이템\n$parent = $item->getparent();\n\n\n또한 트리형태로 아이템들을 얻을 수 있습니다.\n\n$category = xecagetory::cates()->find($id);\n$tree = $category->gettree();     // 카테고리 전체 트리\n\n$item = xecategory::items()->find($id);\n$tree = $item->getdescendanttree();  // 특정 아이템의 자손들로 이루어진 트리",charsets:{cjk:!0}},{title:"설정",frontmatter:{},regularPath:"/08.%20%EC%84%9C%EB%B9%84%EC%8A%A4/service-config.html",relativePath:"08. 서비스/service-config.md",key:"v-5df07c1a",path:"/08.%20%EC%84%9C%EB%B9%84%EC%8A%A4/service-config.html",headers:[{level:2,title:"설정\\(config\\)",slug:"설정-config",charIndex:7},{level:3,title:"등록",slug:"등록",charIndex:133},{level:3,title:"조회",slug:"조회",charIndex:1217},{level:3,title:"계층조회",slug:"계층조회",charIndex:1689}],headersStr:"설정\\(config\\) 등록 조회 계층조회",content:"# 설정\n# 설정(config)\nXE에서 제공하는 config는 laravel에서 제공되는 config와는 다르게 데이터베이스에 정보를 담으며 계층을 가지고 상위 정보를 참조합니다. 이때 각 계층은 \".\"(dot) 으로 구분합니다.\n\n# 등록\nconfig 는 해당 설정을 나타내는 이름과 그에 매칭되는 배열을 통해 등록됩니다.\n\nXeConfig::add('foo', ['var1' => 'a', 'var2' => 'b']);\nXeConfig::add('foo.bar', ['var1' => 'A']);\nXeConfig::set('foo.baz', ['var2' => 'B']);\n\n\nadd는 새로운 설정정보를 등록하는 메서드입니다. 만약 같은 이름의 설정이 이미 등록되어져 있는 경우 Exception이 발생하게 됩니다.\n\nset은 기존 설정의 존재 유무와 상관 없이 값을 등록합니다. set의 경우 기존에 같은 이름의 설정이 존재하는 경우 메서드 호출시 전달된 배열의 키에 해당하는 값만을 갱신해 줍니다.\n\nXeConfig::add('foo', ['var1' => 'a', 'var2' => 'b']);\nXeConfig::set('foo', ['var1' => 'A']);\necho XeConfig::getVal('foo.var1'); // A\necho XeConfig::getVal('foo.var2'); // b\n\n\n설정을 등록하는 방법은 add, set 이외에도 put, modify, setVal이 있습니다.\n\nput은 기존에 같은 이름을 가지는 설정이 먼저 등록되어 있어야 정상적으로 동작합니다. 또한 set 과는 다르게 기존의 설정들을 메서드 호출시 전달된 배열 값으로 모두 대체합니다.\n\nXeConfig::add('foo', ['var1' => 'a', 'var2' => 'b']);\nXeConfig::put('foo', ['var1' => 'A']);\necho XeConfig::getVal('foo.var1'); // A\necho XeConfig::getVal('foo.var2'); // null\n\n\nmodify는 config 객체를 통해 수정하는 기능입니다.\n\n$config = XeConfig::get('foo');\n$config->set('var1', 'A');\nXeConfig::modify($config);\n\n\nsetVal은 설정의 특정 항목의 값만 등록하는 메서드입니다.\n\nXeConfig::setVal('foo.var1', 'A');\n\n\n# 조회\n등록된 설정을 조회할때는 특정 설정키에 해당하는 값을 받거나, config 객체를 반환 받은후 값을 조회하는 방법이 있습니다.\n\nXeConfig::add('foo', ['var1' => 'a', 'var2' => 'b']);\necho XeConfig::getVal('foo.var1'); // a\n// 또는\n$config = XeConfig::get('foo');\necho $config->get('var1'); // a\n\n\n만약 등록된 설정이 없는 경우 특정값을 반환 받고 싶으면 다음 인자에 값을 전달하면 됩니다.\n\nXeConfig::add('foo', ['var1' => 'a', 'var2' => 'b']);\necho XeConfig::getVal('foo.var3', 'c'); // c\n// 또는\n$config = XeConfig::get('foo');\necho $config->get('var3', 'c'); // c\n\n\n# 계층조회\nconfig는 계층을 가지고 있고 이를 이용하여 존재하지 않는 설정은 부모에 해당하는 설정을 조회하여 결과를 반환합니다.\n\nXeConfig::add('foo', ['var1' => 'a', 'var2' => 'b']);\nXeConfig::add('foo.bar', ['var1' => 'A']);\necho XeConfig::getVal('foo.bar.var2'); // b\n\n\n> 설정을 조회할때 두번째 인자로 default 값을 전달하는 경우 최상위 설정에서도 해당하는 결과가 없는 경우에 default 값이 반환되어 집니다.",contentLowercase:"# 설정\n# 설정(config)\nxe에서 제공하는 config는 laravel에서 제공되는 config와는 다르게 데이터베이스에 정보를 담으며 계층을 가지고 상위 정보를 참조합니다. 이때 각 계층은 \".\"(dot) 으로 구분합니다.\n\n# 등록\nconfig 는 해당 설정을 나타내는 이름과 그에 매칭되는 배열을 통해 등록됩니다.\n\nxeconfig::add('foo', ['var1' => 'a', 'var2' => 'b']);\nxeconfig::add('foo.bar', ['var1' => 'a']);\nxeconfig::set('foo.baz', ['var2' => 'b']);\n\n\nadd는 새로운 설정정보를 등록하는 메서드입니다. 만약 같은 이름의 설정이 이미 등록되어져 있는 경우 exception이 발생하게 됩니다.\n\nset은 기존 설정의 존재 유무와 상관 없이 값을 등록합니다. set의 경우 기존에 같은 이름의 설정이 존재하는 경우 메서드 호출시 전달된 배열의 키에 해당하는 값만을 갱신해 줍니다.\n\nxeconfig::add('foo', ['var1' => 'a', 'var2' => 'b']);\nxeconfig::set('foo', ['var1' => 'a']);\necho xeconfig::getval('foo.var1'); // a\necho xeconfig::getval('foo.var2'); // b\n\n\n설정을 등록하는 방법은 add, set 이외에도 put, modify, setval이 있습니다.\n\nput은 기존에 같은 이름을 가지는 설정이 먼저 등록되어 있어야 정상적으로 동작합니다. 또한 set 과는 다르게 기존의 설정들을 메서드 호출시 전달된 배열 값으로 모두 대체합니다.\n\nxeconfig::add('foo', ['var1' => 'a', 'var2' => 'b']);\nxeconfig::put('foo', ['var1' => 'a']);\necho xeconfig::getval('foo.var1'); // a\necho xeconfig::getval('foo.var2'); // null\n\n\nmodify는 config 객체를 통해 수정하는 기능입니다.\n\n$config = xeconfig::get('foo');\n$config->set('var1', 'a');\nxeconfig::modify($config);\n\n\nsetval은 설정의 특정 항목의 값만 등록하는 메서드입니다.\n\nxeconfig::setval('foo.var1', 'a');\n\n\n# 조회\n등록된 설정을 조회할때는 특정 설정키에 해당하는 값을 받거나, config 객체를 반환 받은후 값을 조회하는 방법이 있습니다.\n\nxeconfig::add('foo', ['var1' => 'a', 'var2' => 'b']);\necho xeconfig::getval('foo.var1'); // a\n// 또는\n$config = xeconfig::get('foo');\necho $config->get('var1'); // a\n\n\n만약 등록된 설정이 없는 경우 특정값을 반환 받고 싶으면 다음 인자에 값을 전달하면 됩니다.\n\nxeconfig::add('foo', ['var1' => 'a', 'var2' => 'b']);\necho xeconfig::getval('foo.var3', 'c'); // c\n// 또는\n$config = xeconfig::get('foo');\necho $config->get('var3', 'c'); // c\n\n\n# 계층조회\nconfig는 계층을 가지고 있고 이를 이용하여 존재하지 않는 설정은 부모에 해당하는 설정을 조회하여 결과를 반환합니다.\n\nxeconfig::add('foo', ['var1' => 'a', 'var2' => 'b']);\nxeconfig::add('foo.bar', ['var1' => 'a']);\necho xeconfig::getval('foo.bar.var2'); // b\n\n\n> 설정을 조회할때 두번째 인자로 default 값을 전달하는 경우 최상위 설정에서도 해당하는 결과가 없는 경우에 default 값이 반환되어 집니다.",charsets:{cjk:!0}},{title:"쿠키",frontmatter:{},regularPath:"/08.%20%EC%84%9C%EB%B9%84%EC%8A%A4/service-cookie.html",relativePath:"08. 서비스/service-cookie.md",key:"v-27f6cb2f",path:"/08.%20%EC%84%9C%EB%B9%84%EC%8A%A4/service-cookie.html",headers:[{level:2,title:"쿠키\\(cookie\\)",slug:"쿠키-cookie",charIndex:7},{level:3,title:"쿠키 값 가져오기",slug:"쿠키-값-가져오기",charIndex:169},{level:3,title:"Response에 새로운 쿠키 추가하기",slug:"response에-새로운-쿠키-추가하기",charIndex:218},{level:3,title:"영원히 남게되는 쿠키 생성하기",slug:"영원히-남게되는-쿠키-생성하기",charIndex:499},{level:3,title:"쿠키 큐처리 하기",slug:"쿠키-큐처리-하기",charIndex:601}],headersStr:"쿠키\\(cookie\\) 쿠키 값 가져오기 Response에 새로운 쿠키 추가하기 영원히 남게되는 쿠키 생성하기 쿠키 큐처리 하기",content:"# 쿠키\n# 쿠키(cookie)\nXE에서 모든 쿠키는 서버에서 미들웨어를 거치면서 인증 코드와 함께 암호화 됩니다. 이 말은 클라이언트가 변경되었을 때 쿠키가 유효하지 않다는 것을 의미합니다. 쿠키 값은 Request 인스턴스와 Response 인스턴스를 사용하여 조회하거나 저장할 수 있습니다.\n\n# 쿠키 값 가져오기\n$value = $request->cookie('name');\n\n\n# Response에 새로운 쿠키 추가하기\ncookie 헬퍼함수는 새로운 Symfony\\Component\\HttpFoundation\\Cookie 인스턴스를 생성하기 위한 간단한 팩토리로 작동합니다. 쿠키를 Response 인스턴스에 추가하려면 withCookie 메소드를 사용하면 됩니다:\n\n$response = new Illuminate\\Http\\Response('Hello World');\n\n$response->withCookie(cookie('name', 'value', $minutes));\n\n\n# 영원히 남게되는 쿠키 생성하기\n영원히는 실제로는 5년을 의미합니다.\n\n$response->withCookie(cookie()->forever('name', 'value'));\n\n\n# 쿠키 큐처리 하기\n플러그인 클래스의 boot 메소드는 XE의 라이프 사이클에서 매우 이른 시점에 실행됩니다. 이렇게 Response 인스턴스가 작성되기 전에 실행되는 코드에서는 반환되는 Response에 추가할 쿠키를 “큐 처리”할 수 있습니다:\n\n<?php namespace App\\Http\\Controllers;\n\nuse Cookie;\nuse Illuminate\\Routing\\Controller;\n\nclass UserController extends Controller\n{\n    /**\n     * Update a resource\n     *\n     * @return Response\n     */\n     public function update()\n     {\n        Cookie::queue('name', 'value');\n\n        return response('Hello World');\n     }\n}",contentLowercase:"# 쿠키\n# 쿠키(cookie)\nxe에서 모든 쿠키는 서버에서 미들웨어를 거치면서 인증 코드와 함께 암호화 됩니다. 이 말은 클라이언트가 변경되었을 때 쿠키가 유효하지 않다는 것을 의미합니다. 쿠키 값은 request 인스턴스와 response 인스턴스를 사용하여 조회하거나 저장할 수 있습니다.\n\n# 쿠키 값 가져오기\n$value = $request->cookie('name');\n\n\n# response에 새로운 쿠키 추가하기\ncookie 헬퍼함수는 새로운 symfony\\component\\httpfoundation\\cookie 인스턴스를 생성하기 위한 간단한 팩토리로 작동합니다. 쿠키를 response 인스턴스에 추가하려면 withcookie 메소드를 사용하면 됩니다:\n\n$response = new illuminate\\http\\response('hello world');\n\n$response->withcookie(cookie('name', 'value', $minutes));\n\n\n# 영원히 남게되는 쿠키 생성하기\n영원히는 실제로는 5년을 의미합니다.\n\n$response->withcookie(cookie()->forever('name', 'value'));\n\n\n# 쿠키 큐처리 하기\n플러그인 클래스의 boot 메소드는 xe의 라이프 사이클에서 매우 이른 시점에 실행됩니다. 이렇게 response 인스턴스가 작성되기 전에 실행되는 코드에서는 반환되는 response에 추가할 쿠키를 “큐 처리”할 수 있습니다:\n\n<?php namespace app\\http\\controllers;\n\nuse cookie;\nuse illuminate\\routing\\controller;\n\nclass usercontroller extends controller\n{\n    /**\n     * update a resource\n     *\n     * @return response\n     */\n     public function update()\n     {\n        cookie::queue('name', 'value');\n\n        return response('hello world');\n     }\n}",charsets:{cjk:!0}},{title:"카운터",frontmatter:{},regularPath:"/08.%20%EC%84%9C%EB%B9%84%EC%8A%A4/service-counter.html",relativePath:"08. 서비스/service-counter.md",key:"v-09fe8e85",path:"/08.%20%EC%84%9C%EB%B9%84%EC%8A%A4/service-counter.html",headers:[{level:2,title:"카운터\\(counter\\)",slug:"카운터-counter",charIndex:8},{level:3,title:"카운터 인스턴스",slug:"카운터-인스턴스",charIndex:258}],headersStr:"카운터\\(counter\\) 카운터 인스턴스",content:"# 카운터\n# 카운터(counter)\n수를 세는 일은 중요하지도 않고 복잡하지도 않으며 자주 사용되는 기능입니다. 우리는 글 조회수를 세거나 투표, 신고등 여러가지 기능을 구현할 때 로그를 남기고 그 수를 세려고 합니다.\n\n수를 세는 기능들은 어떤 대상을 기준(이하 targetId)으로 인터넷 주소(IP)나 회원 아이디로 구분하여 처리합니다.\n\n카운터 패키지는 IP와 회원 아이디를 기준으로하는 두가지 방법에 대해서 수를 셀 수 있는 기능을 제공합니다.\n\n# 카운터 인스턴스\n카운터를 사용하기 위해서는 카운터 인스턴스를 획득해야 합니다. 수를 셀 때 두가지 방식을 제공합니다. 그 첫번째는 게시물 조회수를 처리할 때 처럼 targetId에 대해서 IP, 회원 아이디를 기준으로 처리하면 되는 방식입니다. 이 때 조회수를 처리하기 위해 카운터 인스턴스를 획득하는 코드는 아래와 같습니다.\n\n// 문서 조회에 사용할 카운터 반환\n$readCounter = XeCounter::make($request, 'read');\n\n\n두번째 방식은 투표수를 셀 때 사용하는 방식입니다. 투표는 targetId에 대해서 몇개의 옵션을 설정하고 각 옵션별 수를 셉니다. 그리고 IP, 회원 아이디는 targetId에 한번만 처리 되어야 합니다. 이러한 카운터의 인스턴스를 획득하는 코드는 아래와 같습니다.\n\n// 투표(찬성, 반대)에 사용할 카운터 반환\n$voteCounter = XeCounter::make($request, 'vote', ['assent', dissent']);\n\n\n세번째 인자 ['assent', dissent']를 추가해서 사용가능합니다.\n\nXeCounter::make() 로 반환된 카운터 인스턴스는 Interception Proxy 인스턴스로 intercept 할 수 있습니다.\n\n# 조회수 증가\n$doc = Document::find('id');\n\n$readCounter = XeCounter::make($request, 'read');\n// Counter는 $user 가 Guest라면 IP를 기준으로 수를 셉니다.\n$readCounter->setGuest();\n\n$user = Auth::user();\nif ($readCounter->has($doc->id, $user) === false) {\n  $readCounter->add($doc->id, $user);\n}\n\n$doc->readCount = $readCounter->getPoint($doc->id);\n$doc->save();\n\n\n> 조회수를 적용하기 위해서는 이와 같이 조회수를 카운터가 전달한 조회수를 문서에 직접 입력해야 합니다.\n\n\n# 투표 취소\n$doc = Document::find('id');\n\n// 투표는 회원에 대해서만 동작합니다.\n$voteCounter = XeCounter::make($request, 'vote', ['assent', 'dissent']);\n\n// 인스턴스에 설정된 두개의 옵션 중에서 'assent' 에 투표\n$option = 'assent';\n\n$user = Auth::user();\n\n// 회원에 대해서 동작하기 때문에 로그인하지 않은 회원인 경우 GuestNotSupportException 발생\ntry {\n    $voteCounter->remove($doc, $user, $option);\n} catch (GuestNotSupportException $e) {\n    throw new AccessDeniedHttpException;\n}\n\n$doc->assentCount = $readCounter->getPoint($doc->id, 'assent');\n$doc->save();\n\n\n# 투표 로그\n투표에 참여한 사용자 로그를 확인합니다.\n\n$doc = Document::find('id');\n\n// 투표는 회원에 대해서만 동작합니다.\n$voteCounter = XeCounter::make($request, 'vote', ['assent', 'dissent']);\n\n// 찬선에 투표한 회원 목록을 가져옵니다.\n$users = $voteCounter->getUsers($doc->id, 'assent');",contentLowercase:"# 카운터\n# 카운터(counter)\n수를 세는 일은 중요하지도 않고 복잡하지도 않으며 자주 사용되는 기능입니다. 우리는 글 조회수를 세거나 투표, 신고등 여러가지 기능을 구현할 때 로그를 남기고 그 수를 세려고 합니다.\n\n수를 세는 기능들은 어떤 대상을 기준(이하 targetid)으로 인터넷 주소(ip)나 회원 아이디로 구분하여 처리합니다.\n\n카운터 패키지는 ip와 회원 아이디를 기준으로하는 두가지 방법에 대해서 수를 셀 수 있는 기능을 제공합니다.\n\n# 카운터 인스턴스\n카운터를 사용하기 위해서는 카운터 인스턴스를 획득해야 합니다. 수를 셀 때 두가지 방식을 제공합니다. 그 첫번째는 게시물 조회수를 처리할 때 처럼 targetid에 대해서 ip, 회원 아이디를 기준으로 처리하면 되는 방식입니다. 이 때 조회수를 처리하기 위해 카운터 인스턴스를 획득하는 코드는 아래와 같습니다.\n\n// 문서 조회에 사용할 카운터 반환\n$readcounter = xecounter::make($request, 'read');\n\n\n두번째 방식은 투표수를 셀 때 사용하는 방식입니다. 투표는 targetid에 대해서 몇개의 옵션을 설정하고 각 옵션별 수를 셉니다. 그리고 ip, 회원 아이디는 targetid에 한번만 처리 되어야 합니다. 이러한 카운터의 인스턴스를 획득하는 코드는 아래와 같습니다.\n\n// 투표(찬성, 반대)에 사용할 카운터 반환\n$votecounter = xecounter::make($request, 'vote', ['assent', dissent']);\n\n\n세번째 인자 ['assent', dissent']를 추가해서 사용가능합니다.\n\nxecounter::make() 로 반환된 카운터 인스턴스는 interception proxy 인스턴스로 intercept 할 수 있습니다.\n\n# 조회수 증가\n$doc = document::find('id');\n\n$readcounter = xecounter::make($request, 'read');\n// counter는 $user 가 guest라면 ip를 기준으로 수를 셉니다.\n$readcounter->setguest();\n\n$user = auth::user();\nif ($readcounter->has($doc->id, $user) === false) {\n  $readcounter->add($doc->id, $user);\n}\n\n$doc->readcount = $readcounter->getpoint($doc->id);\n$doc->save();\n\n\n> 조회수를 적용하기 위해서는 이와 같이 조회수를 카운터가 전달한 조회수를 문서에 직접 입력해야 합니다.\n\n\n# 투표 취소\n$doc = document::find('id');\n\n// 투표는 회원에 대해서만 동작합니다.\n$votecounter = xecounter::make($request, 'vote', ['assent', 'dissent']);\n\n// 인스턴스에 설정된 두개의 옵션 중에서 'assent' 에 투표\n$option = 'assent';\n\n$user = auth::user();\n\n// 회원에 대해서 동작하기 때문에 로그인하지 않은 회원인 경우 guestnotsupportexception 발생\ntry {\n    $votecounter->remove($doc, $user, $option);\n} catch (guestnotsupportexception $e) {\n    throw new accessdeniedhttpexception;\n}\n\n$doc->assentcount = $readcounter->getpoint($doc->id, 'assent');\n$doc->save();\n\n\n# 투표 로그\n투표에 참여한 사용자 로그를 확인합니다.\n\n$doc = document::find('id');\n\n// 투표는 회원에 대해서만 동작합니다.\n$votecounter = xecounter::make($request, 'vote', ['assent', 'dissent']);\n\n// 찬선에 투표한 회원 목록을 가져옵니다.\n$users = $votecounter->getusers($doc->id, 'assent');",charsets:{cjk:!0}},{title:"데이터베이스",frontmatter:{},regularPath:"/08.%20%EC%84%9C%EB%B9%84%EC%8A%A4/service-database.html",relativePath:"08. 서비스/service-database.md",key:"v-479e0941",path:"/08.%20%EC%84%9C%EB%B9%84%EC%8A%A4/service-database.html",headers:[{level:2,title:"데이터베이스\\(database\\)",slug:"데이터베이스-database",charIndex:11},{level:3,title:"설정",slug:"설정",charIndex:500},{level:3,title:"가상 연결",slug:"가상-연결",charIndex:529},{level:3,title:"Proxy",slug:"proxy",charIndex:1294},{level:3,title:"트랜잭션",slug:"트랜잭션",charIndex:2012}],headersStr:"데이터베이스\\(database\\) 설정 가상 연결 Proxy 트랜잭션",content:"# 데이터베이스\n# 데이터베이스(database)\nXE가 자체적으로 부하분산을 처리할 수 있을까? 어떻게 하면 회원과 문서의 데이터베이스 사용을 분리시킬 수 있을까?\n\n이 고민에서 시작이었습니다. 이미 Laravel은 훌륭한 데이터베이스 처리 방식을 제안하고 있습니다. 다만 우리는 앞서 얘기한 고민을 해결하기 위해 새로운 데이터베이스를 만들기 보다 우리가 하고자 하는 일을 해결할 수 있는 기능을 추가한 전혀 새롭지 않은(Laravel 의 데이터베이스와 같은) 데이터베이스를 만들고 싶었습니다.\n\n기본적인 사용 방법은 Laravel 과 같으며 단지 XeDB 파사드를 사용하면 됩니다.\n\n> 기본적인 데이터베이스 사용 [https://laravel.kr/docs/5.2/database], 쿼리빌더 [https://laravel.kr/docs/5.2/queries], 마이그레이션 [https://laravel.kr/docs/5.2/migrations] 의 내용을 숙지하시기 바랍니다.\n\n\n# 설정\nconfig/xe.php 의 database에 가상 연결 설정을 등록합니다.\n\n'database' => [\n        'default' => [\n            'slave' => ['default'],\n        ],\n        'document' => [\n            'slave' => ['default'],\n        ],\n        'user' => [\n            'slave' => ['default'],\n        ],\n    ],\n\n\nXE에서는 회원과 문서의 데이터베이스를 분리해서 사용할 수 있도록 가상 연결을 분리해서 사용하고 있습니다. app/Providers/ 의 UserServiceProvider.php, DocumentServiceProvider.php 에서 각각 user, document 커넥션을 사용하는 코드를 확인할 수 있습니다.\n\n# 가상 연결\n여러개의 논리적인 데이터베이스 연결을 사용하여 다중 커넥션 사용을 가능하도록 하고 서버에 트래픽이 증가할 경우 패키지별 데이터베이스 연결 설정을 변경하여 부하분산을 빠르게 처리할 수 있도록 합니다. 또한 하나의 논리적인 데이터베이스 연결에 여러개의 데이터베이스 연결 설정을 할 수 있도록 하고 Query 처리할 때 랜덤하게 커넥션을 사용하도록 구현하여 부하분산을 처리합니다.\n\n또한 물리적으로 다른 여러개의 커넥션에 대해서 트랜젝션을 사용할 수 있습니다. 여러개의 커넥션에서 각각 발생하는 트랜젝션을 관리하여 하나의 커넥션에서 처리되는 것과 같이 동작합니다.\n\n다이나믹 쿼리를 이용해서 ProxyManager 에 등록된 Proxy 들을 사용할 수 있습니다. 다이나믹 쿼리는 데이터베이스 CRUD 처리 시 발생하여 쿼리를 조작할 수 있도록 인터페이스를 제공합니다. ProxyInterface 의 인터페이스를 QueryBuilder 에서 각 메소드에서 필요한 인터페이스를 사용합니다.\n\n# Proxy\n데이터베이스 Proxy는 쿼리 실행 실행에 앞서 쿼리를 수정할 수 있도록 인터페이스를 지원합니다. DynamicQuery에서 ProxyManager를 사용하도록 해서 inster(), update(), delete(), get(), first(), find(), paginate(), simplePaginate() 이 사용될 때 쿼리를 수정합니다. DynamicField 는 Proxy 기능을 이용해서 데이터베이스에 쿼리할 때 설정에 따라 추가된 확장 필드의 처리를 위한 쿼리를 실행하도록 구현했습니다.\n\n# Proxy 사용\n$users = XeDB::dynamic('user')->get();\n\n\nProxy를 사용하기 위해서 table() 이 아닌 dynamic() 메소드를 사용합니다. dynamic()을 사용해 반환된 DynamicQuery 인스턴스는 Proxy를 사용하기 위한 상태가 됩니다.\n\n실제 데이터베이스 연결 설정은 기존의 Laravel 설정 방법과 동일합니다. config/database.php 에 데이터베이스 연결을 수정하거나 추가하면 됩니다.\n\n# 트랜잭션\nXeDB::beginTransaction();\n... query ...\nXeDB::commit(); // or XeDB::rollback();\n\n\nXE3 데이터베이스는 여러개의 연결에 대해서 트랜잭션을 처리합니다. 전체 커넥션 정보를 참고하고 있는 TransactionHandler 는 트랜잭션이 시작될 때 연결되어 있는 모든 가상연결에 트랙잭션을 시작하고 또한 새로 맺는 연결도 트랜잭션이 시작되도록 처리합니다.\n\n가상연결로 처리되는 하나 이상의 데이터베이스 연결에 대해서 트랜젝션 을 처리합니다. DB1, DB2 에 insert 처리 할 때 물리적으로 다른 두개의 데이터베이스에 트랜젝션이 처리될 수 있도록 지원합니다.",contentLowercase:"# 데이터베이스\n# 데이터베이스(database)\nxe가 자체적으로 부하분산을 처리할 수 있을까? 어떻게 하면 회원과 문서의 데이터베이스 사용을 분리시킬 수 있을까?\n\n이 고민에서 시작이었습니다. 이미 laravel은 훌륭한 데이터베이스 처리 방식을 제안하고 있습니다. 다만 우리는 앞서 얘기한 고민을 해결하기 위해 새로운 데이터베이스를 만들기 보다 우리가 하고자 하는 일을 해결할 수 있는 기능을 추가한 전혀 새롭지 않은(laravel 의 데이터베이스와 같은) 데이터베이스를 만들고 싶었습니다.\n\n기본적인 사용 방법은 laravel 과 같으며 단지 xedb 파사드를 사용하면 됩니다.\n\n> 기본적인 데이터베이스 사용 [https://laravel.kr/docs/5.2/database], 쿼리빌더 [https://laravel.kr/docs/5.2/queries], 마이그레이션 [https://laravel.kr/docs/5.2/migrations] 의 내용을 숙지하시기 바랍니다.\n\n\n# 설정\nconfig/xe.php 의 database에 가상 연결 설정을 등록합니다.\n\n'database' => [\n        'default' => [\n            'slave' => ['default'],\n        ],\n        'document' => [\n            'slave' => ['default'],\n        ],\n        'user' => [\n            'slave' => ['default'],\n        ],\n    ],\n\n\nxe에서는 회원과 문서의 데이터베이스를 분리해서 사용할 수 있도록 가상 연결을 분리해서 사용하고 있습니다. app/providers/ 의 userserviceprovider.php, documentserviceprovider.php 에서 각각 user, document 커넥션을 사용하는 코드를 확인할 수 있습니다.\n\n# 가상 연결\n여러개의 논리적인 데이터베이스 연결을 사용하여 다중 커넥션 사용을 가능하도록 하고 서버에 트래픽이 증가할 경우 패키지별 데이터베이스 연결 설정을 변경하여 부하분산을 빠르게 처리할 수 있도록 합니다. 또한 하나의 논리적인 데이터베이스 연결에 여러개의 데이터베이스 연결 설정을 할 수 있도록 하고 query 처리할 때 랜덤하게 커넥션을 사용하도록 구현하여 부하분산을 처리합니다.\n\n또한 물리적으로 다른 여러개의 커넥션에 대해서 트랜젝션을 사용할 수 있습니다. 여러개의 커넥션에서 각각 발생하는 트랜젝션을 관리하여 하나의 커넥션에서 처리되는 것과 같이 동작합니다.\n\n다이나믹 쿼리를 이용해서 proxymanager 에 등록된 proxy 들을 사용할 수 있습니다. 다이나믹 쿼리는 데이터베이스 crud 처리 시 발생하여 쿼리를 조작할 수 있도록 인터페이스를 제공합니다. proxyinterface 의 인터페이스를 querybuilder 에서 각 메소드에서 필요한 인터페이스를 사용합니다.\n\n# proxy\n데이터베이스 proxy는 쿼리 실행 실행에 앞서 쿼리를 수정할 수 있도록 인터페이스를 지원합니다. dynamicquery에서 proxymanager를 사용하도록 해서 inster(), update(), delete(), get(), first(), find(), paginate(), simplepaginate() 이 사용될 때 쿼리를 수정합니다. dynamicfield 는 proxy 기능을 이용해서 데이터베이스에 쿼리할 때 설정에 따라 추가된 확장 필드의 처리를 위한 쿼리를 실행하도록 구현했습니다.\n\n# proxy 사용\n$users = xedb::dynamic('user')->get();\n\n\nproxy를 사용하기 위해서 table() 이 아닌 dynamic() 메소드를 사용합니다. dynamic()을 사용해 반환된 dynamicquery 인스턴스는 proxy를 사용하기 위한 상태가 됩니다.\n\n실제 데이터베이스 연결 설정은 기존의 laravel 설정 방법과 동일합니다. config/database.php 에 데이터베이스 연결을 수정하거나 추가하면 됩니다.\n\n# 트랜잭션\nxedb::begintransaction();\n... query ...\nxedb::commit(); // or xedb::rollback();\n\n\nxe3 데이터베이스는 여러개의 연결에 대해서 트랜잭션을 처리합니다. 전체 커넥션 정보를 참고하고 있는 transactionhandler 는 트랜잭션이 시작될 때 연결되어 있는 모든 가상연결에 트랙잭션을 시작하고 또한 새로 맺는 연결도 트랜잭션이 시작되도록 처리합니다.\n\n가상연결로 처리되는 하나 이상의 데이터베이스 연결에 대해서 트랜젝션 을 처리합니다. db1, db2 에 insert 처리 할 때 물리적으로 다른 두개의 데이터베이스에 트랜젝션이 처리될 수 있도록 지원합니다.",charsets:{cjk:!0}},{title:"문서",frontmatter:{},regularPath:"/08.%20%EC%84%9C%EB%B9%84%EC%8A%A4/service-document.html",relativePath:"08. 서비스/service-document.md",key:"v-100debfe",path:"/08.%20%EC%84%9C%EB%B9%84%EC%8A%A4/service-document.html",headers:[{level:2,title:"문서\\(document\\)",slug:"문서-document",charIndex:7},{level:3,title:"기본 사용법",slug:"기본-사용법",charIndex:383},{level:3,title:"인스턴스",slug:"인스턴스",charIndex:505},{level:3,title:"Document 모델",slug:"document-모델",charIndex:240}],headersStr:"문서\\(document\\) 기본 사용법 인스턴스 Document 모델",content:"# 문서\n# 문서(document)\n사이트에서 생산되는 게시판, 블로그, 댓글등 다양한 형태의 컨텐츠를 저장할 저장소를 제공합니다. DocumentHandler 는 Document, Revision 모델을 이용해서 컨텐츠 변경이력을 관리할 수 있는 기능을 제공하고 저장소의 부하분산을 위한 Division(저장소 분할) 저장소를 제공합니다. 이러한 기능은 instanceId 에 따라 설정을 추가해서 관리할 수 있습니다.\n\n또한 Document 모델은 DynamicField 를 지원합니다.\n\nDocumentHandler, InstanceManager, ConfigHandler 는 Interception Proxy로 만들어 사용되므로 인터셉트 할 수 있습니다. (인터셉트하기)\n\n# 기본 사용법\nXeDocument파사드로 DocumentHandler 를 사용합니다. 문서 등록, 수정, 삭제는 DocumentHandler를 이용해서 처리하고 문서 조회는 Document 모델을 직접 사용합니다. 단, 인스턴스를 생성해 사용할 경우 Document 모델에 대한 설정을 모델에 포함시키기 위해 XeDocument::getModel($instnaceId) 를 사용하기를 권장합니다.\n\n# 모든 문서 가져오기\n$doc = Document::all();\n\n\n# Primary Key를 통해서 하나의 레코드 가져오기\n$doc = Document::find($documentId);\nvar_dump($doc->content);\n\n\n# 인스턴스 생성을 통해 등록된 문서 가져오기\n메뉴를 통해 인스턴스가 생성되었거나 또는 어떤 방식으로든 InstanceManager 를 이용해 인스턴스를 만들어 설정을 사용하는 경우에는 모델을 직접 사용하지 말고 DocumentHandler를 통해 획득한 모델을 사용하도록 해야합니다.\n\n$model = XeDocument::getModel($instanceId);\n// 10개의 문서를 가져옵니다.\n$model->paginate(10);\n\n\n이렇게 획득한 모델은 설정에 대한 정보를 포함하고 있으며 revision, division 에 대한 처리 및 Database Proxy를 이용하는 기능인 DynamiField 에 대한 처리가 가능합니다.\n\n# 문서 등록\n$params['instanceId'] = $instanceId;\n$params['title'] = '제목';\n$params['content'] = '내용';\n$inputs['userId'] = Auth::user()->getId();\n$inputs['writer'] = Auth::user()->getDisplayName();\n\nXeDocument::add($params);\n\n\n문서 등록은 Document 모델을 직접 사용하지 않고 DocumentHandler 를 통해서 처리합니다. 이는 문서 저장할 때 인터셉트할 수 있는 포인트를 제공하며 Document 가 입력값 검사 및 revision 을 처리합니다.\n\n# 수정하기\nDocument를 통해 문서를 직접가져오는 경우는 아래와 같이 XeDocument::setModelConfig()를 이용해서 모델에 설정을 삽입해야 DocumentHandler 에서 설정에 따른 처리를 이상없이 수행할 수 있습니다.\n\n$doc = Document::find($documentId);\n$doc->title = '제목 수정';\n\n// Document 모델($doc)에 설정 삽입\nXeDocument::setModelConfig($doc, $doc->instanceId);\nXeDocument::put($doc);\n\n\n일반적인 상태에서 문서를 찾을 때 라이프 사이클 상에서 instanceId 를 확보할 수 있다고 가정한다면 아래 형식의 코드를 사용할 수 있습니다.\n\n$doc = XeDocument::getModel($instanceId)->find($documentId);\n$doc->title = '제목 수정';\n\nXeDocument::put($doc);\n\n\n# 삭제하기\n$doc = Document::find($documentId);\n\n// Document 모델($doc)에 설정 삽입\nXeDocument::setModelConfig($doc, $doc->instanceId);\nXeDocument::remove($doc);\n\n\n// '937c2ec7' 은 인스턴스 아이디\n$doc = XeDocument::getModel($instanceId)->find($documentId);\nXeDocument::remove($doc);\n\n\n# 인스턴스\n관리자 > 사이트 메뉴에서 게시판을 만들 때 게시판 플러그인은 Document 서비스 를 사용하기 위해 Document 인스턴스를 만듭니다. Document 를 사용하기 위한 설정 및 그에 필요한 주변 요소를 생성해서 실제 사용가능한 형태로 만드는 것입니다.\n\n# 인스턴스 생성\n$params['revision'] = false;\n$params['division'] = true;\nXeDocument::createInstance($instanceId, $params);\n\n\nDocument 에 설정 요소를 $params로 전달합니다.\n\n# 인스턴스 제거\nXeDocument::destroyInstance($instanceId);\n\n\n생성된 인스턴스를 제거하며 인스턴스 아이디로 저장된 문서를 삭제합니다. 이것은 게시판 삭제와 같은 처리를 할 때 사용됩니다.\n\n# Document 모델\n데이터를 저장할 때 사용하는 이것은 DynamicQuery 를 처리하기 위해 Config를 등록하는 기능과 문서를 처리할 때 유용한 다양한 메소드를 지원합니다.\n\n# 테이블 부하분산\nDocument::setConfig() 하는 과정에서 테이블 부하분산 처리를 위해 실제 사용할 테이블 이름을 변견할 수 있도록 지원합니다. 이 기능은 DocumentHandler::setModelConfig() 할 때 처리됩니다.\n\n# 다양한 상태값\n상태를 표시하기 위한 다양한 컬럼을 갖고 있습니다.\n\n * status : 문서의 상태를 저장합니다. (휴지통, 임시저장, 비공개, 공개, 공지)\n * approved : 승인에 대한 설정을 저장합니다. (거절됨, 기다림, 허용됨)\n * published : 발행에 대한 설정을 저장합니다. (거절됨, 기다림, 예약발행, 발행됨)\n * display : 보여지는 상태에 대한 설정을 저장합니다. (숨김, 비밀, 보여짐)\n\n이 상태값들을 복합적으로 사용하여 플러그인 자체적으로 다양한 방식의 상태를 표현할 수 있습니다. 그 중에 일반적으로 사용되는 보여짐, 숨김, 발행 등 다양한 형태의 상태값들을 제안하기 위한 메소드들이 추가되어 있습니다.\n\n각 설정은 숫자로 정의되어 있으며 between 쿼리를 이용해서 더 다양한 설정을 사용할 수 있기를 바라고 있습니다. 서드파티 플러그인에서 Document 모델을 확장하는 ExtendDocument 모델을 만들고 상태를 추가하여 더 다양한 형태의 문서 상태 처리 방법이 제공될 수 있기를 바랍니다.\n\n# format\n문서를 출력할 때 어떤 형태의 포멧으로 처리해야할 지 알려주기 위해서 글 저장할 때 format 을 등록하도록 하고 있습니다. 이것은 스마트 에디터를 사용하거나 혹은 마크다운으로 작성된 문서를 구분하고 저장된 내용을 출력할 때 어떤 방식으로 처리해야할 지 결정할 때 유용하게 사용될 것입니다. 현재의 포멧은 HTML 형식만 정의하고 있습니다.\n\n# reply\n// 상위 글\n$doc = XeDocument::getModel($instanceId)->find($documentId);\n\n// parentId 등록\n$params['parentId'] = $doc->id;\n$params['instanceId'] = '937c2ec7';\n$params['title'] = '제목';\n$params['content'] = '내용';\n$inputs['userId'] = Auth::user()->getId();\n$inputs['writer'] = Auth::user()->getDisplayName();\n\nXeDocument::add($params);\n\n\n답글 처리를 위해 Document::setReply()를 제공합니다. 어떤 문서의 하위로 글을 작성하려고 한다면 해당 모델에 parentId를 놓고 저장하면 됩니다. Document::setReply()의 실행은 /app/Providers/DocumentServiceProvider.php 의 boot()에서 Illuminate\\Database\\Eloquent\\Model 의 creating 이벤트 리스너를 등록해서 자동으로 처리됩니다.\n\n# Division 지원\n테이블 분리 기능을 처리하기 위해 Document 모델은 문서 등록, 수정, 삭제할 때 설정 값을 확인하고 추가적인 처리를 진행합니다. Illuminate\\Database\\Eloquent\\Model 에서 제공하는 performInsert(), performUpdate(), performDeleteOnModel() 기능을 이용해 데이터베이스에 처리될 때 추가적인 코드를 처리합니다.\n\n# 관계\nDocument 모델은 User(회원)에 대한 관계만 제공합니다. 더 많은 릴레이션은 제공하지 않습니다. 더 많은 모델의 릴레이션을 사용하기 위해서는 게시판 플러그인의 Board 모델과 같이 Document 모델을 확장해서 사용하는것을 권장합니다.",contentLowercase:"# 문서\n# 문서(document)\n사이트에서 생산되는 게시판, 블로그, 댓글등 다양한 형태의 컨텐츠를 저장할 저장소를 제공합니다. documenthandler 는 document, revision 모델을 이용해서 컨텐츠 변경이력을 관리할 수 있는 기능을 제공하고 저장소의 부하분산을 위한 division(저장소 분할) 저장소를 제공합니다. 이러한 기능은 instanceid 에 따라 설정을 추가해서 관리할 수 있습니다.\n\n또한 document 모델은 dynamicfield 를 지원합니다.\n\ndocumenthandler, instancemanager, confighandler 는 interception proxy로 만들어 사용되므로 인터셉트 할 수 있습니다. (인터셉트하기)\n\n# 기본 사용법\nxedocument파사드로 documenthandler 를 사용합니다. 문서 등록, 수정, 삭제는 documenthandler를 이용해서 처리하고 문서 조회는 document 모델을 직접 사용합니다. 단, 인스턴스를 생성해 사용할 경우 document 모델에 대한 설정을 모델에 포함시키기 위해 xedocument::getmodel($instnaceid) 를 사용하기를 권장합니다.\n\n# 모든 문서 가져오기\n$doc = document::all();\n\n\n# primary key를 통해서 하나의 레코드 가져오기\n$doc = document::find($documentid);\nvar_dump($doc->content);\n\n\n# 인스턴스 생성을 통해 등록된 문서 가져오기\n메뉴를 통해 인스턴스가 생성되었거나 또는 어떤 방식으로든 instancemanager 를 이용해 인스턴스를 만들어 설정을 사용하는 경우에는 모델을 직접 사용하지 말고 documenthandler를 통해 획득한 모델을 사용하도록 해야합니다.\n\n$model = xedocument::getmodel($instanceid);\n// 10개의 문서를 가져옵니다.\n$model->paginate(10);\n\n\n이렇게 획득한 모델은 설정에 대한 정보를 포함하고 있으며 revision, division 에 대한 처리 및 database proxy를 이용하는 기능인 dynamifield 에 대한 처리가 가능합니다.\n\n# 문서 등록\n$params['instanceid'] = $instanceid;\n$params['title'] = '제목';\n$params['content'] = '내용';\n$inputs['userid'] = auth::user()->getid();\n$inputs['writer'] = auth::user()->getdisplayname();\n\nxedocument::add($params);\n\n\n문서 등록은 document 모델을 직접 사용하지 않고 documenthandler 를 통해서 처리합니다. 이는 문서 저장할 때 인터셉트할 수 있는 포인트를 제공하며 document 가 입력값 검사 및 revision 을 처리합니다.\n\n# 수정하기\ndocument를 통해 문서를 직접가져오는 경우는 아래와 같이 xedocument::setmodelconfig()를 이용해서 모델에 설정을 삽입해야 documenthandler 에서 설정에 따른 처리를 이상없이 수행할 수 있습니다.\n\n$doc = document::find($documentid);\n$doc->title = '제목 수정';\n\n// document 모델($doc)에 설정 삽입\nxedocument::setmodelconfig($doc, $doc->instanceid);\nxedocument::put($doc);\n\n\n일반적인 상태에서 문서를 찾을 때 라이프 사이클 상에서 instanceid 를 확보할 수 있다고 가정한다면 아래 형식의 코드를 사용할 수 있습니다.\n\n$doc = xedocument::getmodel($instanceid)->find($documentid);\n$doc->title = '제목 수정';\n\nxedocument::put($doc);\n\n\n# 삭제하기\n$doc = document::find($documentid);\n\n// document 모델($doc)에 설정 삽입\nxedocument::setmodelconfig($doc, $doc->instanceid);\nxedocument::remove($doc);\n\n\n// '937c2ec7' 은 인스턴스 아이디\n$doc = xedocument::getmodel($instanceid)->find($documentid);\nxedocument::remove($doc);\n\n\n# 인스턴스\n관리자 > 사이트 메뉴에서 게시판을 만들 때 게시판 플러그인은 document 서비스 를 사용하기 위해 document 인스턴스를 만듭니다. document 를 사용하기 위한 설정 및 그에 필요한 주변 요소를 생성해서 실제 사용가능한 형태로 만드는 것입니다.\n\n# 인스턴스 생성\n$params['revision'] = false;\n$params['division'] = true;\nxedocument::createinstance($instanceid, $params);\n\n\ndocument 에 설정 요소를 $params로 전달합니다.\n\n# 인스턴스 제거\nxedocument::destroyinstance($instanceid);\n\n\n생성된 인스턴스를 제거하며 인스턴스 아이디로 저장된 문서를 삭제합니다. 이것은 게시판 삭제와 같은 처리를 할 때 사용됩니다.\n\n# document 모델\n데이터를 저장할 때 사용하는 이것은 dynamicquery 를 처리하기 위해 config를 등록하는 기능과 문서를 처리할 때 유용한 다양한 메소드를 지원합니다.\n\n# 테이블 부하분산\ndocument::setconfig() 하는 과정에서 테이블 부하분산 처리를 위해 실제 사용할 테이블 이름을 변견할 수 있도록 지원합니다. 이 기능은 documenthandler::setmodelconfig() 할 때 처리됩니다.\n\n# 다양한 상태값\n상태를 표시하기 위한 다양한 컬럼을 갖고 있습니다.\n\n * status : 문서의 상태를 저장합니다. (휴지통, 임시저장, 비공개, 공개, 공지)\n * approved : 승인에 대한 설정을 저장합니다. (거절됨, 기다림, 허용됨)\n * published : 발행에 대한 설정을 저장합니다. (거절됨, 기다림, 예약발행, 발행됨)\n * display : 보여지는 상태에 대한 설정을 저장합니다. (숨김, 비밀, 보여짐)\n\n이 상태값들을 복합적으로 사용하여 플러그인 자체적으로 다양한 방식의 상태를 표현할 수 있습니다. 그 중에 일반적으로 사용되는 보여짐, 숨김, 발행 등 다양한 형태의 상태값들을 제안하기 위한 메소드들이 추가되어 있습니다.\n\n각 설정은 숫자로 정의되어 있으며 between 쿼리를 이용해서 더 다양한 설정을 사용할 수 있기를 바라고 있습니다. 서드파티 플러그인에서 document 모델을 확장하는 extenddocument 모델을 만들고 상태를 추가하여 더 다양한 형태의 문서 상태 처리 방법이 제공될 수 있기를 바랍니다.\n\n# format\n문서를 출력할 때 어떤 형태의 포멧으로 처리해야할 지 알려주기 위해서 글 저장할 때 format 을 등록하도록 하고 있습니다. 이것은 스마트 에디터를 사용하거나 혹은 마크다운으로 작성된 문서를 구분하고 저장된 내용을 출력할 때 어떤 방식으로 처리해야할 지 결정할 때 유용하게 사용될 것입니다. 현재의 포멧은 html 형식만 정의하고 있습니다.\n\n# reply\n// 상위 글\n$doc = xedocument::getmodel($instanceid)->find($documentid);\n\n// parentid 등록\n$params['parentid'] = $doc->id;\n$params['instanceid'] = '937c2ec7';\n$params['title'] = '제목';\n$params['content'] = '내용';\n$inputs['userid'] = auth::user()->getid();\n$inputs['writer'] = auth::user()->getdisplayname();\n\nxedocument::add($params);\n\n\n답글 처리를 위해 document::setreply()를 제공합니다. 어떤 문서의 하위로 글을 작성하려고 한다면 해당 모델에 parentid를 놓고 저장하면 됩니다. document::setreply()의 실행은 /app/providers/documentserviceprovider.php 의 boot()에서 illuminate\\database\\eloquent\\model 의 creating 이벤트 리스너를 등록해서 자동으로 처리됩니다.\n\n# division 지원\n테이블 분리 기능을 처리하기 위해 document 모델은 문서 등록, 수정, 삭제할 때 설정 값을 확인하고 추가적인 처리를 진행합니다. illuminate\\database\\eloquent\\model 에서 제공하는 performinsert(), performupdate(), performdeleteonmodel() 기능을 이용해 데이터베이스에 처리될 때 추가적인 코드를 처리합니다.\n\n# 관계\ndocument 모델은 user(회원)에 대한 관계만 제공합니다. 더 많은 릴레이션은 제공하지 않습니다. 더 많은 모델의 릴레이션을 사용하기 위해서는 게시판 플러그인의 board 모델과 같이 document 모델을 확장해서 사용하는것을 권장합니다.",charsets:{cjk:!0}},{title:"오류처리",frontmatter:{},regularPath:"/08.%20%EC%84%9C%EB%B9%84%EC%8A%A4/service-error_catch.html",relativePath:"08. 서비스/service-error_catch.md",key:"v-769231f6",path:"/08.%20%EC%84%9C%EB%B9%84%EC%8A%A4/service-error_catch.html",headersStr:null,content:"# 오류처리",contentLowercase:"# 오류처리",charsets:{cjk:!0}},{title:"이벤트/인터셉션",frontmatter:{},regularPath:"/08.%20%EC%84%9C%EB%B9%84%EC%8A%A4/service-event_interception.html",relativePath:"08. 서비스/service-event_interception.md",key:"v-156051be",path:"/08.%20%EC%84%9C%EB%B9%84%EC%8A%A4/service-event_interception.html",headers:[{level:2,title:"이벤트/인터셉션\\(event/interception\\)",slug:"이벤트-인터셉션-event-interception",charIndex:13},{level:3,title:"이벤트",slug:"이벤트",charIndex:2},{level:3,title:"인터셉션",slug:"인터셉션",charIndex:6}],headersStr:"이벤트/인터셉션\\(event/interception\\) 이벤트 인터셉션",content:"# 이벤트/인터셉션\n# 이벤트/인터셉션(event/interception)\n플러그인 개발자가 플러그인에서 필요한 기능을 구현하기 위해서는 XE가 실행되는 여러 시점에 끼어들어 XE의 행동을 바꾸거나 추가적인 행동을 할 수 있어야 합니다.\n\n예를 들어, 사이트에 새로운 회원이 가입할 때, 가입한 회원에게 가입축하 메일을 보내는 기능을 플러그인으로 만들 수 있습니다. 이 기능을 구현하려면 XE가 회원가입을 처리할 때, 플러그인이 끼어들어 메일을 전송하는 코드를 실행할 수 있어야 합니다.\n\n이러한 '끼어들기'를 일반적으로 'hook' 또는 'event'라고 칭합니다. XE에서는 라라벨에서 기본적으로 제공하는 'event' 방식과 XE에서 새롭게 제공하는 'interception' 방식으로 '끼어들기'를 지원합니다.\n\n# 이벤트\n이벤트는 옵저버 패턴으로 구현됩니다. 특정 이벤트에 대하여 리스너를 등록해 놓으면, 이벤트가 발생했을 때, 등록한 리스너가 차례대로 실행됩니다.\n\n# 이벤트 리스너 등록\n이벤트가 발생했을 때 실행될 리스너는 Event 파사드나 Illuminate\\Contracts\\Events\\Dispatcher contract의 구현을 이용해 등록할 수 있습니다\n\n/**\n * Register any other events for your plugin\n *\n * @param  \\Illuminate\\Contracts\\Events\\Dispatcher  $events\n * @return void\n */\npublic function boot(DispatcherContract $events)\n{\n    $events->listen('event.name', function ($foo, $bar) {\n        //\n    });\n}\n\n// or\n\npublic function boot()\n{\n    \\Event::listen('event.name', function ($foo, $bar) {\n        //\n    });\n}\n\n\n이벤트 리스너를 클래스로 정의\n\n클로저 형식의 이벤트 리스너 대신 클래스 형식으로 이벤트 리스너를 정의할 수 있습니다.\n\nEvent::listen('auth.login', 'LoginHandler');\n\n\n기본적으로 이벤트가 발생했을 경우, 이벤트 리스너 클래스의 handle메소드가 호출됩니다.\n\nclass LoginHandler {\n\n    public function handle($data)\n    {\n        //\n    }\n}\n\n\nhandle 메소드 대신 다른 메소드를 사용할 수도 있습니다. 리스너 등록시 메소드명을 아래와 같이 기입하십시오.\n\nEvent::listen('auth.login', 'LoginHandler@onLogin');\n\n\n와일드카드 이벤트 리스너\n\n*를 와일드카드로 사용하여 리스너를 등록하면 동일한 리스너에서 여러 개의 이벤트에 대응 할 수 있습니다. 와일드카드 리스너는 전체 이벤트 데이터 배열을 하나의 인자로 받아들입니다:\n\n$events->listen('event.*', function (array $data) {\n    //\n});\n\n\n리스너 우선순위 지정\n\n리스너의 우선순위를 지정할 수 있습니다. 우선순위가 높은 리스너가 먼저 실행되며, 동일한 우선순위일 경우, 먼저 등록된 리스너가 먼저 실행됩니다.\n\nEvent::listen('auth.login', 'LoginHandler', 10);\n\nEvent::listen('auth.login', 'OtherHandler', 5);\n\n\n# 이벤트 발생시키기\n이벤트를 발생시키기려면 Event 파사드의 fire 메소드를 사용하십시오.\n\n$args = [...];\nEvent::fire('event.name', $args)\n\n\n이벤트 전달 중단하기\n\n경우에 따라서 이벤트가 다른 리스너에게 전달되는 것을 중단 하기를 원할 수도 있습니다. 이러한 경우에는 리스너가 false를 반환하면 됩니다.\n\nEvent::listen('auth.login', function($event)\n{\n    // Handle the event...\n\n    return false;\n});\n\n\n# XE 이벤트 목록\n아래 목록은 XE에서 제공하는 다양한 코어 레벨의 이벤트의 목록입니다. 플러그인의 boot 메소드에서 아래 이벤트가 발생할 때 실행할 리스너를 등록하여 쓸 수 있습니다.\n\nEventParameter(s)auth.attempt$credentials, $remember, $loginauth.login$user, $rememberauth.logout$usercache.missed$keycache.hit$key, $valuecache.write$key, $value, $minutescache.delete$keyconnection.{name}.beginTransaction$connectionconnection.{name}.committed$connectionconnection.{name}.rollingBack$connectionilluminate.query$query, $bindings, $time, $connectionNameilluminate.queue.after$connection, $job, $datailluminate.queue.failed$connection, $job, $datailluminate.queue.stoppingnullmailer.sending$messagerouter.matched$route, $requestcomposing:{view name}$viewcreating:{view name}$viewxe.editor.option.building$editorxe.editor.option.builded$editorxe.editor.render'$editorxe.editor.compile'$editor# 인터셉션\n이벤트 방식을 사용하는 경우, 특정 시점에 이벤트를 발생시키기 위해 이벤트를 fire하는 코드를 일일이 작성해주어야 합니다. 만약 게시판 플러그인에서 게시판에 글이 처음 등록될 때, 또는 수정, 삭제 될 때마다 다른 플러그인에서 '끼어들기'를 할 수 있도록 해주려면 게시글의 등록, 수정, 삭제에 대한 이벤트를 fire하는 코드를 3군데에 작성해주어야 합니다. 이벤트 방식 대신 인터셉션을 사용하면 이벤트를 fire하는 코드를 매번 작성하는 번거로움을 줄여줄 수 있습니다.\n\nXE3는 인터셉션을 구현하기 위하여 AOP를 사용하였습니다. AOP는 Aspect Oriented Programming의 약어입니다.\n\n# 어드바이저(리스너) 등록\n인터셉션 방식에서 어드바이저는 이벤트 방식의 리스너와 비슷합니다. 만약 사이트에 회원이 가입할 때, 메일 전송 코드가 실행되도록 하려면 intercept 함수를 사용하여 어드바이저를 등록할 수 있습니다.\n\n// 가입 축하 메일 보내기 등록\nintercept('XeUser@create', 'welcome_mail::send_mail', function($createUser, array $data) use ($mailer) {\n\n    // 회원가입 코드를 실행\n    $member = $createUser($data);\n\n    // 메일 전송\n    $mailer->sendWelcomeMail($member->email, $member->getDisplayName);\n\n    // 회원가입 처리 결과 반환\n    return $member;\n});\n\n\nintercept 함수의 원형은 아래와 같습니다.\n\nintercept($pointCut, $name, Closure $advice)\n\n\n첫번째 파라메터 $pointCut은 이벤트 서비스의 이벤트명과 동일한 역할을 합니다. 즉, '끼어들기'를 할 대상 메소드를 칭하며, 위의 예에서는 XeUser@create에 해당합니다. 이는 XeUser의 create 메소드를 뜻합니다.\n\nAOP에서 '끼어들기'를 하는 주체를 어드바이저(Advisor)라고 합니다. 이벤트 서비스의 리스너와 같은 개념입니다. 두번째 파라메터인 $name은 이 어드바이저의 '이름'입니다. 원하는 이름을 직접 지정하십시오. 단 이 이름은 다른 어드바이저의 이름과 중복되지 않아야 합니다. 중복을 회피하기 위하여 해당 플러그인의 아이디(디렉토리명)를 이름의 접두사로 사용하십시오. welcome_mail이 플러그인 아이디에 해당합니다. ::을 사용하여 접두사를 연결하십시오.\n\n세번째 파라메터 $advice '끼어들기'를 한 후 실행될 코드입니다. 클로저 형식으로 입력해야 합니다. 이 클로저 내부에서는 반드시 타겟 메소드(회원가입메소드)를 호출해 주어야 합니다. 타겟 메소드는 클로저의 첫번째 파라메터($createUser)를 사용하여 호출할 수 있습니다. 타겟 메소드를 호출하기 전이나 후에 원하는 코드를 추가하여 실행시킬 수 있습니다. 위의 예에서는 회원가입 처리를 한 후에 해당 회원에게 메일을 전송하는 코드가 추가되어 있습니다.\n\n이 클로저에 대해 자세히 설명하면, 이 클로저의 첫번째 파라메터는 타겟 메소드입니다. 위의 예에서 $createUser가 이에 해당합니다. 클로저 내부에서 항상 이 타겟 메소드를 호출해주어야 합니다. 또, 클로저는 타겟 메소드의 리턴값을 다시 리턴해야 합니다. 물론 필요에 따라 리턴값을 변경해도 됩니다. 두번째 파라메터부터는 대상 메소드가 호출될 때 받은 파라메터를 그대로 전달받습니다. 위의 예에서는 $data에 해당하며, 가입할 회원의 정보가 담겨있습니다. 타겟 메소드에 따라 파라메터의 수와 내용이 달라집니다.\n\nfunction($createUser, array $data) {\n\n  // 항상 타겟 메소드(첫번째 파라메터)를 호출해주어야 한다.\n  $member = $createMember($data);\n\n  // 항상 타겟 메소드의 반환값을 다시 반환해야 한다.\n  return $member;\n}\n\n\n# 어드바이저 간의 우선순위 지정\n다수의 어드바이저가 등록돼 있다면, 어드바이저 간의 실행순서가 중요할 수 있습니다. intercept 함수를 호출시 다른 어드바이저와의 우선순위를 지정할 수 있습니다.\n\n// email_checker::check가 실행된 후 실행.\nintercept('XeUser@create', ['welcome_mail::send_mail' => 'foo@bar'], $closure);\n\n\n우선순위는 두번째 파라미터에 배열형태로 지정할 수 있습니다. 위의 intercept 함수는 배열의 키 이름인 welcome_mail::send_mail 어드바이저를 등록하고 있습니다. 동시에 배열의 값(value)을 이용해여 선행되어야 하는 어드바이저 foo@bar를 지정하고 있습니다.\n\n위 코드에서 우선순위 관계 더욱더 명시적으로 작성할 수 있습니다. 중첩된 배열의 키에 'before'를 사용하십시오.\n\n// 명시적으로 before 사용\nintercept(\n  'XeUser@create', \n  ['welcome_mail::send_mail' => ['before' => 'foo@bar'], \n  $closure\n);\n\n// 다수의 어드바이저와 우선순위 지정\nintercept(\n  'XeUser@create', \n  ['welcome_mail::send_mail' => ['before' => ['foo@bar', 'foo@baz']], \n  $closure\n);\n\n\n반대로 after를 사용하면, 현재 어드바이저보다 나중에 실행되어야 할 어드바이저를 등록할 수도 있습니다.\n\n// after 사용\nintercept(\n  'XeUser@create', \n  ['welcome_mail::send_mail' => ['after' => ['foo@bar']], \n  $closure\n);\n\n\n인터셉션 서비스는 intercept 함수를 통해 등록받은 어드바이저들의 우선순위를 파악한 후, 순서대로 호출해 줍니다. 어드바이저들과 타겟 메소드는 데코레이션 패턴으로 실행됩니다. 이는 미들웨어 [http://xpressengine.github.io/laravel-korean-docs/docs/5.0/middleware/]와 거의 동일한 방식입니다.\n\n# 프록시 생성\n위의 회원가입 예제에서 보면, XeUser@create를 포인트컷으로 지정하고 있습니다. 위 예제의 코드는 XeUser 파사드(\\Xpressengine\\User\\UserHandler)의 create 메소드가 실행될 때, 자동으로 호출됩니다.\n\n이렇게 어떤 클래스의 메소드(public 메소드만 해당)가 실행될 때, 자동으로 등록된 어드바이저들이 호출되도록 하려면, 그 클래스 프록시 클래스를 생성하고, 프록시 클래스를 대신 사용해야 합니다.\n\n프록시 클래스는 XeInterception 파사드의 proxy 메소드를 사용하여 생성할 수 있습니다.\n\n// 프록시 클래스 생성\n$proxyClass = XeInterception::proxy('\\Xpressengine\\User\\UserHandler', 'XeUser');\n\n// 원본 클래스 대신 프록시 클래스 사용\n$userHandler = new $proxyClass();\n\n\n위 코드에서는 원본 클래스인 \\Xpressengine\\User\\UserHandler 클래스의 프록시 클래스를 생성합니다. 그리고 원본 클래스 대신 프록시 클래스의 인스턴스를 생성하여 사용합니다. 마지막 파라미터에는 원본 클래스의 별칭(alias)를 지정할 수 있습니다. UserHandler 클래스는 XeUser 파사드를 통해 많이 사용됩니다. 위의 경우 파사드명을 별칭으로 등록했습니다. intercept 함수를 사용할 때, 원본클래스명 뿐만 아니라 별칭을 사용할 수도 있습니다.\n\n아래의 두 코드 모두 사용할 수 있습니다.\n\n// 별칭을 사용\nintercept('XeUser@create', ...);\n\n// 원본클래스명을 그대로 사용\nintercept('Xpressengine\\User\\UserHandler@create', ...);",contentLowercase:"# 이벤트/인터셉션\n# 이벤트/인터셉션(event/interception)\n플러그인 개발자가 플러그인에서 필요한 기능을 구현하기 위해서는 xe가 실행되는 여러 시점에 끼어들어 xe의 행동을 바꾸거나 추가적인 행동을 할 수 있어야 합니다.\n\n예를 들어, 사이트에 새로운 회원이 가입할 때, 가입한 회원에게 가입축하 메일을 보내는 기능을 플러그인으로 만들 수 있습니다. 이 기능을 구현하려면 xe가 회원가입을 처리할 때, 플러그인이 끼어들어 메일을 전송하는 코드를 실행할 수 있어야 합니다.\n\n이러한 '끼어들기'를 일반적으로 'hook' 또는 'event'라고 칭합니다. xe에서는 라라벨에서 기본적으로 제공하는 'event' 방식과 xe에서 새롭게 제공하는 'interception' 방식으로 '끼어들기'를 지원합니다.\n\n# 이벤트\n이벤트는 옵저버 패턴으로 구현됩니다. 특정 이벤트에 대하여 리스너를 등록해 놓으면, 이벤트가 발생했을 때, 등록한 리스너가 차례대로 실행됩니다.\n\n# 이벤트 리스너 등록\n이벤트가 발생했을 때 실행될 리스너는 event 파사드나 illuminate\\contracts\\events\\dispatcher contract의 구현을 이용해 등록할 수 있습니다\n\n/**\n * register any other events for your plugin\n *\n * @param  \\illuminate\\contracts\\events\\dispatcher  $events\n * @return void\n */\npublic function boot(dispatchercontract $events)\n{\n    $events->listen('event.name', function ($foo, $bar) {\n        //\n    });\n}\n\n// or\n\npublic function boot()\n{\n    \\event::listen('event.name', function ($foo, $bar) {\n        //\n    });\n}\n\n\n이벤트 리스너를 클래스로 정의\n\n클로저 형식의 이벤트 리스너 대신 클래스 형식으로 이벤트 리스너를 정의할 수 있습니다.\n\nevent::listen('auth.login', 'loginhandler');\n\n\n기본적으로 이벤트가 발생했을 경우, 이벤트 리스너 클래스의 handle메소드가 호출됩니다.\n\nclass loginhandler {\n\n    public function handle($data)\n    {\n        //\n    }\n}\n\n\nhandle 메소드 대신 다른 메소드를 사용할 수도 있습니다. 리스너 등록시 메소드명을 아래와 같이 기입하십시오.\n\nevent::listen('auth.login', 'loginhandler@onlogin');\n\n\n와일드카드 이벤트 리스너\n\n*를 와일드카드로 사용하여 리스너를 등록하면 동일한 리스너에서 여러 개의 이벤트에 대응 할 수 있습니다. 와일드카드 리스너는 전체 이벤트 데이터 배열을 하나의 인자로 받아들입니다:\n\n$events->listen('event.*', function (array $data) {\n    //\n});\n\n\n리스너 우선순위 지정\n\n리스너의 우선순위를 지정할 수 있습니다. 우선순위가 높은 리스너가 먼저 실행되며, 동일한 우선순위일 경우, 먼저 등록된 리스너가 먼저 실행됩니다.\n\nevent::listen('auth.login', 'loginhandler', 10);\n\nevent::listen('auth.login', 'otherhandler', 5);\n\n\n# 이벤트 발생시키기\n이벤트를 발생시키기려면 event 파사드의 fire 메소드를 사용하십시오.\n\n$args = [...];\nevent::fire('event.name', $args)\n\n\n이벤트 전달 중단하기\n\n경우에 따라서 이벤트가 다른 리스너에게 전달되는 것을 중단 하기를 원할 수도 있습니다. 이러한 경우에는 리스너가 false를 반환하면 됩니다.\n\nevent::listen('auth.login', function($event)\n{\n    // handle the event...\n\n    return false;\n});\n\n\n# xe 이벤트 목록\n아래 목록은 xe에서 제공하는 다양한 코어 레벨의 이벤트의 목록입니다. 플러그인의 boot 메소드에서 아래 이벤트가 발생할 때 실행할 리스너를 등록하여 쓸 수 있습니다.\n\neventparameter(s)auth.attempt$credentials, $remember, $loginauth.login$user, $rememberauth.logout$usercache.missed$keycache.hit$key, $valuecache.write$key, $value, $minutescache.delete$keyconnection.{name}.begintransaction$connectionconnection.{name}.committed$connectionconnection.{name}.rollingback$connectionilluminate.query$query, $bindings, $time, $connectionnameilluminate.queue.after$connection, $job, $datailluminate.queue.failed$connection, $job, $datailluminate.queue.stoppingnullmailer.sending$messagerouter.matched$route, $requestcomposing:{view name}$viewcreating:{view name}$viewxe.editor.option.building$editorxe.editor.option.builded$editorxe.editor.render'$editorxe.editor.compile'$editor# 인터셉션\n이벤트 방식을 사용하는 경우, 특정 시점에 이벤트를 발생시키기 위해 이벤트를 fire하는 코드를 일일이 작성해주어야 합니다. 만약 게시판 플러그인에서 게시판에 글이 처음 등록될 때, 또는 수정, 삭제 될 때마다 다른 플러그인에서 '끼어들기'를 할 수 있도록 해주려면 게시글의 등록, 수정, 삭제에 대한 이벤트를 fire하는 코드를 3군데에 작성해주어야 합니다. 이벤트 방식 대신 인터셉션을 사용하면 이벤트를 fire하는 코드를 매번 작성하는 번거로움을 줄여줄 수 있습니다.\n\nxe3는 인터셉션을 구현하기 위하여 aop를 사용하였습니다. aop는 aspect oriented programming의 약어입니다.\n\n# 어드바이저(리스너) 등록\n인터셉션 방식에서 어드바이저는 이벤트 방식의 리스너와 비슷합니다. 만약 사이트에 회원이 가입할 때, 메일 전송 코드가 실행되도록 하려면 intercept 함수를 사용하여 어드바이저를 등록할 수 있습니다.\n\n// 가입 축하 메일 보내기 등록\nintercept('xeuser@create', 'welcome_mail::send_mail', function($createuser, array $data) use ($mailer) {\n\n    // 회원가입 코드를 실행\n    $member = $createuser($data);\n\n    // 메일 전송\n    $mailer->sendwelcomemail($member->email, $member->getdisplayname);\n\n    // 회원가입 처리 결과 반환\n    return $member;\n});\n\n\nintercept 함수의 원형은 아래와 같습니다.\n\nintercept($pointcut, $name, closure $advice)\n\n\n첫번째 파라메터 $pointcut은 이벤트 서비스의 이벤트명과 동일한 역할을 합니다. 즉, '끼어들기'를 할 대상 메소드를 칭하며, 위의 예에서는 xeuser@create에 해당합니다. 이는 xeuser의 create 메소드를 뜻합니다.\n\naop에서 '끼어들기'를 하는 주체를 어드바이저(advisor)라고 합니다. 이벤트 서비스의 리스너와 같은 개념입니다. 두번째 파라메터인 $name은 이 어드바이저의 '이름'입니다. 원하는 이름을 직접 지정하십시오. 단 이 이름은 다른 어드바이저의 이름과 중복되지 않아야 합니다. 중복을 회피하기 위하여 해당 플러그인의 아이디(디렉토리명)를 이름의 접두사로 사용하십시오. welcome_mail이 플러그인 아이디에 해당합니다. ::을 사용하여 접두사를 연결하십시오.\n\n세번째 파라메터 $advice '끼어들기'를 한 후 실행될 코드입니다. 클로저 형식으로 입력해야 합니다. 이 클로저 내부에서는 반드시 타겟 메소드(회원가입메소드)를 호출해 주어야 합니다. 타겟 메소드는 클로저의 첫번째 파라메터($createuser)를 사용하여 호출할 수 있습니다. 타겟 메소드를 호출하기 전이나 후에 원하는 코드를 추가하여 실행시킬 수 있습니다. 위의 예에서는 회원가입 처리를 한 후에 해당 회원에게 메일을 전송하는 코드가 추가되어 있습니다.\n\n이 클로저에 대해 자세히 설명하면, 이 클로저의 첫번째 파라메터는 타겟 메소드입니다. 위의 예에서 $createuser가 이에 해당합니다. 클로저 내부에서 항상 이 타겟 메소드를 호출해주어야 합니다. 또, 클로저는 타겟 메소드의 리턴값을 다시 리턴해야 합니다. 물론 필요에 따라 리턴값을 변경해도 됩니다. 두번째 파라메터부터는 대상 메소드가 호출될 때 받은 파라메터를 그대로 전달받습니다. 위의 예에서는 $data에 해당하며, 가입할 회원의 정보가 담겨있습니다. 타겟 메소드에 따라 파라메터의 수와 내용이 달라집니다.\n\nfunction($createuser, array $data) {\n\n  // 항상 타겟 메소드(첫번째 파라메터)를 호출해주어야 한다.\n  $member = $createmember($data);\n\n  // 항상 타겟 메소드의 반환값을 다시 반환해야 한다.\n  return $member;\n}\n\n\n# 어드바이저 간의 우선순위 지정\n다수의 어드바이저가 등록돼 있다면, 어드바이저 간의 실행순서가 중요할 수 있습니다. intercept 함수를 호출시 다른 어드바이저와의 우선순위를 지정할 수 있습니다.\n\n// email_checker::check가 실행된 후 실행.\nintercept('xeuser@create', ['welcome_mail::send_mail' => 'foo@bar'], $closure);\n\n\n우선순위는 두번째 파라미터에 배열형태로 지정할 수 있습니다. 위의 intercept 함수는 배열의 키 이름인 welcome_mail::send_mail 어드바이저를 등록하고 있습니다. 동시에 배열의 값(value)을 이용해여 선행되어야 하는 어드바이저 foo@bar를 지정하고 있습니다.\n\n위 코드에서 우선순위 관계 더욱더 명시적으로 작성할 수 있습니다. 중첩된 배열의 키에 'before'를 사용하십시오.\n\n// 명시적으로 before 사용\nintercept(\n  'xeuser@create', \n  ['welcome_mail::send_mail' => ['before' => 'foo@bar'], \n  $closure\n);\n\n// 다수의 어드바이저와 우선순위 지정\nintercept(\n  'xeuser@create', \n  ['welcome_mail::send_mail' => ['before' => ['foo@bar', 'foo@baz']], \n  $closure\n);\n\n\n반대로 after를 사용하면, 현재 어드바이저보다 나중에 실행되어야 할 어드바이저를 등록할 수도 있습니다.\n\n// after 사용\nintercept(\n  'xeuser@create', \n  ['welcome_mail::send_mail' => ['after' => ['foo@bar']], \n  $closure\n);\n\n\n인터셉션 서비스는 intercept 함수를 통해 등록받은 어드바이저들의 우선순위를 파악한 후, 순서대로 호출해 줍니다. 어드바이저들과 타겟 메소드는 데코레이션 패턴으로 실행됩니다. 이는 미들웨어 [http://xpressengine.github.io/laravel-korean-docs/docs/5.0/middleware/]와 거의 동일한 방식입니다.\n\n# 프록시 생성\n위의 회원가입 예제에서 보면, xeuser@create를 포인트컷으로 지정하고 있습니다. 위 예제의 코드는 xeuser 파사드(\\xpressengine\\user\\userhandler)의 create 메소드가 실행될 때, 자동으로 호출됩니다.\n\n이렇게 어떤 클래스의 메소드(public 메소드만 해당)가 실행될 때, 자동으로 등록된 어드바이저들이 호출되도록 하려면, 그 클래스 프록시 클래스를 생성하고, 프록시 클래스를 대신 사용해야 합니다.\n\n프록시 클래스는 xeinterception 파사드의 proxy 메소드를 사용하여 생성할 수 있습니다.\n\n// 프록시 클래스 생성\n$proxyclass = xeinterception::proxy('\\xpressengine\\user\\userhandler', 'xeuser');\n\n// 원본 클래스 대신 프록시 클래스 사용\n$userhandler = new $proxyclass();\n\n\n위 코드에서는 원본 클래스인 \\xpressengine\\user\\userhandler 클래스의 프록시 클래스를 생성합니다. 그리고 원본 클래스 대신 프록시 클래스의 인스턴스를 생성하여 사용합니다. 마지막 파라미터에는 원본 클래스의 별칭(alias)를 지정할 수 있습니다. userhandler 클래스는 xeuser 파사드를 통해 많이 사용됩니다. 위의 경우 파사드명을 별칭으로 등록했습니다. intercept 함수를 사용할 때, 원본클래스명 뿐만 아니라 별칭을 사용할 수도 있습니다.\n\n아래의 두 코드 모두 사용할 수 있습니다.\n\n// 별칭을 사용\nintercept('xeuser@create', ...);\n\n// 원본클래스명을 그대로 사용\nintercept('xpressengine\\user\\userhandler@create', ...);",charsets:{cjk:!0}},{title:"파일/스토리지",frontmatter:{},regularPath:"/08.%20%EC%84%9C%EB%B9%84%EC%8A%A4/service-file_storage.html",relativePath:"08. 서비스/service-file_storage.md",key:"v-41185547",path:"/08.%20%EC%84%9C%EB%B9%84%EC%8A%A4/service-file_storage.html",headers:[{level:2,title:"파일/스토리지\\(file,storage\\)",slug:"파일-스토리지-file-storage",charIndex:12},{level:3,title:"설정",slug:"설정",charIndex:155},{level:3,title:"사용",slug:"사용",charIndex:67},{level:3,title:"관계와 재사용",slug:"관계와-재사용",charIndex:1667}],headersStr:"파일/스토리지\\(file,storage\\) 설정 사용 관계와 재사용",content:"# 파일/스토리지\n# 파일/스토리지(file,storage)\nXE의 스토리지는 라라벨이 제공하는 파일 시스템을 기반으로 사용자의 파일을 관리할 수 있는 기능을 제공합니다. 또한 분산저장기능을 갖추어 필요에 따라 여러개의 파일 저장소에 파일들을 나누어 저장할 수 있습니다.\n\n# 설정\n스토리지와 관련된 설정은 config/filesystems.php에 있습니다. 기본으로는 local드라이버가 지정되어 소스코드가 존재하는 위치의 storage 디렉토리에 파일이 저장됩니다.\n\n클라우드 스토리지를 파일 저장소로 사용하고자 하는 경우에는 별도의 패키지가 설치되어야 합니다. S3나 Rackspace를 사용하는 경우 아래의 패키지가 컴포저를 통해 설치되어야 합니다.\n\n * Amazon S3: league/flysystem-aws-s3-v3 ~1.0\n * Racspace: league/flysystem-rackspace ~1.0\n\n# 분산저장\n분산저장 기능을 사용하기 위해서는 설정을 변경해야 합니다. 설정파일의 division 항목에 enable 값을 true로 설정하고, 파일을 저장할 파일 저장소명을 작성해야 합니다.\n\n'division' => [\n  'enable' => true,\n  'disk' => ['local', 's3', 'rackspace']\n]\n\n\n설정이 변경되면 스토리지 패키지는 파일이 업로드 될때마다 자동으로 각 파일 저장소로 분산하여 저장하게 됩니다.\n\n> 분산저장의 대상이 되는 파일저장소는 분산저장을 설정하기 이전에 사용가능한 값으로 설정되어야 합니다.\n\n\n# 사용\n# 업로드\n파일을 서버로 업로드하고자 할 때는 간단하게 upload 메서드만 호출하면 됩니다.\n\nuse XeStorage;\nuse Xpressengine\\Http\\Request;\nuse App\\Http\\Controllers\\Controller;\n\nclass UserController extends Controller\n{\n  public function uploadFile(Request $request)\n  {\n    XeStorage::upload($request->file('attached'), 'path/to/dir');\n  }\n}\n\n\n저장하는 파일이 서버에서 특별한 이름을 가지게 하고 싶은 경우 이름을 지정할 수 있습니다.\n\nXeStorage::upload($request->file('attached'), 'path/to/dir', 'custom_file_name');\n\n\n그리고 만약 특정 파일저장소에 파일을 저장하고자 한다면 해당 파일저장소를 지정할 수 있습니다.\n\nXeStorage::upload($request->file('attached'), 'path/to/dir', null, 's3');\n\n\n단순 업로드를 통한 저장이 아닌 편집등을 거쳐 생성된 결과물을 파일로 저장하려는 경우 create 메서드를 사용하면 됩니다.\n\n$content = file_get_content('path/to/file');\n$content = /* 편집처리 (이미지 섬네일 생성등과 같은) */;\nXeStorage::create($content, 'path/to/dir', 'somefile');\n\n\n# 다운로드\n파일 객체를 download 메서드를 통해 전달하세요.\n\n$file = XeStorage::find($id);\nXeStorage::download($file);\n\n\n# 관계와 재사용\nXE 스토리지는 파일과 파일을 이용하는 대상과의 관계를 필요로 합니다. 그래서 업로드 후 관계를 맺어주는 작업을 수행해야 합니다.\n\n$file = XeStorage::upload($request->file('attached'), 'path/to/dir');\nXeStorage::bind($targetId, $file);\n\n\n그리고 이미 업로드되어진 파일은 다른 대상과도 관계를 맺을 수 있습니다.\n\n$file = XeStorage::find($id);\nXeStorage::bind($otherTargetId, $file);\n\n\n만약 파일을 사용하던 대상이 더 이상 해당 파일을 사용하지 않게 된 경우 관계를 끊을 수 있습니다.\n\n$file = XeStorage::find($id);\nXeStorage::unBind($targetId, $file);\n\n\n이때 어떤 대상과도 연결되어지지 않게 될 경우 해당 파일을 삭제할 수 있습니다.\n\nXeStorage::unBind($targetId, $file, true);\n\n\n여러개의 파일을 동시에 처리하는 경우 sync 메서드를 사용하면 파일을 사용하는 대상과 파일들의 관계를 간편하게 정의할 수 있습니다.\n\n$fileIds = [];\nforeach ($uploadedFiles as $uploadedFile) {\n  $file = XeStorage::upload($request->file('attached'), 'path/to/dir');\n  $fileIds[] = $file->id;\n}\nXeStorage::sync($targetId, $fileIds);\n\n\n위와 같이 관계가 형성되면 대상의 아이디로 대상에 연결된 파일들을 조회하거나 관계를 끊을 수 있습니다.\n\n// 대상의 파일 목록 조회\n$files = XeStorage::fetchByFileable($targetId);\n\n// 대상의 삭제등의 처리시 파일들의 연결해제 처리\nXeStorage::unBindAll($targetId);",contentLowercase:"# 파일/스토리지\n# 파일/스토리지(file,storage)\nxe의 스토리지는 라라벨이 제공하는 파일 시스템을 기반으로 사용자의 파일을 관리할 수 있는 기능을 제공합니다. 또한 분산저장기능을 갖추어 필요에 따라 여러개의 파일 저장소에 파일들을 나누어 저장할 수 있습니다.\n\n# 설정\n스토리지와 관련된 설정은 config/filesystems.php에 있습니다. 기본으로는 local드라이버가 지정되어 소스코드가 존재하는 위치의 storage 디렉토리에 파일이 저장됩니다.\n\n클라우드 스토리지를 파일 저장소로 사용하고자 하는 경우에는 별도의 패키지가 설치되어야 합니다. s3나 rackspace를 사용하는 경우 아래의 패키지가 컴포저를 통해 설치되어야 합니다.\n\n * amazon s3: league/flysystem-aws-s3-v3 ~1.0\n * racspace: league/flysystem-rackspace ~1.0\n\n# 분산저장\n분산저장 기능을 사용하기 위해서는 설정을 변경해야 합니다. 설정파일의 division 항목에 enable 값을 true로 설정하고, 파일을 저장할 파일 저장소명을 작성해야 합니다.\n\n'division' => [\n  'enable' => true,\n  'disk' => ['local', 's3', 'rackspace']\n]\n\n\n설정이 변경되면 스토리지 패키지는 파일이 업로드 될때마다 자동으로 각 파일 저장소로 분산하여 저장하게 됩니다.\n\n> 분산저장의 대상이 되는 파일저장소는 분산저장을 설정하기 이전에 사용가능한 값으로 설정되어야 합니다.\n\n\n# 사용\n# 업로드\n파일을 서버로 업로드하고자 할 때는 간단하게 upload 메서드만 호출하면 됩니다.\n\nuse xestorage;\nuse xpressengine\\http\\request;\nuse app\\http\\controllers\\controller;\n\nclass usercontroller extends controller\n{\n  public function uploadfile(request $request)\n  {\n    xestorage::upload($request->file('attached'), 'path/to/dir');\n  }\n}\n\n\n저장하는 파일이 서버에서 특별한 이름을 가지게 하고 싶은 경우 이름을 지정할 수 있습니다.\n\nxestorage::upload($request->file('attached'), 'path/to/dir', 'custom_file_name');\n\n\n그리고 만약 특정 파일저장소에 파일을 저장하고자 한다면 해당 파일저장소를 지정할 수 있습니다.\n\nxestorage::upload($request->file('attached'), 'path/to/dir', null, 's3');\n\n\n단순 업로드를 통한 저장이 아닌 편집등을 거쳐 생성된 결과물을 파일로 저장하려는 경우 create 메서드를 사용하면 됩니다.\n\n$content = file_get_content('path/to/file');\n$content = /* 편집처리 (이미지 섬네일 생성등과 같은) */;\nxestorage::create($content, 'path/to/dir', 'somefile');\n\n\n# 다운로드\n파일 객체를 download 메서드를 통해 전달하세요.\n\n$file = xestorage::find($id);\nxestorage::download($file);\n\n\n# 관계와 재사용\nxe 스토리지는 파일과 파일을 이용하는 대상과의 관계를 필요로 합니다. 그래서 업로드 후 관계를 맺어주는 작업을 수행해야 합니다.\n\n$file = xestorage::upload($request->file('attached'), 'path/to/dir');\nxestorage::bind($targetid, $file);\n\n\n그리고 이미 업로드되어진 파일은 다른 대상과도 관계를 맺을 수 있습니다.\n\n$file = xestorage::find($id);\nxestorage::bind($othertargetid, $file);\n\n\n만약 파일을 사용하던 대상이 더 이상 해당 파일을 사용하지 않게 된 경우 관계를 끊을 수 있습니다.\n\n$file = xestorage::find($id);\nxestorage::unbind($targetid, $file);\n\n\n이때 어떤 대상과도 연결되어지지 않게 될 경우 해당 파일을 삭제할 수 있습니다.\n\nxestorage::unbind($targetid, $file, true);\n\n\n여러개의 파일을 동시에 처리하는 경우 sync 메서드를 사용하면 파일을 사용하는 대상과 파일들의 관계를 간편하게 정의할 수 있습니다.\n\n$fileids = [];\nforeach ($uploadedfiles as $uploadedfile) {\n  $file = xestorage::upload($request->file('attached'), 'path/to/dir');\n  $fileids[] = $file->id;\n}\nxestorage::sync($targetid, $fileids);\n\n\n위와 같이 관계가 형성되면 대상의 아이디로 대상에 연결된 파일들을 조회하거나 관계를 끊을 수 있습니다.\n\n// 대상의 파일 목록 조회\n$files = xestorage::fetchbyfileable($targetid);\n\n// 대상의 삭제등의 처리시 파일들의 연결해제 처리\nxestorage::unbindall($targetid);",charsets:{cjk:!0}},{title:"프론트엔드",frontmatter:{},regularPath:"/08.%20%EC%84%9C%EB%B9%84%EC%8A%A4/service-frontend.html",relativePath:"08. 서비스/service-frontend.md",key:"v-cb2067da",path:"/08.%20%EC%84%9C%EB%B9%84%EC%8A%A4/service-frontend.html",headers:[{level:2,title:"프론트엔드\\(frontend/assets\\)",slug:"프론트엔드-frontend-assets",charIndex:10},{level:3,title:"브라우저 타이틀 태그 지정하기",slug:"브라우저-타이틀-태그-지정하기",charIndex:936},{level:3,title:"body 태그의 class 지정하기",slug:"body-태그의-class-지정하기",charIndex:1011},{level:3,title:"js 파일 로드하기",slug:"js-파일-로드하기",charIndex:1120},{level:3,title:"css 파일 로드하기",slug:"css-파일-로드하기",charIndex:2534},{level:3,title:"meta 태그 추가",slug:"meta-태그-추가",charIndex:2777},{level:3,title:"custom html 태그 추가하기",slug:"custom-html-태그-추가하기",charIndex:3115},{level:3,title:"icon 파일 로드하기",slug:"icon-파일-로드하기",charIndex:3407}],headersStr:"프론트엔드\\(frontend/assets\\) 브라우저 타이틀 태그 지정하기 body 태그의 class 지정하기 js 파일 로드하기 css 파일 로드하기 meta 태그 추가 custom html 태그 추가하기 icon 파일 로드하기",content:"# 프론트엔드\n# 프론트엔드(frontend/assets)\n브라우저에서 어떤 페이지를 요청하면 XE는 보통 모듈 스킨, 테마, 그리고 스킨과 테마에서 사용한 위젯이나 UI오브젝트에서 생성한 html 조각들을 조합하여 하나의 html 문서를 만듭니다. 그리고 이 html 문서에는 다양한 스타일시트와 스크립트 파일이 로드되고 meta 태그 같은 태그들이 html에 추가됩니다. Frontend 서비스는 이렇게 하나의 html 문서를 출력할 때 필요한 다양한 태그를 추가해주고 관리하는 역할을 합니다.\n\nXE에서는 요청을 처리할 때마다 매우 다양한 플러그인이 실행되며, 각각의 플러그인들은 자신이 필요한 스크립트나 스타일시트 파일을 로드하게 됩니다. 만약 Frontend와 같은 관리 주체가 없다면, 플러그인들에 의해 동일한 스크립트 파일이 중복으로 로드될 수 있습니다.\n\nFrontend 서비스는 아래와 같은 역할을 합니다.\n\n * html문서의 타이틀을 지정한다.\n * body 태그에 특정 class를 추가한다.\n * js파일을 html 특정영역(head 또는 body의 상,하단)에 로드한다\n * css파일을 html에 로드한다.\n * 이미 다른 컴포넌트에서 로드된 js, css파일을 언로드(unload) 한다.\n * meta 태그를 html에 로드한다.\n * custom 태그(자유로운 형식의 text)를 html에 추가한다.\n * form validation을 위한 rule을 지정한다.(브라우저에서 script를 통해 실행되는 validation)\n * script에서 사용할 언어팩을 로드한다.\n\n위의 역할을 수행할 때, Frontend 서비스는 여러 곳에서 로드된 js파일이나 css파일의 중복을 처리해줍니다. 또, js파일이나 css파일은 로드되는 순서도 매우 중요합니다. Frontend 패키지는 파일이 로드되는 순서를 지정하는 기능도 제공합니다.\n\n# 브라우저 타이틀 태그 지정하기\ntitle 메소드를 사용하십시오.\n\nXeFrontend::title('브라우저 타이틀입니다');\n\n\n# body 태그의 class 지정하기\nbodyClass 메소드를 사용하십시오.\n\n// body에 'profile' class지정\nXeFrontend::bodyClass('profile');\n\n\n# js 파일 로드하기\n# 기본 사용법\njs 메소드를 사용하여 스크립트 파일을 로드할 수 있습니다. 반드시 마지막에는 load 메소드를 사용해야 합니다.\n\n// xe.js파일을 body의 하단에 로드함.\nXeFrontend::js('assets/core/common/js/xe.js')->load();\n\n\n이때, appendTo, prependTo 메소드를 사용하면, html 상에 스크립트 파일이 로드되는 위치를 지정할 수 있습니다. 지정하지 않을 경우 <body> 태그 하단에 로드합니다.\n\n// xe.js파일을 head의 하단에 로드함.\nXeFrontend::js('assets/core/common/js/xe.js')->appendTo('head')->load();\n\n// xe.js파일을 body의 상단에 로드함.\nXeFrontend::js('assets/core/common/js/xe.js')->prependTo('body')->load();\n\n\n배열을 사용하여 다수의 파일을 동시에 로드할 수도 있습니다.\n\nXeFrontend::js([\n  'assets/vendor/jquery/jquery.min.js',\n  'assets/core/common/js/xe.js',\n  'plugin/board/assets/js/my.js'\n)->load();\n\n\n# 우선순위 지정\n만약 스크립트 파일을 로드할 때, 반드시 먼저 로드돼야 하는 다른 스크립트 파일이 있다면 before 메소드를 사용하여 지정할 수 있습니다. 반대의 경우, after 메소드를 사용하십시오.\n\n// bootstrap.js이 로드된 이후에 xe.js파일이 로드되도록 우선순위 지정\nXeFrontend::js('assets/core/common/js/xe.js')\n->before('assets/vendor/bootstrap/js/bootstrap.js')\n->appendTo('body')->load();\n\n\n다수의 파일을 동시에 로드한다면, 배열에 기입된 순서대로 우선순위가 정해집니다.\n\n// 3 파일의 우선순위가 자동으로 지정됨\nXeFrontend::js([\n  'assets/vendor/jquery/jquery.min.js',\n  'assets/core/common/js/xe.js',\n  'plugin/board/assets/js/my.js'\n)->load();\n\n\n> 주의! 만약 위의 방법을 사용하여 명시적으로 우선순위를 지정하지 않았다면, 로드된 파일들의 우선순위를 보장할 수 없습니다. 먼저 로드된 파일이라 하더라도 html상에서는 나중에 로드된 파일보다 늦게 로드될 수 있습니다.\n\n\n# 언로드\n이미 로드된 스크립트 파일이라도 unload 메소드를 사용하여 언로드할 수 있습니다.\n\n// 로드된 xe.js파일을 언로드함.\nXeFrontend::js('assets/core/common/js/xe.js')->unload();\n\n\n# css 파일 로드하기\ncss 파일도 js 스크립트 파일과 사용법이 동일합니다. 단 appendTo, prependTo 메소드를 지원하지 않습니다.\n\n// xe.css파일을 로드함. 반드시 bootstrap.css가 로드된 다음에 로드되도록 우선순위를 지정\nXeFrontend::js('assets/core/common/css/xe.css')->before('assets/vendor/bootstrap.css')->load();\n\n\n# meta 태그 추가\nmeta 메소드를 사용하여 meta 태그를 지정할 수 있습니다. meta 태그의 attribute를 지정하기 위해 name, charset, property, httpEquiv, content를 지원합니다.\n\n// 등록하려는 meta 태그의 별칭 등록.\n$alias = 'my.viewport';\n\nXeFrontend::meta($alias)->name('viewport')\n->content('width=device-width, initial-scale=1.0')->load();\n\n\n> alias는 다른 곳에서 내가 입력한 meta 태그를 언로드할 때 key로 사용합니다.\n\n\n# custom html 태그 추가하기\nhtml 메소드를 사용하면 자유롭게 원하는 코드를 추가할 수 있습니다.\n\n$alias = 'myscript';\n\n// script 코드를 `<body>` 하단에 추가\nXeFrontend::html($alias)->content('\n<script>\n    $(function () {\n        $('[data-toggle=\"tooltip\"]').tooltip()\n    })\n<\/script>\n')->appendTo('body')->load();\n\n\nunload, before\n\n# icon 파일 로드하기\nicon 메소드를 사용할 수 있습니다.\n\nXeFrontend::icon($iconUrl)->load();",contentLowercase:"# 프론트엔드\n# 프론트엔드(frontend/assets)\n브라우저에서 어떤 페이지를 요청하면 xe는 보통 모듈 스킨, 테마, 그리고 스킨과 테마에서 사용한 위젯이나 ui오브젝트에서 생성한 html 조각들을 조합하여 하나의 html 문서를 만듭니다. 그리고 이 html 문서에는 다양한 스타일시트와 스크립트 파일이 로드되고 meta 태그 같은 태그들이 html에 추가됩니다. frontend 서비스는 이렇게 하나의 html 문서를 출력할 때 필요한 다양한 태그를 추가해주고 관리하는 역할을 합니다.\n\nxe에서는 요청을 처리할 때마다 매우 다양한 플러그인이 실행되며, 각각의 플러그인들은 자신이 필요한 스크립트나 스타일시트 파일을 로드하게 됩니다. 만약 frontend와 같은 관리 주체가 없다면, 플러그인들에 의해 동일한 스크립트 파일이 중복으로 로드될 수 있습니다.\n\nfrontend 서비스는 아래와 같은 역할을 합니다.\n\n * html문서의 타이틀을 지정한다.\n * body 태그에 특정 class를 추가한다.\n * js파일을 html 특정영역(head 또는 body의 상,하단)에 로드한다\n * css파일을 html에 로드한다.\n * 이미 다른 컴포넌트에서 로드된 js, css파일을 언로드(unload) 한다.\n * meta 태그를 html에 로드한다.\n * custom 태그(자유로운 형식의 text)를 html에 추가한다.\n * form validation을 위한 rule을 지정한다.(브라우저에서 script를 통해 실행되는 validation)\n * script에서 사용할 언어팩을 로드한다.\n\n위의 역할을 수행할 때, frontend 서비스는 여러 곳에서 로드된 js파일이나 css파일의 중복을 처리해줍니다. 또, js파일이나 css파일은 로드되는 순서도 매우 중요합니다. frontend 패키지는 파일이 로드되는 순서를 지정하는 기능도 제공합니다.\n\n# 브라우저 타이틀 태그 지정하기\ntitle 메소드를 사용하십시오.\n\nxefrontend::title('브라우저 타이틀입니다');\n\n\n# body 태그의 class 지정하기\nbodyclass 메소드를 사용하십시오.\n\n// body에 'profile' class지정\nxefrontend::bodyclass('profile');\n\n\n# js 파일 로드하기\n# 기본 사용법\njs 메소드를 사용하여 스크립트 파일을 로드할 수 있습니다. 반드시 마지막에는 load 메소드를 사용해야 합니다.\n\n// xe.js파일을 body의 하단에 로드함.\nxefrontend::js('assets/core/common/js/xe.js')->load();\n\n\n이때, appendto, prependto 메소드를 사용하면, html 상에 스크립트 파일이 로드되는 위치를 지정할 수 있습니다. 지정하지 않을 경우 <body> 태그 하단에 로드합니다.\n\n// xe.js파일을 head의 하단에 로드함.\nxefrontend::js('assets/core/common/js/xe.js')->appendto('head')->load();\n\n// xe.js파일을 body의 상단에 로드함.\nxefrontend::js('assets/core/common/js/xe.js')->prependto('body')->load();\n\n\n배열을 사용하여 다수의 파일을 동시에 로드할 수도 있습니다.\n\nxefrontend::js([\n  'assets/vendor/jquery/jquery.min.js',\n  'assets/core/common/js/xe.js',\n  'plugin/board/assets/js/my.js'\n)->load();\n\n\n# 우선순위 지정\n만약 스크립트 파일을 로드할 때, 반드시 먼저 로드돼야 하는 다른 스크립트 파일이 있다면 before 메소드를 사용하여 지정할 수 있습니다. 반대의 경우, after 메소드를 사용하십시오.\n\n// bootstrap.js이 로드된 이후에 xe.js파일이 로드되도록 우선순위 지정\nxefrontend::js('assets/core/common/js/xe.js')\n->before('assets/vendor/bootstrap/js/bootstrap.js')\n->appendto('body')->load();\n\n\n다수의 파일을 동시에 로드한다면, 배열에 기입된 순서대로 우선순위가 정해집니다.\n\n// 3 파일의 우선순위가 자동으로 지정됨\nxefrontend::js([\n  'assets/vendor/jquery/jquery.min.js',\n  'assets/core/common/js/xe.js',\n  'plugin/board/assets/js/my.js'\n)->load();\n\n\n> 주의! 만약 위의 방법을 사용하여 명시적으로 우선순위를 지정하지 않았다면, 로드된 파일들의 우선순위를 보장할 수 없습니다. 먼저 로드된 파일이라 하더라도 html상에서는 나중에 로드된 파일보다 늦게 로드될 수 있습니다.\n\n\n# 언로드\n이미 로드된 스크립트 파일이라도 unload 메소드를 사용하여 언로드할 수 있습니다.\n\n// 로드된 xe.js파일을 언로드함.\nxefrontend::js('assets/core/common/js/xe.js')->unload();\n\n\n# css 파일 로드하기\ncss 파일도 js 스크립트 파일과 사용법이 동일합니다. 단 appendto, prependto 메소드를 지원하지 않습니다.\n\n// xe.css파일을 로드함. 반드시 bootstrap.css가 로드된 다음에 로드되도록 우선순위를 지정\nxefrontend::js('assets/core/common/css/xe.css')->before('assets/vendor/bootstrap.css')->load();\n\n\n# meta 태그 추가\nmeta 메소드를 사용하여 meta 태그를 지정할 수 있습니다. meta 태그의 attribute를 지정하기 위해 name, charset, property, httpequiv, content를 지원합니다.\n\n// 등록하려는 meta 태그의 별칭 등록.\n$alias = 'my.viewport';\n\nxefrontend::meta($alias)->name('viewport')\n->content('width=device-width, initial-scale=1.0')->load();\n\n\n> alias는 다른 곳에서 내가 입력한 meta 태그를 언로드할 때 key로 사용합니다.\n\n\n# custom html 태그 추가하기\nhtml 메소드를 사용하면 자유롭게 원하는 코드를 추가할 수 있습니다.\n\n$alias = 'myscript';\n\n// script 코드를 `<body>` 하단에 추가\nxefrontend::html($alias)->content('\n<script>\n    $(function () {\n        $('[data-toggle=\"tooltip\"]').tooltip()\n    })\n<\/script>\n')->appendto('body')->load();\n\n\nunload, before\n\n# icon 파일 로드하기\nicon 메소드를 사용할 수 있습니다.\n\nxefrontend::icon($iconurl)->load();",charsets:{cjk:!0}},{title:"헬퍼",frontmatter:{},regularPath:"/08.%20%EC%84%9C%EB%B9%84%EC%8A%A4/service-helper.html",relativePath:"08. 서비스/service-helper.md",key:"v-43fe63ca",path:"/08.%20%EC%84%9C%EB%B9%84%EC%8A%A4/service-helper.html",headersStr:null,content:"# 헬퍼",contentLowercase:"# 헬퍼",charsets:{cjk:!0}},{title:"이미지처리",frontmatter:{},regularPath:"/08.%20%EC%84%9C%EB%B9%84%EC%8A%A4/service-image-process.html",relativePath:"08. 서비스/service-image-process.md",key:"v-c8197536",path:"/08.%20%EC%84%9C%EB%B9%84%EC%8A%A4/service-image-process.html",headers:[{level:2,title:"이미지처리\\(Image, media\\)",slug:"이미지처리-image-media",charIndex:10},{level:3,title:"설정",slug:"설정",charIndex:131},{level:3,title:"섬네일 생성",slug:"섬네일-생성",charIndex:1702},{level:3,title:"타입별 접근",slug:"타입별-접근",charIndex:3723},{level:3,title:"미디어 표현",slug:"미디어-표현",charIndex:4101}],headersStr:"이미지처리\\(Image, media\\) 설정 섬네일 생성 타입별 접근 미디어 표현",content:"# 이미지처리\n# 이미지처리(Image, media)\nXE에서는 사용자가 등록하는 이미지와 같은 미디어 파일들을 제어하기위한 Media 패키지가 있습니다. Media 는 Intervention/image 에서 제공하는 기능을 이용하여 설정에서 정의된 내용에 의해 섬네일을 어떤 형태로 생성할지 결정하고 사이즈별로 생성해줍니다. 또한 이미지외에도 오디오, 비디오 파일들을 간편하게 표현해주기 위한 인터페이스를 제공합니다.\n\n# 설정\n미디어의 설정은 config/xe.php 파일의 media 항목에서 지정합니다.\n섬네일 설정은 다음과 같이 작성되어있습니다.\n\n  'thumbnail' => [\n    'disk' => 'local',\n    'path' => 'public/thumbnails',\n    'type' => 'fit',\n    'dimensions' => [\n      'S' => ['width' => 200, 'height' => 200,],\n      'M' => ['width' => 400, 'height' => 400,],\n      'L' => ['width' => 800, 'height' => 800,],\n    ],\n  ],\n\n\n * disk: 생성된 섬네일 이미지가 저장되어질 파일저장소를 지정합니다. 파일저장소는 config/filesystems.php 에서 정의합니다.\n   \n   \n * path: 섬네일 이미지가 위치할 경로를 지정합니다.\n   \n   \n * type: 어떤 형태로 섬네일 이미지를 생성할지 지정합니다. 지정할 수 있는 타입은 다음과 같습니다.\n   \n   >  * fit: 지정된 사이즈에 꽉 차고, 넘치는 영역은 삭제\n    * letter: 지정된 사이즈안에 이미지가 모두 포함되면서 기존 비율과 같은 비율을 가지는 형태\n    * widen: 가로 사이즈만을 기준으로 생성\n    * heighten: 세로 사이즈만을 기준으로 생성\n    * stretch: 비율을 무시하고 지정된 사이즈에 꽉 차게 생성\n    * spill: 지정된 사이즈에 꽉 차고, 넘치는 영역은 삭제하지 않는 형태\n   \n   \n   \n * dimensions: 생성될 섬네일 이미지의 가로, 세로 사이즈를 지정합니다.\n   \n   \n\nMedia 에서는 비디오 파일에서 이미지를 추출하기 위한 확장기능을 제공합니다.\n\n  'videoExtensionDefault' => 'dummy',\n  'videoExtensions' => [\n    'ffmpeg' => [\n      'ffmpeg.binaries' => '/usr/local/bin/ffmpeg',\n      'ffprobe.binaries' => '/usr/local/bin/ffprobe',\n      'timeout' => 3600,\n      'ffmpeg.threads' => 4,\n    ]\n  ],\n  'videoSnapshotFromSec' => 10\n\n\n기본으로 지정된 dummy 는 이미지추출 작업을 하지 않는 가상의 확장기능입니다. 비디오에서 이미지를 추출하도록 하고 싶다면 ffmpeg 로 변경하고 필요한 항목을 설정해야 합니다.\nffmpeg 를 사용하기 위해선 서버에 FFmpeg [https://ffmpeg.org/] 가 설치되어있어야 합니다. 그리고 컴포저를 통해 다음 패키지가 설치되어야 합니다.\n\n * php-ffmpeg/php-ffmpeg ~0.5\n\n> 비디오 확장기능은 현재 ffmpeg 만 지원합니다.\n\n\n# 섬네일 생성\n섬네일을 생성하기 위해서는 우선 File 객채를 미디어 객체로 변환해야 합니다. is메서드를 통해 특정파일이 미디어파일인지 확인하고, 미디어파일인 경우 섬네일을 생성하도록 합니다.\n\nuse XeStorage;\nuse XeMedia;\nuse Xpressengine\\Http\\Request;\nuse App\\Http\\Controllers\\Controller;\n\nclass UserController extends Controller\n{\n  public function uploadFile(Request $request)\n  {\n    $file = XeStorage::upload($request->file('attached'), 'path/to/dir');\n    if (XeMedia::is($file)) {\n      $media = XeMedia::make($file);\n      $thumbnails = XeMedia::createThumbnails($media);\n    }\n  }\n}\n\n\n특정페이지는 섬네일 이미지 생성시 별도의 형태로 하고자 하는 경우 직접 타입을 지정할 수 있습니다.\n\n$thumbnails = XeMedia::createThumbnails($media, 'widen');\n\n\n기존에 생성된 섬네일 이미지는 이미지 핸들러를 통해 얻을 수 있습니다.\n\n$thumbnails = XeMedia::images()->getThumbnails($media);\n\n// 특정 섬네일을 얻는 경우\n$thumbnail = XeMedia::images()->getThumbnail($media, 'spill', 'S');\n\n\n# 편집기능 특별하게 사용하기\nXE 에서 제공하는 이미지 편집 기능중에 crop 기능이 있습니다. crop 은 가로, 세로 사이즈뿐만 아니라 좌표값이 필요한 기능이므로 기본적인 섬네일 생성방식에서 제외되어 있습니다. 이 기능을 사용하기 위해서는 아래와 같이 조금 특별하게 코드가 작성되어야 합니다.\n\nuse XeStorage;\nuse Xpressengine\\Media\\Commands\\CropCommand;\nuse Xpressengine\\Media\\Coordinators\\Position;\nuse Xpressengine\\Media\\Coordinators\\Dimension;\nuse Xpressengine\\Media\\Thumbnailer;\nuse App\\Http\\Controllers\\Controller;\n\nclass UserController extends Controller\n{\n  public function editImage($id)\n  {\n    $image = XeMedia::images()->find($id);\n\n    $cropCmd = new CropCommand();\n    $cropCmd->setPosition(new Position(50, 100));    // 시작 좌표 설정\n    $cropCmd->setDimension(new Dimension(300, 200)); // 시작 좌표로 부터 가로, 세로 사이즈 지정\n\n    $thumbnailer = new Thumbnailer();\n    $content = $thumbnailer->setOrigin($image->getContent())->addCommand($cropCmd)->generate();\n\n    XeStorage::create($content, 'path/to/dir', 'crop_file_name');\n  }\n\n\nThumbnailer 는 처리할 명령을 순서대로 입력받을 수 있습니다. 만약 crop 한 이미지를 letter 타입으로 크기를 변환하려고 한다면 다음과 같이 할 수 있습니다.\n\n$letterCmd = new LetterCommand();\n$letterCmd->setDimension(new Dimension(100, 100));\n\n$content = $thumbnailer->setOrigin($image->getContent())->addCommand($cropCmd)->addCommand($letterCmd)->generate();\n\n\n# 타입별 접근\nXE 에서는 3가지 미디어 타입을 분리하여 기능을 제공하고 있습니다. 각 타입의 객체를 획득하거나 기능을 사용하기 위해서는 해당 타입의 핸들러를 획득해야 합니다. 핸들러를 획득하기 위해서는 각 타입의 타입 키워드를 단수 또는 복수형으로 호출하는 방식을 이용해야 합니다.\n\n// image handler\nXeMedia::image();\nXeMedia::images();\n\n// video handler\nXeMedia::video();\nXeMedia::videos();\n\n// audio handler\nXeMedia::audio();\nXeMedia::audios();\n\n\nextend 메서드를 이용하여 추가된 미디어 핸들러도 같은 방식으로 사용할 수 있습니다.\n\n# 미디어 표현\n미디어의 객체는 간편하게 화면에 표현할 수 있도록 인터페이스를 제공합니다. 이것은 사전에 정의된 html 태그를 반환합니다.\n\n<div>\n  {{ $image->render() }}\n</div>\n<div>\n  {{ $audio->render() }}\n</div>\n<div>\n  {{ $video->render() }}\n</div>\n\n\n기본으로 제공하는 html 태그를 사용하지 않길 원할수도 있습니다. 이땐 단순히 파일의 url 을 반환받을 수 있으므로 별도의 태그를 직접 작성하여 해결할 수 있습니다.\n\n<object data=\"{{ $video->url() }}\" width=\"300\" height=\"200\">\n  <param name=\"autoplay\" value=\"true\">\n  <param name=\"showcontrols\" value=\"true\">\n</object>",contentLowercase:"# 이미지처리\n# 이미지처리(image, media)\nxe에서는 사용자가 등록하는 이미지와 같은 미디어 파일들을 제어하기위한 media 패키지가 있습니다. media 는 intervention/image 에서 제공하는 기능을 이용하여 설정에서 정의된 내용에 의해 섬네일을 어떤 형태로 생성할지 결정하고 사이즈별로 생성해줍니다. 또한 이미지외에도 오디오, 비디오 파일들을 간편하게 표현해주기 위한 인터페이스를 제공합니다.\n\n# 설정\n미디어의 설정은 config/xe.php 파일의 media 항목에서 지정합니다.\n섬네일 설정은 다음과 같이 작성되어있습니다.\n\n  'thumbnail' => [\n    'disk' => 'local',\n    'path' => 'public/thumbnails',\n    'type' => 'fit',\n    'dimensions' => [\n      's' => ['width' => 200, 'height' => 200,],\n      'm' => ['width' => 400, 'height' => 400,],\n      'l' => ['width' => 800, 'height' => 800,],\n    ],\n  ],\n\n\n * disk: 생성된 섬네일 이미지가 저장되어질 파일저장소를 지정합니다. 파일저장소는 config/filesystems.php 에서 정의합니다.\n   \n   \n * path: 섬네일 이미지가 위치할 경로를 지정합니다.\n   \n   \n * type: 어떤 형태로 섬네일 이미지를 생성할지 지정합니다. 지정할 수 있는 타입은 다음과 같습니다.\n   \n   >  * fit: 지정된 사이즈에 꽉 차고, 넘치는 영역은 삭제\n    * letter: 지정된 사이즈안에 이미지가 모두 포함되면서 기존 비율과 같은 비율을 가지는 형태\n    * widen: 가로 사이즈만을 기준으로 생성\n    * heighten: 세로 사이즈만을 기준으로 생성\n    * stretch: 비율을 무시하고 지정된 사이즈에 꽉 차게 생성\n    * spill: 지정된 사이즈에 꽉 차고, 넘치는 영역은 삭제하지 않는 형태\n   \n   \n   \n * dimensions: 생성될 섬네일 이미지의 가로, 세로 사이즈를 지정합니다.\n   \n   \n\nmedia 에서는 비디오 파일에서 이미지를 추출하기 위한 확장기능을 제공합니다.\n\n  'videoextensiondefault' => 'dummy',\n  'videoextensions' => [\n    'ffmpeg' => [\n      'ffmpeg.binaries' => '/usr/local/bin/ffmpeg',\n      'ffprobe.binaries' => '/usr/local/bin/ffprobe',\n      'timeout' => 3600,\n      'ffmpeg.threads' => 4,\n    ]\n  ],\n  'videosnapshotfromsec' => 10\n\n\n기본으로 지정된 dummy 는 이미지추출 작업을 하지 않는 가상의 확장기능입니다. 비디오에서 이미지를 추출하도록 하고 싶다면 ffmpeg 로 변경하고 필요한 항목을 설정해야 합니다.\nffmpeg 를 사용하기 위해선 서버에 ffmpeg [https://ffmpeg.org/] 가 설치되어있어야 합니다. 그리고 컴포저를 통해 다음 패키지가 설치되어야 합니다.\n\n * php-ffmpeg/php-ffmpeg ~0.5\n\n> 비디오 확장기능은 현재 ffmpeg 만 지원합니다.\n\n\n# 섬네일 생성\n섬네일을 생성하기 위해서는 우선 file 객채를 미디어 객체로 변환해야 합니다. is메서드를 통해 특정파일이 미디어파일인지 확인하고, 미디어파일인 경우 섬네일을 생성하도록 합니다.\n\nuse xestorage;\nuse xemedia;\nuse xpressengine\\http\\request;\nuse app\\http\\controllers\\controller;\n\nclass usercontroller extends controller\n{\n  public function uploadfile(request $request)\n  {\n    $file = xestorage::upload($request->file('attached'), 'path/to/dir');\n    if (xemedia::is($file)) {\n      $media = xemedia::make($file);\n      $thumbnails = xemedia::createthumbnails($media);\n    }\n  }\n}\n\n\n특정페이지는 섬네일 이미지 생성시 별도의 형태로 하고자 하는 경우 직접 타입을 지정할 수 있습니다.\n\n$thumbnails = xemedia::createthumbnails($media, 'widen');\n\n\n기존에 생성된 섬네일 이미지는 이미지 핸들러를 통해 얻을 수 있습니다.\n\n$thumbnails = xemedia::images()->getthumbnails($media);\n\n// 특정 섬네일을 얻는 경우\n$thumbnail = xemedia::images()->getthumbnail($media, 'spill', 's');\n\n\n# 편집기능 특별하게 사용하기\nxe 에서 제공하는 이미지 편집 기능중에 crop 기능이 있습니다. crop 은 가로, 세로 사이즈뿐만 아니라 좌표값이 필요한 기능이므로 기본적인 섬네일 생성방식에서 제외되어 있습니다. 이 기능을 사용하기 위해서는 아래와 같이 조금 특별하게 코드가 작성되어야 합니다.\n\nuse xestorage;\nuse xpressengine\\media\\commands\\cropcommand;\nuse xpressengine\\media\\coordinators\\position;\nuse xpressengine\\media\\coordinators\\dimension;\nuse xpressengine\\media\\thumbnailer;\nuse app\\http\\controllers\\controller;\n\nclass usercontroller extends controller\n{\n  public function editimage($id)\n  {\n    $image = xemedia::images()->find($id);\n\n    $cropcmd = new cropcommand();\n    $cropcmd->setposition(new position(50, 100));    // 시작 좌표 설정\n    $cropcmd->setdimension(new dimension(300, 200)); // 시작 좌표로 부터 가로, 세로 사이즈 지정\n\n    $thumbnailer = new thumbnailer();\n    $content = $thumbnailer->setorigin($image->getcontent())->addcommand($cropcmd)->generate();\n\n    xestorage::create($content, 'path/to/dir', 'crop_file_name');\n  }\n\n\nthumbnailer 는 처리할 명령을 순서대로 입력받을 수 있습니다. 만약 crop 한 이미지를 letter 타입으로 크기를 변환하려고 한다면 다음과 같이 할 수 있습니다.\n\n$lettercmd = new lettercommand();\n$lettercmd->setdimension(new dimension(100, 100));\n\n$content = $thumbnailer->setorigin($image->getcontent())->addcommand($cropcmd)->addcommand($lettercmd)->generate();\n\n\n# 타입별 접근\nxe 에서는 3가지 미디어 타입을 분리하여 기능을 제공하고 있습니다. 각 타입의 객체를 획득하거나 기능을 사용하기 위해서는 해당 타입의 핸들러를 획득해야 합니다. 핸들러를 획득하기 위해서는 각 타입의 타입 키워드를 단수 또는 복수형으로 호출하는 방식을 이용해야 합니다.\n\n// image handler\nxemedia::image();\nxemedia::images();\n\n// video handler\nxemedia::video();\nxemedia::videos();\n\n// audio handler\nxemedia::audio();\nxemedia::audios();\n\n\nextend 메서드를 이용하여 추가된 미디어 핸들러도 같은 방식으로 사용할 수 있습니다.\n\n# 미디어 표현\n미디어의 객체는 간편하게 화면에 표현할 수 있도록 인터페이스를 제공합니다. 이것은 사전에 정의된 html 태그를 반환합니다.\n\n<div>\n  {{ $image->render() }}\n</div>\n<div>\n  {{ $audio->render() }}\n</div>\n<div>\n  {{ $video->render() }}\n</div>\n\n\n기본으로 제공하는 html 태그를 사용하지 않길 원할수도 있습니다. 이땐 단순히 파일의 url 을 반환받을 수 있으므로 별도의 태그를 직접 작성하여 해결할 수 있습니다.\n\n<object data=\"{{ $video->url() }}\" width=\"300\" height=\"200\">\n  <param name=\"autoplay\" value=\"true\">\n  <param name=\"showcontrols\" value=\"true\">\n</object>",charsets:{cjk:!0}},{title:"키생성\\(Keygen\\)",frontmatter:{},regularPath:"/08.%20%EC%84%9C%EB%B9%84%EC%8A%A4/service-keygen.html",relativePath:"08. 서비스/service-keygen.md",key:"v-5f3bc395",path:"/08.%20%EC%84%9C%EB%B9%84%EC%8A%A4/service-keygen.html",headers:[{level:2,title:"키생성\\(keygen\\)",slug:"키생성-keygen-2",charIndex:16},{level:3,title:"설정",slug:"설정",charIndex:192},{level:3,title:"사용",slug:"사용",charIndex:159},{level:3,title:"모델",slug:"모델",charIndex:663}],headersStr:"키생성\\(keygen\\) 설정 사용 모델",content:"# 키생성(Keygen)\n# 키생성(keygen)\nXE는 단순하고 유추하기 쉬운 기존의 데이터베이스를 이용한 auto_increment를 벗어나, 유일성을 보장하면서 유추하기 어려운 키를 생성할 수 있는 기능을 제공합니다. 키의 생성은 UUID 방식으로 ramsey/uuid를 이용해 사용자가 간편하게 고유키를 얻을 수 있도록 해줍니다.\n\n# 설정\n키생성기의 설정은 config/xe.php의 uid 항목에 있습니다.\n\n'uid' => [\n  'version' => 4,\n  'namespace' => 'xe'\n]\n\n\nversion은 사용할 UUID의 버전을 말합니다. 1, 3, 4, 5 네가지 값 중 하나를 입력할 수 있고, 기본은 4 버전을 사용합니다. namespace는 3, 5 버전에서 사용될 네임스페이스를 가리킵니다.\n\n> 각 버전의 차이는 위키 [https://en.wikipedia.org/wiki/Universally_unique_identifier]등에서 확인하실 수 있습니다.\n\n\n# 사용\n키의 생성은 generate 메서드를 통해 이루어 집니다.\n\n$keygen = app('xe.keygen');\n$id = $keygen->generate();\n\n\n생성된 키는 xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx 와 같은 형식을 가집니다.\n\n# 모델\nXE에서는 Illuminate\\Database\\Eloquent\\Model을 상속한 DynamicModel 모델을 이용하는 경우 키생성기를 통해 고유키를 제공합니다. 키생성기에서 제공하는 키를 사용하고자 한다면 해당 모델의 incrementnig을 비활성해야 합니다.\n\nuse Xpressengine\\Database\\Eloquent\\DynamicModel;\n\nclass MyModel extends DynamicModel\n{\n  public $incrementing = false;\n\n  ...\n}",contentLowercase:"# 키생성(keygen)\n# 키생성(keygen)\nxe는 단순하고 유추하기 쉬운 기존의 데이터베이스를 이용한 auto_increment를 벗어나, 유일성을 보장하면서 유추하기 어려운 키를 생성할 수 있는 기능을 제공합니다. 키의 생성은 uuid 방식으로 ramsey/uuid를 이용해 사용자가 간편하게 고유키를 얻을 수 있도록 해줍니다.\n\n# 설정\n키생성기의 설정은 config/xe.php의 uid 항목에 있습니다.\n\n'uid' => [\n  'version' => 4,\n  'namespace' => 'xe'\n]\n\n\nversion은 사용할 uuid의 버전을 말합니다. 1, 3, 4, 5 네가지 값 중 하나를 입력할 수 있고, 기본은 4 버전을 사용합니다. namespace는 3, 5 버전에서 사용될 네임스페이스를 가리킵니다.\n\n> 각 버전의 차이는 위키 [https://en.wikipedia.org/wiki/universally_unique_identifier]등에서 확인하실 수 있습니다.\n\n\n# 사용\n키의 생성은 generate 메서드를 통해 이루어 집니다.\n\n$keygen = app('xe.keygen');\n$id = $keygen->generate();\n\n\n생성된 키는 xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx 와 같은 형식을 가집니다.\n\n# 모델\nxe에서는 illuminate\\database\\eloquent\\model을 상속한 dynamicmodel 모델을 이용하는 경우 키생성기를 통해 고유키를 제공합니다. 키생성기에서 제공하는 키를 사용하고자 한다면 해당 모델의 incrementnig을 비활성해야 합니다.\n\nuse xpressengine\\database\\eloquent\\dynamicmodel;\n\nclass mymodel extends dynamicmodel\n{\n  public $incrementing = false;\n\n  ...\n}",charsets:{cjk:!0}},{title:"메일",frontmatter:{},regularPath:"/08.%20%EC%84%9C%EB%B9%84%EC%8A%A4/service-mail.html",relativePath:"08. 서비스/service-mail.md",key:"v-19276ec9",path:"/08.%20%EC%84%9C%EB%B9%84%EC%8A%A4/service-mail.html",headers:[{level:2,title:"메일\\(email\\)",slug:"메일-email",charIndex:7},{level:3,title:"설정",slug:"설정",charIndex:19},{level:3,title:"기본 사용법",slug:"기본-사용법",charIndex:566},{level:3,title:"인라인 첨부",slug:"인라인-첨부",charIndex:962},{level:3,title:"로컬 개발환경에서의 메일",slug:"로컬-개발환경에서의-메일",charIndex:2684}],headersStr:"메일\\(email\\) 설정 기본 사용법 인라인 첨부 로컬 개발환경에서의 메일",content:"# 메일\n# 메일(email)\n# 설정\n메일에 대한 설정 파일은 config/mail.php입니다. SMTP 호스트, 포트, 인증 및 라이브러리를 통해 송신되는 메세지들의 글로벌 form 주소를 설정할 수 있는 옵션들을 제공합니다. 원하는 경우 어떤 SMTP 서버라도 사용할 수 있습니다. 메일을 보낼 때 PHP의 mail 함수를 사용하려 한다면 설정 파일에서 driver를 mail로 변경하면 됩니다. 또한, sendmail 드라이버도 사용할 수 있습니다.\n\n# API 드라이버\n또한, Mailgun과 Mandrill의 HTTP API 드라이버를 사용할 수 있습니다. HTTP API를 사용하려면 라라벨 문서 [http://xpressengine.github.io/laravel-korean-docs/docs/5.0/mail/]를 참고하십시오.\n\n# 로그 드라이버\nconfig/mail.php 설정 파일에서 driver 옵션을 log로 설정한다면 실제로 이메일을 수신자에게 보내지 않고 로그 파일에 기록하게 됩니다. 이 설정은 주로 로컬에서 빠르게 디버깅을 해야하거나 내용을 확인하고자 할때 유용합니다.\n\n# 기본 사용법\nMail::send 메소드를 통해서 이메일을 보낼 수 있습니다:\n\nMail::send('emails.welcome', ['key' => 'value'], function($message)\n{\n    $message->to('foo@example.com', 'John Smith')->subject('Welcome!');\n});\n\n\nsend 메소드의 첫 번째 인자로 이메일의 본문에 사용되는 뷰(템플릿 파일)의 이름을 전달합니다. 두 번째는 뷰로 전달되는 인자인데 대부분 배열의 형태로 구성되며 $key를 통해서 뷰에서 사용됩니다. 세 번째로 전달되는 클로저는 이메일 메세지에 대한 다양한 옵션을 지정하는 데 사용됩니다.\n\n> 주의: $message라는 이름의 변수가 항상 이메일 뷰에 전달되고, 인라인 첨부를 사용가능하게 합니다. 따라서 message라는 이름의 변수를 메일 뷰에서 사용하는 것은 피하는게 좋습니다.\n\n\n만약 이메일 본문에서 사용할 템플릿 디자인이 준비되지 않았다면, XE에서 제공하는 템플릿 디자인을 사용할 수도 있습니다. XE에서 제공하는 템플릿 디자인은 resources/views/emails/common.blade.php 파일로 제공됩니다.\n\n이메일 본문을 담고 있는 blade 파일에서 emails.common을 extends 하십시오.\n\n\x3c!-- plugins/my_plugin/views/emails/welcome.blade.php --\x3e\n\n@extends('emails.common')\n\n@section('content')\n\n이메일 내용...\n\n@endsection\n\n\nHTML 뷰에 추가로 플레인 텍스트 뷰를 지정할 수도 있습니다:\n\nMail::send(['html.view', 'text.view'], $data, $callback);\n\n\n또는 html또는 text 키를 사용하고 한 종류의 뷰를 지정할 수 있습니다:\n\nMail::send(['text' => 'view'], $data, $callback);\n\n\n이메일 메세지에 대해 참조나 첨부파일과 같은 다른 옵션들을 지정할 수도 있습니다:\n\nMail::send('emails.welcome', $data, function($message)\n{\n    $message->from('us@example.com', 'Laravel');\n\n    $message->to('foo@example.com')->cc('bar@example.com');\n\n    $message->attach($pathToFile);\n});\n\n\n이메일에 첨부파일을 추가하고자 할때는 파일의 MIME 타입 또는 첨부파일이 표시되는 이름을 지정할 수 있습니다:\n\n$message->attach($pathToFile, ['as' => $display, 'mime' => $mime]);\n\n\n이메일을 보내기 위한 뷰 대신에 간단한 문자열을 사용하고자 한다면 raw 메소드를 사용하면 됩니다:\n\nMail::raw('Text to e-mail', function($message)\n{\n    $message->from('us@example.com', 'Laravel');\n\n    $message->to('foo@example.com')->cc('bar@example.com');\n});\n\n\n> 주의: Mail::send 클로저에 전달되는 메세지 인스턴스는 SwiftMailer 메세지 클래스를 확장하므로 이메일을 작성하는 데 필요한 클래스의 메소드들를 사용할 수 있습니다.\n\n\n# 인라인 첨부\n이메일에 인라인 이미지를 포함시키는 것은 번거로운 일입니다. XE는 이메일에 이미지를 첨부하고 최적의 CID를 얻을 수 있는 편리한 방법을 제공합니다.\n\n이메일 뷰에서 이미지를 첨부하는 방법\n\n<body>\n    Here is an image:\n\n    <img src=\"<?php echo $message->embed($pathToFile); ?>\">\n</body>\n\n\n이메일 뷰에서 Raw 데이터를 첨부하는 방법\n\n<body>\n    Here is an image from raw data:\n\n    <img src=\"<?php echo $message->embedData($data, $name); ?>\">\n</body>\n\n\n$message 변수는 항상 Mail 클래스에 의해서 뷰에 전달된다는 것에 주의하십시오.\n\n# 로컬 개발환경에서의 메일\n이메일을 전송하는 플러그인을 개발하는 경우에 로컬 또는 개발 환경이라면 메세지 전송을 비활성화 하는것이 바람직할 것입니다. 이를 위해서 config/mail.php 설정 파일에 pretend 옵션을 true로 설정하거나 Mail::pretend메소드를 호출하면 됩니다. 메일러가 pretend 모드인 경우에는 이메일 메세지는 수신자에게 송신되는 대신에 어플리케이션의 로그 파일에 기록됩니다.\n\n만약 실제로 이메일이 어떻게 보여지는지 확인하고자 한다면 MailTrap [https://mailtrap.io]과 같은 서비스를 이용하는 것도 고려해보시기 바랍니다.",contentLowercase:"# 메일\n# 메일(email)\n# 설정\n메일에 대한 설정 파일은 config/mail.php입니다. smtp 호스트, 포트, 인증 및 라이브러리를 통해 송신되는 메세지들의 글로벌 form 주소를 설정할 수 있는 옵션들을 제공합니다. 원하는 경우 어떤 smtp 서버라도 사용할 수 있습니다. 메일을 보낼 때 php의 mail 함수를 사용하려 한다면 설정 파일에서 driver를 mail로 변경하면 됩니다. 또한, sendmail 드라이버도 사용할 수 있습니다.\n\n# api 드라이버\n또한, mailgun과 mandrill의 http api 드라이버를 사용할 수 있습니다. http api를 사용하려면 라라벨 문서 [http://xpressengine.github.io/laravel-korean-docs/docs/5.0/mail/]를 참고하십시오.\n\n# 로그 드라이버\nconfig/mail.php 설정 파일에서 driver 옵션을 log로 설정한다면 실제로 이메일을 수신자에게 보내지 않고 로그 파일에 기록하게 됩니다. 이 설정은 주로 로컬에서 빠르게 디버깅을 해야하거나 내용을 확인하고자 할때 유용합니다.\n\n# 기본 사용법\nmail::send 메소드를 통해서 이메일을 보낼 수 있습니다:\n\nmail::send('emails.welcome', ['key' => 'value'], function($message)\n{\n    $message->to('foo@example.com', 'john smith')->subject('welcome!');\n});\n\n\nsend 메소드의 첫 번째 인자로 이메일의 본문에 사용되는 뷰(템플릿 파일)의 이름을 전달합니다. 두 번째는 뷰로 전달되는 인자인데 대부분 배열의 형태로 구성되며 $key를 통해서 뷰에서 사용됩니다. 세 번째로 전달되는 클로저는 이메일 메세지에 대한 다양한 옵션을 지정하는 데 사용됩니다.\n\n> 주의: $message라는 이름의 변수가 항상 이메일 뷰에 전달되고, 인라인 첨부를 사용가능하게 합니다. 따라서 message라는 이름의 변수를 메일 뷰에서 사용하는 것은 피하는게 좋습니다.\n\n\n만약 이메일 본문에서 사용할 템플릿 디자인이 준비되지 않았다면, xe에서 제공하는 템플릿 디자인을 사용할 수도 있습니다. xe에서 제공하는 템플릿 디자인은 resources/views/emails/common.blade.php 파일로 제공됩니다.\n\n이메일 본문을 담고 있는 blade 파일에서 emails.common을 extends 하십시오.\n\n\x3c!-- plugins/my_plugin/views/emails/welcome.blade.php --\x3e\n\n@extends('emails.common')\n\n@section('content')\n\n이메일 내용...\n\n@endsection\n\n\nhtml 뷰에 추가로 플레인 텍스트 뷰를 지정할 수도 있습니다:\n\nmail::send(['html.view', 'text.view'], $data, $callback);\n\n\n또는 html또는 text 키를 사용하고 한 종류의 뷰를 지정할 수 있습니다:\n\nmail::send(['text' => 'view'], $data, $callback);\n\n\n이메일 메세지에 대해 참조나 첨부파일과 같은 다른 옵션들을 지정할 수도 있습니다:\n\nmail::send('emails.welcome', $data, function($message)\n{\n    $message->from('us@example.com', 'laravel');\n\n    $message->to('foo@example.com')->cc('bar@example.com');\n\n    $message->attach($pathtofile);\n});\n\n\n이메일에 첨부파일을 추가하고자 할때는 파일의 mime 타입 또는 첨부파일이 표시되는 이름을 지정할 수 있습니다:\n\n$message->attach($pathtofile, ['as' => $display, 'mime' => $mime]);\n\n\n이메일을 보내기 위한 뷰 대신에 간단한 문자열을 사용하고자 한다면 raw 메소드를 사용하면 됩니다:\n\nmail::raw('text to e-mail', function($message)\n{\n    $message->from('us@example.com', 'laravel');\n\n    $message->to('foo@example.com')->cc('bar@example.com');\n});\n\n\n> 주의: mail::send 클로저에 전달되는 메세지 인스턴스는 swiftmailer 메세지 클래스를 확장하므로 이메일을 작성하는 데 필요한 클래스의 메소드들를 사용할 수 있습니다.\n\n\n# 인라인 첨부\n이메일에 인라인 이미지를 포함시키는 것은 번거로운 일입니다. xe는 이메일에 이미지를 첨부하고 최적의 cid를 얻을 수 있는 편리한 방법을 제공합니다.\n\n이메일 뷰에서 이미지를 첨부하는 방법\n\n<body>\n    here is an image:\n\n    <img src=\"<?php echo $message->embed($pathtofile); ?>\">\n</body>\n\n\n이메일 뷰에서 raw 데이터를 첨부하는 방법\n\n<body>\n    here is an image from raw data:\n\n    <img src=\"<?php echo $message->embeddata($data, $name); ?>\">\n</body>\n\n\n$message 변수는 항상 mail 클래스에 의해서 뷰에 전달된다는 것에 주의하십시오.\n\n# 로컬 개발환경에서의 메일\n이메일을 전송하는 플러그인을 개발하는 경우에 로컬 또는 개발 환경이라면 메세지 전송을 비활성화 하는것이 바람직할 것입니다. 이를 위해서 config/mail.php 설정 파일에 pretend 옵션을 true로 설정하거나 mail::pretend메소드를 호출하면 됩니다. 메일러가 pretend 모드인 경우에는 이메일 메세지는 수신자에게 송신되는 대신에 어플리케이션의 로그 파일에 기록됩니다.\n\n만약 실제로 이메일이 어떻게 보여지는지 확인하고자 한다면 mailtrap [https://mailtrap.io]과 같은 서비스를 이용하는 것도 고려해보시기 바랍니다.",charsets:{cjk:!0}},{title:"회원/인증",frontmatter:{},regularPath:"/08.%20%EC%84%9C%EB%B9%84%EC%8A%A4/service-member_auth.html",relativePath:"08. 서비스/service-member_auth.md",key:"v-63a33ee5",path:"/08.%20%EC%84%9C%EB%B9%84%EC%8A%A4/service-member_auth.html",headers:[{level:2,title:"회원/인증\\(user/auth\\)",slug:"회원-인증-user-auth",charIndex:10},{level:3,title:"회원 및 인증 서비스",slug:"회원-및-인증-서비스",charIndex:29}],headersStr:"회원/인증\\(user/auth\\) 회원 및 인증 서비스",content:"# 회원/인증\n# 회원/인증(user/auth)\n# 회원 및 인증 서비스\nXE는 회원정보를 저장하고 관리하는 기능을 제공합니다. 일반적인 회원 관리 기능으로는 신규가입, 회원정보 수정, 회원 삭제와 같은 기능이 있습니다. 또, 인증 시도, 로그인, 로그아웃과 같은 인증 관련 기능도 함께 제공합니다.\n\n회원 관리 기능을 정확히 사용하기 위해서는 회원 및 회원의 부가정보들의 데이터 구조를 정확히 파악해야 합니다.\n\n# 데이터 구조\n회원\n\n회원은 사이트에서 가입 및 인증의 대상이 되는 개념으로, 일반적으로 한명의 사람이라고 생각할 수 있습니다. 회원은 사이트 내에서 권한(permission)을 부여받을 수 있는 대상이 될 수 있습니다.\n\nXE는 회원정보를 \\Xpressengine\\User\\Models\\User 엘로퀀트 모델로 표현하며 user 테이블에 저장합니다.\n\n계정\n\n일반적인 회원서비스에서는 회원(user)과 계정(account)을 동일 개념으로 처리합니다. 하지만 XE는 소셜로그인과 같은 외부 계정을 통한 가입/인증을 유연하게 적용하기 위하여 회원과 계정의 개념을 분리했습니다. 회원은 기본계정 이외에 다수의 외부 계정을 가질 수 있으며, 다수의 계정 중 하나로 회원을 인증(authentication)하고 로그인할 수 있습니다.\n\n만약 소셜로그인과 같이 외부 사이트에서 제공하는 회원서비스를 사용하는 회원가입/로그인 기능을 구현하고 싶다면, 회원 계정을 잘 활용하시길 바랍니다.\n\nXE는 계정정보를 \\Xpressengine\\User\\Models\\UserAccount 엘로퀀트 모델로 표현하며 user_account 테이블에 저장합니다.\n\n> XE에서는 회원의 계정정보를 등록(저장)하고 조회, 삭제하는 기능만 제공합니다. 계정정보를 이용한 가입 및 인증은 별도의 플러그인(social_login)을 통해 제공합니다.\n\n\n이메일\n\n한명의 회원은 다수의 '승인된 이메일'을 소유할 수 있습니다. 만약 회원이 다수의 이메일을 소유하고 있다면, 소유한 이메일 중 하나와 비밀번호를 사용하여 로그인 할 수 있습니다.\n\n다수의 이메일 중 하나는 회원의 대표 이메일로 지정됩니다. 대표 이메일은 회원에게 이메일을 전송하거나 외부에 공개될 때 사용되는 이메일입니다.\n\nXE는 이메일 정보를 \\Xpressengine\\User\\Models\\UserEmail 엘로퀀트 모델로 표현하며 user_email 테이블에 저장합니다.\n\n승인대기 이메일\n\n회원은 하나의 '승인대기 이메일'을 가질 수 있습니다. 신규회원이 가입할 때 입력한 이메일은 승인대기 이메일로 등록됩니다. 승인대기 이메일은 승인된 이메일과 별도의 테이블에 저장되며, 이메일 인증과정을 거친 후에 승인된 이메일로 등록됩니다.\n\nXE는 승인대기 이메일 정보를 \\Xpressengine\\User\\Models\\PendingEmail 엘로퀀트 모델로 표현하며 user_pending_email 테이블에 저장합니다.\n\n> 사이트 관리자가 '이메일 인증' 기능을 사용하도록 설정했을 경우, 가입시 등록한 이메일 승인대기 이메일에 등록됩니다. 만약 이메일 인증 기능을 사용하지 않는다면, 가입과 동시에 일반 이메일로 등록됩니다.\n\n\n회원등급\n\n한명의 회원은 3개의 회원등급(최고관리자, 관리자, 일반회원) 중 하나를 부여받습니다. 최고관리자(super)는 사이트 내에서 모든 권한을 가지는 운영자입니다. 관리자(manager)는 일반적으로 사이트를 함께 관리하는 부운영자라고 생각할 수 있습니다. 일반회원(member)는 사이트에 사용자인 일반적인 회원입니다.\n\n회원등급은 별도의 테이블에 저장되지 않으며, 회원(user) 테이블의 rating 컬럼에 저장됩니다.\n\n그룹\n\n회원그룹은 회원을 자유롭게 그루핑할 때 사용합니다. 사이트관리자는 자유롭게 회원그룹을 생성할 수 있고, 회원을 다수의 회원그룹에 소속시킬 수 있습니다. 회원그룹은 권한을 부여받을 수 있는 대상이 될 수 있습니다.\n\nXE는 그룹 정보를 \\Xpressengine\\User\\Models\\UserGroup 엘로퀀트 모델로 표현하며 user_group 테이블에 저장합니다. 또, 회원과 회원이 소속된 그룹의 관계는 user_group_user 테이블에 저장됩니다.\n\n# 회원 관리\n회원 및 부가 정보(그룹, 계정, 이메일 등)를 조회하거나 처리할 때에는 XeUser 파사드를 사용하십시오. XeUser 파사드의 실제 구현은 \\Xpressengine\\User\\UserHandler에 정의되어 있습니다.\n\n회원 조회\n\n회원 아이디로 회원을 조회할 때에는 find 메소드를 사용하십시오.\n\n$user = XeUser::find($id);\n$username = $user->getDisplayName();\n\n\n여러 회원을 조회할 수도 있습니다.\n\n$ids = [1,2,3];\n$users = XeUser::find($ids);\n\nforeach($users as $user) {\n  ...\n}\n\n\n다양하고 복잡한 조건(쿼리)으로 회원을 조회할 수도 있습니다. 자세한 사용법은 라라벨 문서 [https://laravel.com/docs/5.2/eloquent]를 참조하십시오.\n\n// displayName이 'foo'인 회원 조회\n$user = XeUser::where('displayName', 'foo')->first();\n\n\n// displayName이 foo로 시작하는 모든 회원 조회\n$user = XeUser::where('displayName', 'like', '%foo')->get();\n\n\n신규 회원 추가\n\nXeUser는 복잡한 회원 생성 과정을 한번에 처리해주는 create 메소드를 제공합니다. create 메소드는 입력한 신규회원 정보에 대한 유효성 검사후 신규회원을 생성합니다. 또한 회원의 계정(account), 이메일(email) 정보도 자동으로 추가되며, 소속될 그룹에 대한 정보가 전달되었을 경우, 그룹에 추가시켜주기도 합니다.\n\n$data = [\n  'displayName' => 'foo',\n  'email' => 'foo@email.com',\n  //...\n];\n\n$newUser = XeUser::create($data);\n\n\n신규 회원의 계정(account) 정보를 같이 등록할 수도 있습니다.\n\n$data = [\n  'displayName' => 'foo',\n  'email' => 'foo@email.com',\n  //...\n]\n\n$data['account'] = [\n  'provider' => 'facebook',\n  'token' => '3DIfdkwwfdsie...',\n  'id' => 'id of facebook user',\n  'data' => '...'\n]\n\n$newUser = XeUser::create($data);\n\n\n신규회원이 소속될 회원그룹을 지정할 수도 있습니다.\n\n  $data = [\n  'displayName' => 'foo',\n  'email' => 'foo@email.com',\n  'groupId' => [21,23] // 그룹아이디가 21, 23인 그룹에 회원을 소속시킴\n]\n\n$newUser = XeUser::create($data);\n\n\n만약, 유효성검사를 생략하거나 부가 정보(account, email, group)를 등록을 하지 않고, 순수하게 회원 정보만 추가하고 싶다면 XeUser 파사드 대신, UserRepository를 사용하십시오.\n\nUserRepository는 XeUser 파사드를 사용하여 로드할 수 있습니다.\n\n// 순수 회원정보만 등록\n$data = [\n  'displayName' => 'foo',\n  'email' => 'foo@email.com',\n  'password' => '...'\n]\n\n$newUser = XeUser::users()->create($data);\n\n\n> UserRepository의 create 메소드를 곧바로 사용할 때, password를 암호화하지 않고 바로 저장합니다. 먼저 password 필드를 직접 암호화하십시오.\n\n\n회원정보 수정\n\nXeUser::update 메소드를 사용하면 회원정보를 변경할 수 있습니다. 유효성 검사 및 프로필 이미지 처리, 소속그룹의 변경도 동시에 처리합니다.\n\n$user = XeUser::find(20);\nXeUser::update($user, ['displayName' => 'bar']);\n\n\n회원 삭제\n\nXeUser::leave 메소드를 사용하면 회원을 삭제(탈퇴)할 수 있습니다. 삭제할 회원의 부가정보(account, email)도 같이 삭제됩니다.\n\n$ids = [12,23,34];\nXeUser::leave($ids); // 3명의 회원을 탈퇴시킴\n\n\nUserRepository의 delete 메소드를 사용하여 회원을 삭제할 수도 있습니다. 단, 이 메소드를 사용하면 삭제될 회원의 부가 정보는 함께 삭제되지 않습니다.\n\n$user = XeUser::find(12);\nXeUser::users()->delete($user);\n\n\n회원 계정 관리\n\n계정 조회\n\n회원계정을 조회할 때에는 UserAccountRepository를 사용하십시오. UserAccountRepository는 XeUser파사드를 사용하여 로드할 수 있습니다.\n\n$userAccountRepository = XeUser::accounts();\n\n\n회원이 소유한 계정 목록을 조회할 수 있습니다.\n\n// 회원 아이디로 계정 정보 조회\n$userId = '123';\n$accounts = XeUser::accounts()->findByUserId($accountId);\n\n\n위 코드는 아래 코드로 대체할 수도 있습니다.\n\n$user = XeUser::find('123');\n$accounts = $user->accounts;\n\n\nUser의 getAccountByProvider 메소드를 사용하면 특정 프로바이더(소셜로그인 벤더)의 계정을 조회할 수 있습니다.\n\n$user = XeUser::find('123');\n$facebookAccount = $user->getAccountByProvider('facebook');\n\n\n좀 더 복잡한 조건으로 계정을 조회하고 싶다면, query메소드를 사용하십시오.\n\n$query = XeUser::accounts()->query();\n$account = $query->where('email', 'foo@facebook.com')->first();\n\n\n계정 생성\n\n회원계정을 생성할 때에는 XeUser파사드를 사용할 수 있습니다. createAccount 메소드를 사용하십시오.\n\n// 기존 회원에 계정정보 추가하기\n$user = XeUser::find('123');\n\n$accountData = [\n  'email' => 'foo@facebook.com',\n  'accountId' => 'facebookId',\n  'provider' => 'facebook',\n  'token' => '39238432893,\n  'data' => '...'\n];\n\n$newAccount = XeUser::createAccount($user, $accountData);\n\n\n계정 수정\n\n회원계정을 수정할 때에도 XeUser파사드를 사용할 수 있습니다. updateAccount 메소드를 사용하십시오.\n\n$user = XeUser::find('123');\n$facebookAccount = $user->getAccountByProvider('facebook');\n\nXeUser::updateAccount($facebookAccount, [token => '2197548']);\n\n\n계정 삭제\n\n회원계정을 수정할 때에는 XeUser::deleteAccount 메소드를 사용하십시오.\n\nXeUser::deleteAccount($facebookAccount);\n\n\n회원 이메일 관리\n\n이메일 조회\n\n회원계정을 조회할 때에는 UserEmailRepository를 사용하십시오. UserEmailRepository는 XeUser파사드를 사용하여 로드할 수 있습니다.\n\n$userEmailRepository = XeUser::emails();\n\n\n이메일 주소로 이메일 정보를 조회할 수 있습니다.\n\n$email = XeUser::emails()->findByAddress('foo@bar.com');\n\n\n특정 회원이 소유한 모든 이메일을 조회할 수 있습니다.\n\n$userId = '123';\n$emails = XeUser::emails()->findByUserId($userId);\n\n\n좀 더 복잡한 조건으로 이메일을 조회하고 싶다면, query메소드를 사용하십시오.\n\n// 'foo@'로 시작되는 이메일 검색\n$query = XeUser::emails()->query();\n$emails = $query->where('address', 'like', 'foo@%')->get();\n\n\n승인대기 이메일을 조회할 때에는 UserEmailRepository 대신 'PendingEmailRepository'를 사용하십시오. PendingEmailRepository는 XeUser파사드를 사용하여 로드할 수 있습니다. UserEmailRepository와 동일하게 사용할 수 있습니다.\n\n$userEmailRepository = XeUser::pendingEmails();\n\n\n이메일 생성\n\n회원 이메일을 생성할 때에는 XeUser파사드의 createEmail 메소드를 사용하십시오.\n\n$user = XeUser::find('123');\n\n$emailData = [\n  'address' => 'foo@bar.com'\n];\n\n$email = XeUser::createEmail($user, $emailData, true);\n\n\ncreateEmail 메소드의 마지막 메소드는 생성하는 이메일의 승인 여부를 지정합니다. true이면 승인된 이메일로 저장되며, false이면 승인대기 이메일로 저장됩니다.\n\n이메일 수정\n\n기등록 된 이메일(또는 승인대기 이메일)을 수정할 수 있습니다. XeUser::updateEmail을 사용하십시오.\n\n$email->address = 'foo@bar.com';\nXeUser::updateEmail($email);\n\n// or\n\nXeUser::updateEmail($email, ['address'=>'foo@bar.com']);\n\n\n이메일 삭제\n\n이메일(또는 승인대기 이메일)을 삭제할 수 있습니다. XeUser::deleteEmail을 사용하십시오.\n\nXeUser::deleteEmail($email);\n\n\n회원 그룹 관리\n\n그룹 조회\n\n...\n\n그룹 생성\n\n// 그룹정보 생성\n$groupData = [\n  'name' => '정회원',\n  'description' => '기본회원',\n];\n\n$group = XeUser::createGroup($groupData);\n\n\n그룹 수정\n\nXeUser::updateGroup($group, ['name' => '기본회원']);\n\n\n그룹 삭제\n\nXeUser::deleteGroup($group);\n\n\n# 인증\n등록된 회원은 사이트에 로그인할 수 있습니다. 사이트에 로그인할 때 XE는 입력된 회원정보에 대한 인증(authentication) 과정을 거친후, 세션(session)에 로그인 한 회원의 정보를 등록합니다. 로그아웃을 할 때에는 반대로 세션에 등록했던 회원 정보를 삭제합니다.\n\nAuth 파사드를 사용하면 현재 접속한 회원의 로그인, 로그아웃을 비롯한 인증과 관련된 기능을 수행할 수 있습니다.\n\n현재 로그인한 사용자 조회\n\n현재 로그인한 사용자를 조회할 때에는 user 메소드를 사용하십시오.\n\n$user = Auth::user();\n\n\n또는 request 인스턴스를 사용할 수도 있습니다.\n\n$user = request()->user();\n\n\n로그인한 사용자의 아이디(id)만 조회할 수도 있습니다.\n\n$loggedUserId = Auth::id();\n\n\n로그인 상태 조회\n\ncheck 메소드를 사용하면 접속 중인 사용자가 로그인을 한 상태인지 조회할 수 있습니다.\n\nif (Auth::check()) {\n    // The user is logged in...\n}\n\n\n로그인\n\n등록된 회원의 인스턴스를 획득하고 있다면, login 메소드를 사용하여 해당 회원을 로그인시킬 수 있습니다.\n\n$user = XeUser::find('123');\n\nAuth::login($user);\n\n\n해당 회원이 현재와 동일한 환경(단말기의 브라우저)에서 다음에 다시 사이트에 접속했을 때, 자동으로 로그인 처리를 하는 '로그인 유지' 기능을 사용할 수 있습니다. login 메소드의 두번째 파라메터로 true를 사용하면, 해당 회원에게 '로그인 유지' 기능을 활성화시킵니다.\n\n// Login and \"remember\" the given user...\nAuth::login($user, true);\n\n\n로그인 시도\n\nlogin 메소드는 회원정보의 인증 과정을 거치지 않고, 회원 인스턴스를 통해 바로 로그인 처리를 합니다. 만약 회원의 입력한 정보를 인증한 후 로그인까지 시도하고 싶을 때에는 attempt메소드를 사용하십시오.\n\nattempt 메소드를 실행하면 입력된 정보가 등록된 회원정보와 일치하는지 검사합니다. 회원정보가 일치한다면 해당 회원을 로그인시킵니다.\n\nif (Auth::attempt(['email' => $email, 'password' => $password])) {\n    // Authentication passed...\n    return redirect()->intended('dashboard');\n}\n\n\n만약 '로그인 유지' 기능을 사용하고싶을 때에는 두번째 파라메터로 true를 전달하십시오.\n\nif (Auth::attempt(['email' => $email, 'password' => $password], true)) {\n    // The user is being remembered...\n}\n\n\n로그아웃\n\nlogout 메소드를 사용하십시오.\n\nAuth::logout();",contentLowercase:"# 회원/인증\n# 회원/인증(user/auth)\n# 회원 및 인증 서비스\nxe는 회원정보를 저장하고 관리하는 기능을 제공합니다. 일반적인 회원 관리 기능으로는 신규가입, 회원정보 수정, 회원 삭제와 같은 기능이 있습니다. 또, 인증 시도, 로그인, 로그아웃과 같은 인증 관련 기능도 함께 제공합니다.\n\n회원 관리 기능을 정확히 사용하기 위해서는 회원 및 회원의 부가정보들의 데이터 구조를 정확히 파악해야 합니다.\n\n# 데이터 구조\n회원\n\n회원은 사이트에서 가입 및 인증의 대상이 되는 개념으로, 일반적으로 한명의 사람이라고 생각할 수 있습니다. 회원은 사이트 내에서 권한(permission)을 부여받을 수 있는 대상이 될 수 있습니다.\n\nxe는 회원정보를 \\xpressengine\\user\\models\\user 엘로퀀트 모델로 표현하며 user 테이블에 저장합니다.\n\n계정\n\n일반적인 회원서비스에서는 회원(user)과 계정(account)을 동일 개념으로 처리합니다. 하지만 xe는 소셜로그인과 같은 외부 계정을 통한 가입/인증을 유연하게 적용하기 위하여 회원과 계정의 개념을 분리했습니다. 회원은 기본계정 이외에 다수의 외부 계정을 가질 수 있으며, 다수의 계정 중 하나로 회원을 인증(authentication)하고 로그인할 수 있습니다.\n\n만약 소셜로그인과 같이 외부 사이트에서 제공하는 회원서비스를 사용하는 회원가입/로그인 기능을 구현하고 싶다면, 회원 계정을 잘 활용하시길 바랍니다.\n\nxe는 계정정보를 \\xpressengine\\user\\models\\useraccount 엘로퀀트 모델로 표현하며 user_account 테이블에 저장합니다.\n\n> xe에서는 회원의 계정정보를 등록(저장)하고 조회, 삭제하는 기능만 제공합니다. 계정정보를 이용한 가입 및 인증은 별도의 플러그인(social_login)을 통해 제공합니다.\n\n\n이메일\n\n한명의 회원은 다수의 '승인된 이메일'을 소유할 수 있습니다. 만약 회원이 다수의 이메일을 소유하고 있다면, 소유한 이메일 중 하나와 비밀번호를 사용하여 로그인 할 수 있습니다.\n\n다수의 이메일 중 하나는 회원의 대표 이메일로 지정됩니다. 대표 이메일은 회원에게 이메일을 전송하거나 외부에 공개될 때 사용되는 이메일입니다.\n\nxe는 이메일 정보를 \\xpressengine\\user\\models\\useremail 엘로퀀트 모델로 표현하며 user_email 테이블에 저장합니다.\n\n승인대기 이메일\n\n회원은 하나의 '승인대기 이메일'을 가질 수 있습니다. 신규회원이 가입할 때 입력한 이메일은 승인대기 이메일로 등록됩니다. 승인대기 이메일은 승인된 이메일과 별도의 테이블에 저장되며, 이메일 인증과정을 거친 후에 승인된 이메일로 등록됩니다.\n\nxe는 승인대기 이메일 정보를 \\xpressengine\\user\\models\\pendingemail 엘로퀀트 모델로 표현하며 user_pending_email 테이블에 저장합니다.\n\n> 사이트 관리자가 '이메일 인증' 기능을 사용하도록 설정했을 경우, 가입시 등록한 이메일 승인대기 이메일에 등록됩니다. 만약 이메일 인증 기능을 사용하지 않는다면, 가입과 동시에 일반 이메일로 등록됩니다.\n\n\n회원등급\n\n한명의 회원은 3개의 회원등급(최고관리자, 관리자, 일반회원) 중 하나를 부여받습니다. 최고관리자(super)는 사이트 내에서 모든 권한을 가지는 운영자입니다. 관리자(manager)는 일반적으로 사이트를 함께 관리하는 부운영자라고 생각할 수 있습니다. 일반회원(member)는 사이트에 사용자인 일반적인 회원입니다.\n\n회원등급은 별도의 테이블에 저장되지 않으며, 회원(user) 테이블의 rating 컬럼에 저장됩니다.\n\n그룹\n\n회원그룹은 회원을 자유롭게 그루핑할 때 사용합니다. 사이트관리자는 자유롭게 회원그룹을 생성할 수 있고, 회원을 다수의 회원그룹에 소속시킬 수 있습니다. 회원그룹은 권한을 부여받을 수 있는 대상이 될 수 있습니다.\n\nxe는 그룹 정보를 \\xpressengine\\user\\models\\usergroup 엘로퀀트 모델로 표현하며 user_group 테이블에 저장합니다. 또, 회원과 회원이 소속된 그룹의 관계는 user_group_user 테이블에 저장됩니다.\n\n# 회원 관리\n회원 및 부가 정보(그룹, 계정, 이메일 등)를 조회하거나 처리할 때에는 xeuser 파사드를 사용하십시오. xeuser 파사드의 실제 구현은 \\xpressengine\\user\\userhandler에 정의되어 있습니다.\n\n회원 조회\n\n회원 아이디로 회원을 조회할 때에는 find 메소드를 사용하십시오.\n\n$user = xeuser::find($id);\n$username = $user->getdisplayname();\n\n\n여러 회원을 조회할 수도 있습니다.\n\n$ids = [1,2,3];\n$users = xeuser::find($ids);\n\nforeach($users as $user) {\n  ...\n}\n\n\n다양하고 복잡한 조건(쿼리)으로 회원을 조회할 수도 있습니다. 자세한 사용법은 라라벨 문서 [https://laravel.com/docs/5.2/eloquent]를 참조하십시오.\n\n// displayname이 'foo'인 회원 조회\n$user = xeuser::where('displayname', 'foo')->first();\n\n\n// displayname이 foo로 시작하는 모든 회원 조회\n$user = xeuser::where('displayname', 'like', '%foo')->get();\n\n\n신규 회원 추가\n\nxeuser는 복잡한 회원 생성 과정을 한번에 처리해주는 create 메소드를 제공합니다. create 메소드는 입력한 신규회원 정보에 대한 유효성 검사후 신규회원을 생성합니다. 또한 회원의 계정(account), 이메일(email) 정보도 자동으로 추가되며, 소속될 그룹에 대한 정보가 전달되었을 경우, 그룹에 추가시켜주기도 합니다.\n\n$data = [\n  'displayname' => 'foo',\n  'email' => 'foo@email.com',\n  //...\n];\n\n$newuser = xeuser::create($data);\n\n\n신규 회원의 계정(account) 정보를 같이 등록할 수도 있습니다.\n\n$data = [\n  'displayname' => 'foo',\n  'email' => 'foo@email.com',\n  //...\n]\n\n$data['account'] = [\n  'provider' => 'facebook',\n  'token' => '3difdkwwfdsie...',\n  'id' => 'id of facebook user',\n  'data' => '...'\n]\n\n$newuser = xeuser::create($data);\n\n\n신규회원이 소속될 회원그룹을 지정할 수도 있습니다.\n\n  $data = [\n  'displayname' => 'foo',\n  'email' => 'foo@email.com',\n  'groupid' => [21,23] // 그룹아이디가 21, 23인 그룹에 회원을 소속시킴\n]\n\n$newuser = xeuser::create($data);\n\n\n만약, 유효성검사를 생략하거나 부가 정보(account, email, group)를 등록을 하지 않고, 순수하게 회원 정보만 추가하고 싶다면 xeuser 파사드 대신, userrepository를 사용하십시오.\n\nuserrepository는 xeuser 파사드를 사용하여 로드할 수 있습니다.\n\n// 순수 회원정보만 등록\n$data = [\n  'displayname' => 'foo',\n  'email' => 'foo@email.com',\n  'password' => '...'\n]\n\n$newuser = xeuser::users()->create($data);\n\n\n> userrepository의 create 메소드를 곧바로 사용할 때, password를 암호화하지 않고 바로 저장합니다. 먼저 password 필드를 직접 암호화하십시오.\n\n\n회원정보 수정\n\nxeuser::update 메소드를 사용하면 회원정보를 변경할 수 있습니다. 유효성 검사 및 프로필 이미지 처리, 소속그룹의 변경도 동시에 처리합니다.\n\n$user = xeuser::find(20);\nxeuser::update($user, ['displayname' => 'bar']);\n\n\n회원 삭제\n\nxeuser::leave 메소드를 사용하면 회원을 삭제(탈퇴)할 수 있습니다. 삭제할 회원의 부가정보(account, email)도 같이 삭제됩니다.\n\n$ids = [12,23,34];\nxeuser::leave($ids); // 3명의 회원을 탈퇴시킴\n\n\nuserrepository의 delete 메소드를 사용하여 회원을 삭제할 수도 있습니다. 단, 이 메소드를 사용하면 삭제될 회원의 부가 정보는 함께 삭제되지 않습니다.\n\n$user = xeuser::find(12);\nxeuser::users()->delete($user);\n\n\n회원 계정 관리\n\n계정 조회\n\n회원계정을 조회할 때에는 useraccountrepository를 사용하십시오. useraccountrepository는 xeuser파사드를 사용하여 로드할 수 있습니다.\n\n$useraccountrepository = xeuser::accounts();\n\n\n회원이 소유한 계정 목록을 조회할 수 있습니다.\n\n// 회원 아이디로 계정 정보 조회\n$userid = '123';\n$accounts = xeuser::accounts()->findbyuserid($accountid);\n\n\n위 코드는 아래 코드로 대체할 수도 있습니다.\n\n$user = xeuser::find('123');\n$accounts = $user->accounts;\n\n\nuser의 getaccountbyprovider 메소드를 사용하면 특정 프로바이더(소셜로그인 벤더)의 계정을 조회할 수 있습니다.\n\n$user = xeuser::find('123');\n$facebookaccount = $user->getaccountbyprovider('facebook');\n\n\n좀 더 복잡한 조건으로 계정을 조회하고 싶다면, query메소드를 사용하십시오.\n\n$query = xeuser::accounts()->query();\n$account = $query->where('email', 'foo@facebook.com')->first();\n\n\n계정 생성\n\n회원계정을 생성할 때에는 xeuser파사드를 사용할 수 있습니다. createaccount 메소드를 사용하십시오.\n\n// 기존 회원에 계정정보 추가하기\n$user = xeuser::find('123');\n\n$accountdata = [\n  'email' => 'foo@facebook.com',\n  'accountid' => 'facebookid',\n  'provider' => 'facebook',\n  'token' => '39238432893,\n  'data' => '...'\n];\n\n$newaccount = xeuser::createaccount($user, $accountdata);\n\n\n계정 수정\n\n회원계정을 수정할 때에도 xeuser파사드를 사용할 수 있습니다. updateaccount 메소드를 사용하십시오.\n\n$user = xeuser::find('123');\n$facebookaccount = $user->getaccountbyprovider('facebook');\n\nxeuser::updateaccount($facebookaccount, [token => '2197548']);\n\n\n계정 삭제\n\n회원계정을 수정할 때에는 xeuser::deleteaccount 메소드를 사용하십시오.\n\nxeuser::deleteaccount($facebookaccount);\n\n\n회원 이메일 관리\n\n이메일 조회\n\n회원계정을 조회할 때에는 useremailrepository를 사용하십시오. useremailrepository는 xeuser파사드를 사용하여 로드할 수 있습니다.\n\n$useremailrepository = xeuser::emails();\n\n\n이메일 주소로 이메일 정보를 조회할 수 있습니다.\n\n$email = xeuser::emails()->findbyaddress('foo@bar.com');\n\n\n특정 회원이 소유한 모든 이메일을 조회할 수 있습니다.\n\n$userid = '123';\n$emails = xeuser::emails()->findbyuserid($userid);\n\n\n좀 더 복잡한 조건으로 이메일을 조회하고 싶다면, query메소드를 사용하십시오.\n\n// 'foo@'로 시작되는 이메일 검색\n$query = xeuser::emails()->query();\n$emails = $query->where('address', 'like', 'foo@%')->get();\n\n\n승인대기 이메일을 조회할 때에는 useremailrepository 대신 'pendingemailrepository'를 사용하십시오. pendingemailrepository는 xeuser파사드를 사용하여 로드할 수 있습니다. useremailrepository와 동일하게 사용할 수 있습니다.\n\n$useremailrepository = xeuser::pendingemails();\n\n\n이메일 생성\n\n회원 이메일을 생성할 때에는 xeuser파사드의 createemail 메소드를 사용하십시오.\n\n$user = xeuser::find('123');\n\n$emaildata = [\n  'address' => 'foo@bar.com'\n];\n\n$email = xeuser::createemail($user, $emaildata, true);\n\n\ncreateemail 메소드의 마지막 메소드는 생성하는 이메일의 승인 여부를 지정합니다. true이면 승인된 이메일로 저장되며, false이면 승인대기 이메일로 저장됩니다.\n\n이메일 수정\n\n기등록 된 이메일(또는 승인대기 이메일)을 수정할 수 있습니다. xeuser::updateemail을 사용하십시오.\n\n$email->address = 'foo@bar.com';\nxeuser::updateemail($email);\n\n// or\n\nxeuser::updateemail($email, ['address'=>'foo@bar.com']);\n\n\n이메일 삭제\n\n이메일(또는 승인대기 이메일)을 삭제할 수 있습니다. xeuser::deleteemail을 사용하십시오.\n\nxeuser::deleteemail($email);\n\n\n회원 그룹 관리\n\n그룹 조회\n\n...\n\n그룹 생성\n\n// 그룹정보 생성\n$groupdata = [\n  'name' => '정회원',\n  'description' => '기본회원',\n];\n\n$group = xeuser::creategroup($groupdata);\n\n\n그룹 수정\n\nxeuser::updategroup($group, ['name' => '기본회원']);\n\n\n그룹 삭제\n\nxeuser::deletegroup($group);\n\n\n# 인증\n등록된 회원은 사이트에 로그인할 수 있습니다. 사이트에 로그인할 때 xe는 입력된 회원정보에 대한 인증(authentication) 과정을 거친후, 세션(session)에 로그인 한 회원의 정보를 등록합니다. 로그아웃을 할 때에는 반대로 세션에 등록했던 회원 정보를 삭제합니다.\n\nauth 파사드를 사용하면 현재 접속한 회원의 로그인, 로그아웃을 비롯한 인증과 관련된 기능을 수행할 수 있습니다.\n\n현재 로그인한 사용자 조회\n\n현재 로그인한 사용자를 조회할 때에는 user 메소드를 사용하십시오.\n\n$user = auth::user();\n\n\n또는 request 인스턴스를 사용할 수도 있습니다.\n\n$user = request()->user();\n\n\n로그인한 사용자의 아이디(id)만 조회할 수도 있습니다.\n\n$loggeduserid = auth::id();\n\n\n로그인 상태 조회\n\ncheck 메소드를 사용하면 접속 중인 사용자가 로그인을 한 상태인지 조회할 수 있습니다.\n\nif (auth::check()) {\n    // the user is logged in...\n}\n\n\n로그인\n\n등록된 회원의 인스턴스를 획득하고 있다면, login 메소드를 사용하여 해당 회원을 로그인시킬 수 있습니다.\n\n$user = xeuser::find('123');\n\nauth::login($user);\n\n\n해당 회원이 현재와 동일한 환경(단말기의 브라우저)에서 다음에 다시 사이트에 접속했을 때, 자동으로 로그인 처리를 하는 '로그인 유지' 기능을 사용할 수 있습니다. login 메소드의 두번째 파라메터로 true를 사용하면, 해당 회원에게 '로그인 유지' 기능을 활성화시킵니다.\n\n// login and \"remember\" the given user...\nauth::login($user, true);\n\n\n로그인 시도\n\nlogin 메소드는 회원정보의 인증 과정을 거치지 않고, 회원 인스턴스를 통해 바로 로그인 처리를 합니다. 만약 회원의 입력한 정보를 인증한 후 로그인까지 시도하고 싶을 때에는 attempt메소드를 사용하십시오.\n\nattempt 메소드를 실행하면 입력된 정보가 등록된 회원정보와 일치하는지 검사합니다. 회원정보가 일치한다면 해당 회원을 로그인시킵니다.\n\nif (auth::attempt(['email' => $email, 'password' => $password])) {\n    // authentication passed...\n    return redirect()->intended('dashboard');\n}\n\n\n만약 '로그인 유지' 기능을 사용하고싶을 때에는 두번째 파라메터로 true를 전달하십시오.\n\nif (auth::attempt(['email' => $email, 'password' => $password], true)) {\n    // the user is being remembered...\n}\n\n\n로그아웃\n\nlogout 메소드를 사용하십시오.\n\nauth::logout();",charsets:{cjk:!0}},{title:"메뉴/모듈",frontmatter:{},regularPath:"/08.%20%EC%84%9C%EB%B9%84%EC%8A%A4/service-menu_module.html",relativePath:"08. 서비스/service-menu_module.md",key:"v-6b3f43f6",path:"/08.%20%EC%84%9C%EB%B9%84%EC%8A%A4/service-menu_module.html",headersStr:null,content:"# 메뉴/모듈",contentLowercase:"# 메뉴/모듈",charsets:{cjk:!0}},{title:"모바일",frontmatter:{},regularPath:"/08.%20%EC%84%9C%EB%B9%84%EC%8A%A4/service-mobile.html",relativePath:"08. 서비스/service-mobile.md",key:"v-72184f33",path:"/08.%20%EC%84%9C%EB%B9%84%EC%8A%A4/service-mobile.html",headers:[{level:2,title:"모바일\\(mobile\\)",slug:"모바일-mobile",charIndex:8},{level:3,title:"기기 타입 강제 지정",slug:"기기-타입-강제-지정",charIndex:133},{level:3,title:"현재 접근한 기기의 타입 검사",slug:"현재-접근한-기기의-타입-검사",charIndex:580}],headersStr:"모바일\\(mobile\\) 기기 타입 강제 지정 현재 접근한 기기의 타입 검사",content:"# 모바일\n# 모바일(mobile)\n플러그인을 개발할 때, 현재 접근한 기기가 데스크탑인지 모바일 기기인지 알아야 할 때가 있습니다. XE는 자체적으로 접근한 기기의 타입을 판단하고, 이를 사용할 수 있도록 인터페이스를 제공합니다.\n\n# 기기 타입 강제 지정\nXE는 우선 브라우저의 user-agent 정보를 바탕으로 현재 접근한 기기의 타입이 데스크탑인지 모바일인지 검사합니다.\n\n만약 사용자가 접근한 기기의 타입을 강제로 지정하고 싶다면, 요청 URL의 쿼리스트링을 사용해 지정할 수 있습니다. 요청하는 URL에 ?_m=1을 추가하면 XE가 현재 접속한 기기를 모바일 기기로 판단하도록 강제 지정할 수 있습니다. 반대로 ?_m=0을 추가하면 데스크탑 기기로 판단하도록 강제 지정됩니다. 강제로 지정한 정보는 쿠키에 추가되어 차후 요청시에도 당분간 유지됩니다.\n\n코드상에서 기기 타입을 지정하고 싶다면 직접 쿠키를 저장하면 됩니다. 쿠키 이름을 mobile에 값을 '0' 또는 '1'로 저장하십시오.\n\n// 현재 접속 기기를 120분간 모바일 기기로 강제 지정,\n\\Cookie::queue('mobile', '1', 120);\n\n\n# 현재 접근한 기기의 타입 검사\nXE는 현재 접근한 기기의 타입은 Request 인스턴스를 통해 알 수 있습니다.\n\n$isMobile = request()->isMobile();\n\n\nisMobile 메소드를 사용하면, 현재 설정된 기기의 타입이 모바일인지 검사할 수 있습니다. 만약 접근한 기기 타입이 강제로 지정돼 있다면, 강제로 지정된 타입을 반환합니다.\n\n강제로 지정된 타입과 관계없이 순수하게 브라우저의 user-agent 정보만으로 판단된 기기 타입을 알고싶다면 대신 isMobileByAgent 메소드를 사용하십시오. (또는 isMobile(true)을 사용하십시오. 같은 응답을 합니다.)\n\n$isMobile = request()->isMobileByAgent();",contentLowercase:"# 모바일\n# 모바일(mobile)\n플러그인을 개발할 때, 현재 접근한 기기가 데스크탑인지 모바일 기기인지 알아야 할 때가 있습니다. xe는 자체적으로 접근한 기기의 타입을 판단하고, 이를 사용할 수 있도록 인터페이스를 제공합니다.\n\n# 기기 타입 강제 지정\nxe는 우선 브라우저의 user-agent 정보를 바탕으로 현재 접근한 기기의 타입이 데스크탑인지 모바일인지 검사합니다.\n\n만약 사용자가 접근한 기기의 타입을 강제로 지정하고 싶다면, 요청 url의 쿼리스트링을 사용해 지정할 수 있습니다. 요청하는 url에 ?_m=1을 추가하면 xe가 현재 접속한 기기를 모바일 기기로 판단하도록 강제 지정할 수 있습니다. 반대로 ?_m=0을 추가하면 데스크탑 기기로 판단하도록 강제 지정됩니다. 강제로 지정한 정보는 쿠키에 추가되어 차후 요청시에도 당분간 유지됩니다.\n\n코드상에서 기기 타입을 지정하고 싶다면 직접 쿠키를 저장하면 됩니다. 쿠키 이름을 mobile에 값을 '0' 또는 '1'로 저장하십시오.\n\n// 현재 접속 기기를 120분간 모바일 기기로 강제 지정,\n\\cookie::queue('mobile', '1', 120);\n\n\n# 현재 접근한 기기의 타입 검사\nxe는 현재 접근한 기기의 타입은 request 인스턴스를 통해 알 수 있습니다.\n\n$ismobile = request()->ismobile();\n\n\nismobile 메소드를 사용하면, 현재 설정된 기기의 타입이 모바일인지 검사할 수 있습니다. 만약 접근한 기기 타입이 강제로 지정돼 있다면, 강제로 지정된 타입을 반환합니다.\n\n강제로 지정된 타입과 관계없이 순수하게 브라우저의 user-agent 정보만으로 판단된 기기 타입을 알고싶다면 대신 ismobilebyagent 메소드를 사용하십시오. (또는 ismobile(true)을 사용하십시오. 같은 응답을 합니다.)\n\n$ismobile = request()->ismobilebyagent();",charsets:{cjk:!0}},{title:"권한",frontmatter:{},regularPath:"/08.%20%EC%84%9C%EB%B9%84%EC%8A%A4/service-permission.html",relativePath:"08. 서비스/service-permission.md",key:"v-1f51f799",path:"/08.%20%EC%84%9C%EB%B9%84%EC%8A%A4/service-permission.html",headers:[{level:2,title:"권한\\(permission\\)",slug:"권한-permission",charIndex:7},{level:3,title:"권한 검사 유형",slug:"권한-검사-유형",charIndex:143},{level:3,title:"등록",slug:"등록",charIndex:540},{level:3,title:"폼",slug:"폼",charIndex:1082},{level:3,title:"권한 등록을 위한 편의제공",slug:"권한-등록을-위한-편의제공",charIndex:1542},{level:3,title:"권한검사",slug:"권한검사",charIndex:42}],headersStr:"권한\\(permission\\) 권한 검사 유형 등록 폼 권한 등록을 위한 편의제공 권한검사",content:"# 권한\n# 권한(permission)\nXE는 관리자 시스템을 통한 동적인 권한검사를 위해 laravel 의 Authorization [https://laravel.com/docs/5.1/authorization] 기능을 확장하여 제공하고 있습니다.\n\n# 권한 검사 유형\npermission 에서는 권한을 검사하기 위해 5가지 유형의 데이터를 가지고 있습니다.\n\n * RATING_TYPE: 사용자의 등급을 나타냅니다. 등급은 GUEST, MEMBER, MANAGER, SUPER 로 구분합니다.\n * GROUP_TYPE: 권한을 가지는 그룹들을 지정합니다.\n * USER_TYPE: 권한을 가지는 특정 사용자들을 지정합니다.\n * EXCEPT_TYPE: 권한을 가지지 않는 특정 사용자들을 지정합니다.\n * VGROUP_TYPE: 권한을 가지는 가상 그룹을 지정합니다.\n\n위 다섯가지 권한중 EXCEPT_TYPE 이 가장 우선됩니다. 사용자가 EXCEPT_TYPE 에 속하지 않는경우 나머지 중 단 하나의 유형에만 속하여도 권한을 가지는 것으로 판단합니다.\n\n# 등록\n권한을 등록할때는 Grant 객체를 이용합니다. Grant 객체에 검사하고자 하는 특정 행위를 나타내는 키워드와 각 유형에 맞는 값들을 지정하고, 권한을 구분하는 대상의 이름과 함께 등록하게 됩니다.\n\n$grant = new Grant();\n$grant->set('show', Rating::MEMBER);\n$grant->set('create', Grant::GROUP_TYPE, ['{groupId}']);\n$grant->set('create', Grant::EXCEPT_TYPE, ['{userId}']);\n\napp('xe.permission')->register('foo.bar', $grant);\n\n\n하나의 행위에 해당하는 다양한 유형의 데이터를 배열을 이용하여 동시에 설정할 수 있습니다.\n\n$grant->set('create', [\n  Grant::RATING_TYPE => Rating::MEMBER,\n  Grant::GROUP_TYPE => ['{groupId}'],\n  Grant::EXCEPT_TYPE => ['{userId}']\n]);\n\n\n# 폼\n위와 같은 데이터를 브라우저를 통해 전달 받기위해 ui object 가 제공됩니다.\n\n<div>\n  {!! uio('permission', $arguments) !!}\n</div>\n\n\n이때 전달되는 인자는 배열로 다음과 같은 구조를 필요로 합니다.\n\narray(\n  'mode' => 'manual', // manual or inherit\n  'grant' => $grant_object? : new Grant(),      // 특정 행위에 해당하는 Grant 객체 등록 값\n  'title' => 'create' // 특정 행위를 나타내는 키워드\n  'groups' => []      // 전체 그룹\n);\n\n\nui object 는 지정된 행위를 나타내는 키워드와 유형을 조합하여 input 의 이름을 제공합니다. 예를 들어 create 라는 행위에 대한 회원등급의 이름은 createRating 이 됩니다.\n\n# 권한 등록을 위한 편의제공\n관리자 페이지로부터 전달되는 권한 정보를 형식에 맞게 정제하고 등록하기에 불편함을 느낄 수 있습니다. 그래서 이런 부분에서 자유로워 질 수 있도록 클래스에 삽입되어지는 PermissionSupport trait 을 제공합니다.\n\nclass SomeController\n{\n  use PermissionSupport;\n\n  public function getSetting()\n  {\n    $args = $this->getPermArguments('foo.bar', ['create', 'show']);\n    ...\n  }\n\n  public function postSetting(Request $request)\n  {\n    $this->permissionRegister($request, 'foo.bar', ['create', 'show']);\n    ...\n  }\n\n  ...\n}\n\n\n# 권한검사\n권한을 검사할때는 laravel 의 Authorization [https://laravel.com/docs/5.1/authorization] 기능을 이용합니다. 첫번째 인자값에 행위에 대한 키워드를 전달하고 두번째 인자에 권한등록시 사용한 이름으로 생성된 Instance 객체를 전달합니다.\n\nif (Gate::denies('create', new Instance('foo.bar'))) {\n  // throw exception\n}",contentLowercase:"# 권한\n# 권한(permission)\nxe는 관리자 시스템을 통한 동적인 권한검사를 위해 laravel 의 authorization [https://laravel.com/docs/5.1/authorization] 기능을 확장하여 제공하고 있습니다.\n\n# 권한 검사 유형\npermission 에서는 권한을 검사하기 위해 5가지 유형의 데이터를 가지고 있습니다.\n\n * rating_type: 사용자의 등급을 나타냅니다. 등급은 guest, member, manager, super 로 구분합니다.\n * group_type: 권한을 가지는 그룹들을 지정합니다.\n * user_type: 권한을 가지는 특정 사용자들을 지정합니다.\n * except_type: 권한을 가지지 않는 특정 사용자들을 지정합니다.\n * vgroup_type: 권한을 가지는 가상 그룹을 지정합니다.\n\n위 다섯가지 권한중 except_type 이 가장 우선됩니다. 사용자가 except_type 에 속하지 않는경우 나머지 중 단 하나의 유형에만 속하여도 권한을 가지는 것으로 판단합니다.\n\n# 등록\n권한을 등록할때는 grant 객체를 이용합니다. grant 객체에 검사하고자 하는 특정 행위를 나타내는 키워드와 각 유형에 맞는 값들을 지정하고, 권한을 구분하는 대상의 이름과 함께 등록하게 됩니다.\n\n$grant = new grant();\n$grant->set('show', rating::member);\n$grant->set('create', grant::group_type, ['{groupid}']);\n$grant->set('create', grant::except_type, ['{userid}']);\n\napp('xe.permission')->register('foo.bar', $grant);\n\n\n하나의 행위에 해당하는 다양한 유형의 데이터를 배열을 이용하여 동시에 설정할 수 있습니다.\n\n$grant->set('create', [\n  grant::rating_type => rating::member,\n  grant::group_type => ['{groupid}'],\n  grant::except_type => ['{userid}']\n]);\n\n\n# 폼\n위와 같은 데이터를 브라우저를 통해 전달 받기위해 ui object 가 제공됩니다.\n\n<div>\n  {!! uio('permission', $arguments) !!}\n</div>\n\n\n이때 전달되는 인자는 배열로 다음과 같은 구조를 필요로 합니다.\n\narray(\n  'mode' => 'manual', // manual or inherit\n  'grant' => $grant_object? : new grant(),      // 특정 행위에 해당하는 grant 객체 등록 값\n  'title' => 'create' // 특정 행위를 나타내는 키워드\n  'groups' => []      // 전체 그룹\n);\n\n\nui object 는 지정된 행위를 나타내는 키워드와 유형을 조합하여 input 의 이름을 제공합니다. 예를 들어 create 라는 행위에 대한 회원등급의 이름은 createrating 이 됩니다.\n\n# 권한 등록을 위한 편의제공\n관리자 페이지로부터 전달되는 권한 정보를 형식에 맞게 정제하고 등록하기에 불편함을 느낄 수 있습니다. 그래서 이런 부분에서 자유로워 질 수 있도록 클래스에 삽입되어지는 permissionsupport trait 을 제공합니다.\n\nclass somecontroller\n{\n  use permissionsupport;\n\n  public function getsetting()\n  {\n    $args = $this->getpermarguments('foo.bar', ['create', 'show']);\n    ...\n  }\n\n  public function postsetting(request $request)\n  {\n    $this->permissionregister($request, 'foo.bar', ['create', 'show']);\n    ...\n  }\n\n  ...\n}\n\n\n# 권한검사\n권한을 검사할때는 laravel 의 authorization [https://laravel.com/docs/5.1/authorization] 기능을 이용합니다. 첫번째 인자값에 행위에 대한 키워드를 전달하고 두번째 인자에 권한등록시 사용한 이름으로 생성된 instance 객체를 전달합니다.\n\nif (gate::denies('create', new instance('foo.bar'))) {\n  // throw exception\n}",charsets:{cjk:!0}},{title:"세션",frontmatter:{},regularPath:"/08.%20%EC%84%9C%EB%B9%84%EC%8A%A4/service-session.html",relativePath:"08. 서비스/service-session.md",key:"v-24f28a45",path:"/08.%20%EC%84%9C%EB%B9%84%EC%8A%A4/service-session.html",headers:[{level:2,title:"세션\\(Session\\)",slug:"세션-session",charIndex:7},{level:3,title:"설정",slug:"설정",charIndex:21},{level:3,title:"세션 사용법",slug:"세션-사용법",charIndex:492},{level:3,title:"임시 데이터",slug:"임시-데이터",charIndex:1309},{level:3,title:"데이터베이스 세션",slug:"데이터베이스-세션",charIndex:1566},{level:3,title:"세션 드라이버",slug:"세션-드라이버",charIndex:349}],headersStr:"세션\\(Session\\) 설정 세션 사용법 임시 데이터 데이터베이스 세션 세션 드라이버",content:"# 세션\n# 세션(Session)\n# 설정\nHTTP 기반의 어플리케이션은 상태를 저장할수 없기 때문에, HTTP 요청들에 관계없이 사용자의 정보를 저장하기위해서 세션이 사용됩니다. XE는 세션을 사용함에 있어 간결하고 통일된 API를 제공합니다. 세션 시스템으로는 Memcached [http://memcached.org], Redis [http://redis.io] 그리고 데이터베이스를 별다른 설정 없이, 동일한 API로 사용할 수 있습니다.\n\n세션의 설정은 config/session.php 파일에 있습니다. 이 파일에는 각각의 옵션에 대한 정리된 문서가 포함되어 있으므로 잘 확인하시기 바랍니다. 기본으로는 file 세션 드라이버가 사용됩니다.\n\n> 참고: 세션을 암호화하여 저장하고자 한다면 encrypt 설정 옵션을 true로 지정하십시오.\n\n\n# 예약어\nXE는 내부적으로 flash라는 세션키를 사용하고 있습니다. 이 이름으로 세션을 추가하지 마시기 바랍니다.\n\n# 세션 사용법\n여러 가지 방법으로 세션을 엑세스할 수 있습니다. HTTP 요청-request의 session 메소드를 사용하는 방법, Session 파사드를 사용하는 방법, 그리고 session 헬퍼함수를 사용할 수 있습니다. 아무런 전달 인자 없이 session 헬퍼함수를 호출할 때에는 전체 세션 객체가 반환됩니다\n\n# 아이템 세션에 저장하기\nSession::put('key', 'value');\n\nsession(['key' => 'value']);\n\n\n# 배열 세션값으로 저장하기\nSession::push('user.teams', 'developers');\n\n\n# 세션에서 특정 아이템 가져오기\n$value = Session::get('key');\n\n$value = session('key');\n\n\n# 특정 아이템을 찾거나 기본값 반환받기\n$value = Session::get('key', 'default');\n\n$value = Session::get('key', function() { return 'default'; });\n\n\n# 아이템 값 가져온 후 삭제하기\n$value = Session::pull('key', 'default');\n\n\n# 세션의 모든 데이터 가져오기\n$data = Session::all();\n\n\n# 세션에 아이템이 존재하는지 확인하기\nif (Session::has('users'))\n{\n    //\n}\n\n\n# 세션에서 특정 아이템 삭제하기\nSession::forget('key');\n\n\n# 세션의 모든 아이템 삭제하기\nSession::flush();\n\n\n# 세션 ID 재생성하기\nSession::regenerate();\n\n\n# 임시 데이터\n때로는 바로 다음번의 요청에서만 사용하기 위해서 세션에 아이템을 저장할 수 있습니다. 바로 Session::flash 메소드를 사용하는 것입니다:\n\nSession::flash('key', 'value');\n\n\n# 현재의 임시 데이터를 다른 요청에서 사용하기 위해서 다시 임시 저장하기\nSession::reflash();\n\n\n# 임시 데이터의 일부 값만 다시 임시 저장하기\nSession::keep(['username', 'email']);\n\n\n# 데이터베이스 세션\ndatabase 세션 드라이버를 사용하는 경우 세션 아이템들이 저장될 테이블을 생성해야 합니다. 다음의 Schema 예제를 통해서 테이블을 생성할 수 있습니다.\n\nSchema::create('sessions', function($table)\n{\n    $table->string('id')->unique();\n    $table->text('payload');\n    $table->integer('last_activity');\n});\n\n\nsession:table 아티즌 명령어를 사용하면 이 마이그레이션을 생성할 수 있습니다!\n\nphp artisan session:table\n\ncomposer dump-autoload\n\nphp artisan migrate\n\n\n# 세션 드라이버\n세션 “드라이버”는 각각의 요청에 따라 세션이 어디에 저장될지를 결정합니다. XE는 별다른 설정 없이 다양한 드라이버를 사용할 수 있습니다:\n\n * file - 세션이 storage/framework/sessions 폴더에 저장됩니다.\n * cookie - 암호화된 쿠키를 사용하여 안전하게 세션을 저장할 것입니다.\n * database - 세션은 어플리케이션에 의해서 데이터베이스에 저장됩니다.\n * memcached / redis - 세션은 캐시 기반의 드라이버들에 의해 빠르게 저장됩니다.\n * array - 세션은 간단한 PHP 배열에 저장되지만 현재 요청에 한해 일시적으로 저장됩니다.\n\nRedis 세션을 사용하기 위해서는 컴포저를 통해서 predis/predis (~1.0) 패키지를 설치해야만 합니다.\n\n> 주의: 배열 드라이버의 경우에는 실제로 세션은 유지되지 않기 때문에 unit tests를 수행하는 데에만 사용하시기 바랍니다.",contentLowercase:"# 세션\n# 세션(session)\n# 설정\nhttp 기반의 어플리케이션은 상태를 저장할수 없기 때문에, http 요청들에 관계없이 사용자의 정보를 저장하기위해서 세션이 사용됩니다. xe는 세션을 사용함에 있어 간결하고 통일된 api를 제공합니다. 세션 시스템으로는 memcached [http://memcached.org], redis [http://redis.io] 그리고 데이터베이스를 별다른 설정 없이, 동일한 api로 사용할 수 있습니다.\n\n세션의 설정은 config/session.php 파일에 있습니다. 이 파일에는 각각의 옵션에 대한 정리된 문서가 포함되어 있으므로 잘 확인하시기 바랍니다. 기본으로는 file 세션 드라이버가 사용됩니다.\n\n> 참고: 세션을 암호화하여 저장하고자 한다면 encrypt 설정 옵션을 true로 지정하십시오.\n\n\n# 예약어\nxe는 내부적으로 flash라는 세션키를 사용하고 있습니다. 이 이름으로 세션을 추가하지 마시기 바랍니다.\n\n# 세션 사용법\n여러 가지 방법으로 세션을 엑세스할 수 있습니다. http 요청-request의 session 메소드를 사용하는 방법, session 파사드를 사용하는 방법, 그리고 session 헬퍼함수를 사용할 수 있습니다. 아무런 전달 인자 없이 session 헬퍼함수를 호출할 때에는 전체 세션 객체가 반환됩니다\n\n# 아이템 세션에 저장하기\nsession::put('key', 'value');\n\nsession(['key' => 'value']);\n\n\n# 배열 세션값으로 저장하기\nsession::push('user.teams', 'developers');\n\n\n# 세션에서 특정 아이템 가져오기\n$value = session::get('key');\n\n$value = session('key');\n\n\n# 특정 아이템을 찾거나 기본값 반환받기\n$value = session::get('key', 'default');\n\n$value = session::get('key', function() { return 'default'; });\n\n\n# 아이템 값 가져온 후 삭제하기\n$value = session::pull('key', 'default');\n\n\n# 세션의 모든 데이터 가져오기\n$data = session::all();\n\n\n# 세션에 아이템이 존재하는지 확인하기\nif (session::has('users'))\n{\n    //\n}\n\n\n# 세션에서 특정 아이템 삭제하기\nsession::forget('key');\n\n\n# 세션의 모든 아이템 삭제하기\nsession::flush();\n\n\n# 세션 id 재생성하기\nsession::regenerate();\n\n\n# 임시 데이터\n때로는 바로 다음번의 요청에서만 사용하기 위해서 세션에 아이템을 저장할 수 있습니다. 바로 session::flash 메소드를 사용하는 것입니다:\n\nsession::flash('key', 'value');\n\n\n# 현재의 임시 데이터를 다른 요청에서 사용하기 위해서 다시 임시 저장하기\nsession::reflash();\n\n\n# 임시 데이터의 일부 값만 다시 임시 저장하기\nsession::keep(['username', 'email']);\n\n\n# 데이터베이스 세션\ndatabase 세션 드라이버를 사용하는 경우 세션 아이템들이 저장될 테이블을 생성해야 합니다. 다음의 schema 예제를 통해서 테이블을 생성할 수 있습니다.\n\nschema::create('sessions', function($table)\n{\n    $table->string('id')->unique();\n    $table->text('payload');\n    $table->integer('last_activity');\n});\n\n\nsession:table 아티즌 명령어를 사용하면 이 마이그레이션을 생성할 수 있습니다!\n\nphp artisan session:table\n\ncomposer dump-autoload\n\nphp artisan migrate\n\n\n# 세션 드라이버\n세션 “드라이버”는 각각의 요청에 따라 세션이 어디에 저장될지를 결정합니다. xe는 별다른 설정 없이 다양한 드라이버를 사용할 수 있습니다:\n\n * file - 세션이 storage/framework/sessions 폴더에 저장됩니다.\n * cookie - 암호화된 쿠키를 사용하여 안전하게 세션을 저장할 것입니다.\n * database - 세션은 어플리케이션에 의해서 데이터베이스에 저장됩니다.\n * memcached / redis - 세션은 캐시 기반의 드라이버들에 의해 빠르게 저장됩니다.\n * array - 세션은 간단한 php 배열에 저장되지만 현재 요청에 한해 일시적으로 저장됩니다.\n\nredis 세션을 사용하기 위해서는 컴포저를 통해서 predis/predis (~1.0) 패키지를 설치해야만 합니다.\n\n> 주의: 배열 드라이버의 경우에는 실제로 세션은 유지되지 않기 때문에 unit tests를 수행하는 데에만 사용하시기 바랍니다.",charsets:{cjk:!0}},{title:"테마",frontmatter:{},regularPath:"/08.%20%EC%84%9C%EB%B9%84%EC%8A%A4/service-themes.html",relativePath:"08. 서비스/service-themes.md",key:"v-0a30c23a",path:"/08.%20%EC%84%9C%EB%B9%84%EC%8A%A4/service-themes.html",headersStr:null,content:"# 테마",contentLowercase:"# 테마",charsets:{cjk:!0}},{title:"휴지통",frontmatter:{},regularPath:"/08.%20%EC%84%9C%EB%B9%84%EC%8A%A4/service-trash.html",relativePath:"08. 서비스/service-trash.md",key:"v-10396345",path:"/08.%20%EC%84%9C%EB%B9%84%EC%8A%A4/service-trash.html",headers:[{level:2,title:"휴지통\\(trash\\)",slug:"휴지통-trash",charIndex:8},{level:3,title:"기본 사용법",slug:"기본-사용법",charIndex:249},{level:3,title:"명령어 사용",slug:"명령어-사용",charIndex:378}],headersStr:"휴지통\\(trash\\) 기본 사용법 명령어 사용",content:"# 휴지통\n# 휴지통(trash)\nTrash는 서비스 또는 서드파티에서 휴지통(bin)을 등록받아 처리합니다. BinInterface 를 따르는 구현체를 구현하고 TrashManager를 통해 등록하면 휴지통 비우는 요청이 있을 때 관련된 휴지통을 찾아 처리합니다.\n\nTrash 서비스는 휴지통을 관리하며 휴지통에 포함된 아이템을 직접 컨트롤하지 않습니다. 커맨드를 통해 사용가능한 휴지통을 확인하고 휴지통 비우기 기능을 제공할 뿐입니다.\n\n# 기본 사용법\nXeTrash 파사드로 TrashManager를 사용합니다.\n\n> 휴지통의 기능은 휴지통에 포함된 요약 정보와 그것을 비우는 역할이므로 코드 보다는 명령어 기준으로 설명합니다. 아래 나열된 사용법은 터미널에서 입력하는 명령어 사용 방법입니다.\n\n\n# 휴지통 등록\n휴지통 구현체를 TrashManager를 통해 등록합니다. artisan 명령어로 휴지통을 제어하기 위해서 휴지통을 등록해야하 합니다.\n\nXeTrash::register(NAME_SPACE\\CLASS_NAME::class);\n\n\n# 요약 정보 확인\n$bins = XeTrash::gets();\nforeach ($bins as $bin) {\n    echo $bin::summary();\n}\n\n\n# 전체 휴지통 비우기\nXeTrash::clean();\n\n\n# 명령어 사용\n터미널에서 아래와 같이 명령어를 실행합니다.\n\n# 전체 휴지통 요약 정보\n$ php artisan trash\n\n\n# 게시판 휴지통 정보 보기\n$ php artisan trash board\n\n\n# 댓글, 게시판의 요약 정보\n한개 이상의 휴지통 요약 정보를 확인하고자 할 경우에는 콤마(,)로 구분해서 입력합니다.\n\n$ php artisan trash board,comment\n\n\n# 전체 휴지통 비우기\n$ php artisan trash:clean\n\n\n# 게시판 휴지통 비우기\n$ php artisan trash:clean board\n\n\n# 댓글, 게시판 비우기\n$ php artisan trash:clean board,comment",contentLowercase:"# 휴지통\n# 휴지통(trash)\ntrash는 서비스 또는 서드파티에서 휴지통(bin)을 등록받아 처리합니다. bininterface 를 따르는 구현체를 구현하고 trashmanager를 통해 등록하면 휴지통 비우는 요청이 있을 때 관련된 휴지통을 찾아 처리합니다.\n\ntrash 서비스는 휴지통을 관리하며 휴지통에 포함된 아이템을 직접 컨트롤하지 않습니다. 커맨드를 통해 사용가능한 휴지통을 확인하고 휴지통 비우기 기능을 제공할 뿐입니다.\n\n# 기본 사용법\nxetrash 파사드로 trashmanager를 사용합니다.\n\n> 휴지통의 기능은 휴지통에 포함된 요약 정보와 그것을 비우는 역할이므로 코드 보다는 명령어 기준으로 설명합니다. 아래 나열된 사용법은 터미널에서 입력하는 명령어 사용 방법입니다.\n\n\n# 휴지통 등록\n휴지통 구현체를 trashmanager를 통해 등록합니다. artisan 명령어로 휴지통을 제어하기 위해서 휴지통을 등록해야하 합니다.\n\nxetrash::register(name_space\\class_name::class);\n\n\n# 요약 정보 확인\n$bins = xetrash::gets();\nforeach ($bins as $bin) {\n    echo $bin::summary();\n}\n\n\n# 전체 휴지통 비우기\nxetrash::clean();\n\n\n# 명령어 사용\n터미널에서 아래와 같이 명령어를 실행합니다.\n\n# 전체 휴지통 요약 정보\n$ php artisan trash\n\n\n# 게시판 휴지통 정보 보기\n$ php artisan trash board\n\n\n# 댓글, 게시판의 요약 정보\n한개 이상의 휴지통 요약 정보를 확인하고자 할 경우에는 콤마(,)로 구분해서 입력합니다.\n\n$ php artisan trash board,comment\n\n\n# 전체 휴지통 비우기\n$ php artisan trash:clean\n\n\n# 게시판 휴지통 비우기\n$ php artisan trash:clean board\n\n\n# 댓글, 게시판 비우기\n$ php artisan trash:clean board,comment",charsets:{cjk:!0}},{title:"UI오브젝트/폼빌더",frontmatter:{},regularPath:"/08.%20%EC%84%9C%EB%B9%84%EC%8A%A4/service-uiobject_form.html",relativePath:"08. 서비스/service-uiobject_form.md",key:"v-7e466545",path:"/08.%20%EC%84%9C%EB%B9%84%EC%8A%A4/service-uiobject_form.html",headers:[{level:2,title:"UI오브젝트/폼빌더",slug:"ui오브젝트-폼빌더-2",charIndex:2},{level:3,title:"기본 사용법",slug:"기본-사용법",charIndex:221},{level:3,title:"기본 제공되는 UI오브젝트",slug:"기본-제공되는-ui오브젝트",charIndex:1018},{level:3,title:"폼 빌더\\(폼 UI오브젝트\\)",slug:"폼-빌더-폼-ui오브젝트",charIndex:3658}],headersStr:"UI오브젝트/폼빌더 기본 사용법 기본 제공되는 UI오브젝트 폼 빌더\\(폼 UI오브젝트\\)",content:"# UI오브젝트/폼빌더\n# UI오브젝트/폼빌더\nXE에서는 화면에 자주 출력되는 UI 요소들이 있습니다. 텍스트 입력 필드나 셀렉트 박스(select)와 같은 기본적인 폼 요소들이 있고, 테마 선택기나 메뉴 선택기, 또는 권한 설정 UI와 같이 XE에서만 사용되는 특별한 요소들도 있습니다. UI오브젝트는 이렇게 자주 사용되는 UI 요소를 개발자들이 쉽게 출력할 수 있는 방법을 제공합니다.\n\n# 기본 사용법\nuio() 함수를 사용하여 UI오브젝트를 출력할 수 있습니다.\n\n만약 한줄 텍스트 폼 필드를 출력하려면 아래와 같이 작성할 수 있습니다.\n\n// in blade template file\n{{ uio('formText', \n      ['label'=>'전화번호', \n       'name'=>'phone', \n       'id'=>'inputPhone', \n       'description'=> '휴대폰 사용하여 입력하세요', \n       'value'=>'010-000-0000'\n]) }}\n\n\n위 코드는 실제로 아래와 같이 변환되어 출력됩니다.\n\n<div class=\"form-group\">\n  <label for=\"inputPhone\">전화번호</label>\n  <input type=\"text\" class=\"form-control\" \n         id=\"inputPhone\"\n         name=\"phone\" value=\"010-000-0000\">\n   <p class=\"help-block\">휴대폰 사용하여 입력하세요</p>\n</div>\n\n\nuio 함수\n\nuio 함수의 원형입니다.\n\nuio($id, $args = [], $callback = null)\n\n\n첫번째 파라미터 $id는 UI오브젝트의 아이디(또는 별칭)입니다.\n\n두번째 파라미터 $args는 UI오브젝트를 출력하기 위해 전달할 정보를 담은 배열입니다. 각 UI오브젝트마다 전달하는 정보의 항목은 상이합니다.\n\n세번째 파라미터 $callback를 사용하면 UI오브젝트가 출력하는 html을 커스터마이징할 수 있습니다.\n\n# 기본 제공되는 UI오브젝트\nXE는 아래 목록과 같이 UI오브젝트를 기본으로 제공하고 있습니다.\n\n별칭설명formText<input type=\"text\">를 출력formPassword<input type=\"password\">를 출력formTextarea<textarea>를 출력formSelect<select>를 출력, 사용자로부터 단일 선택을 받을 때 사용하십시오.formCheckbox<input type=\"checkbox\">를 출력 사용자로부터 다중 선택을 받을 때 사용하십시오.formFile<input type=\"file\"> 출력, 파일을 업로드 받을 때 사용하십시오. 이 UI오브젝트는 jQueryFileUpload [https://blueimp.github.io/jQuery-File-Upload/]를 사용합니다.formImageformFile과 같이 파일 업로드를 출력합니다. 하지만 이 UI오브젝트를 사용하면 사용자가 선택한 이미지 파일을 미리보기할 수 있습니다.formMenuXE에 등록된 메뉴 목록을 <select> 형식으로 출력합니다.formLangText (=langText)formText와 같이 한줄 텍스트 박스를 출력합니다. 하지만 이 UI오브젝트는 다국어를 입력받을 수 있습니다.formLangTextarea (=langTextArea)여러줄의 다국어를 출력합니다.permission권한설정 UI를 출력합니다.themeSelect테마 선택 UI를 출력합니다.captcha캡챠 입력 UI를 출력합니다.이 UI오브젝트들 이외에 여러 플러그인이 등록한 UI오브젝트를 사용할 수도 있습니다.\n\n# UI오브젝트 두번째 파라미터 사용 예제\nformText, formLangText\n\n$args = [\n    'label'=>'전화번호', \n    'name'=>'phone', \n    'id'=>'inputPhone', \n    'description'=> '휴대폰 사용하여 입력하세요', \n    'value'=>'010-000-0000'\n]\n\n\nformPassword\n\n$args = [\n    'label'=>'비밀번호', \n    'name'=>'password', \n    'id'=>'password', \n    'description'=> '영문 + 숫자 조합 8자리 이상 입력하세요.', \n]\n\n\nformTextarea, formLangTextarea\n\n$args = [\n    'label'=>'Copyright', \n    'name'=>'copyright', \n    'id'=>'footer_copyright', \n    'description'=> '푸터하단 문구를 입력하세요.', \n]\n\n\nformSelect\n\n$args = [\n    'label'=>'Colorset', \n    'name'=>'layout_colorset', \n    'id'=>'layout_colorset', \n    'class'=>'layout_colorset',\n    'description'=> '색상을 선택하세요.', \n    'options' => [\n        'blue' => '파랑색',\n        'red' => '붉은색',\n        'green' => '초록색'\n    ]\n]\n\n\noptions는 3가지의 형태로 사용할 수 있습니다.\n\n'options' => [\n    'blue' => '파랑색',\n    'red' => '붉은색',\n    'green' => '초록색'\n]\n\n\n//key의 값이 value의 값과 같음\n'options' => [\n    'blue',\n    'red',\n    'green'\n]\n\n\n//\n'options' => [\n    ['text' => '파랑색', value => 'blue', selected => true],\n    ['text' => '붉은색', value => 'red'],\n    ['text' => '초록색', value => 'green']\n]\n\n\nformCheckbox\n\n$args = [\n    'label'=>'취미',\n    'name'=>'hobby',\n    'id'=>'hobby',\n    'class'=>'hobby',\n    'description'=> '취미를 선택하세요.',\n    'options' => [\n        'basketball' => '농구',\n        'baseball' => '야구',\n        'football' => '축구'\n    ]\n]\n\n\noptions는 checkboxes라는 프로퍼티명으로도 사용가능하며 formSelect와 같이 3가지의 형태로 사용할 수 있습니다.\n\n'options' => [\n    'basketball' => '농구',\n    'baseball' => '야구',\n    'football' => '축구'\n]\n\n\n'options' => [\n    'basketball',\n    'baseball',\n    'football'\n]\n\n\n'options' => [\n    ['text' => '농구', value => 'basketball', checked => true],\n    ['text' => '야구', value => 'baseball'],\n    ['text' => '축구', value => 'football']\n]\n\n\nformMenu\n\n$args = [\n    'label'=>'메인 메뉴',   \n]\n\n\n# 폼 빌더(폼 UI오브젝트)\n폼은 웹페이지에서 사용자에게 입력을 받기 위해 매우 빈번히 사용됩니다. 특히 테마나 위젯, 스킨과 같은 컴포넌트는 사이트 관리자에게 폼으로 구성되어 있는 설정 페이지를 제공하므로 개발자가 설정 페이지를 작성해주어야 합니다. 이런 개발자의 수고를 줄이기 위해 UI오브젝트 중에는 폼 작성을 편하게 할 수 있도록 도와주는 UI오브젝트들이 있습니다.\n\n# 폼 필드 UI오브젝트\n폼은 text, textarea, checkbox와 같은 다양한 '폼 필드'들로 구성됩니다. UI오브젝트 중 별칭(alias)이 form* 형식인 UI오브젝트들이 바로 '폼 필드 UI오브젝트'입니다. 폼 필드 UI오브젝트를 사용하면 손쉽게 폼 필드를 출력할 수 있습니다.\n\n# 폼 UI오브젝트\n또, UI오브젝트 중에 별칭(alias)이 form인 UI오브젝트가 있는데, 이 UI오브젝트는 조금 특별합니다. 이 UI오브젝트는 하나의 완성된 폼을 출력합니다. 물론, 폼에 대한 기본정보(action, method 등)와 폼을 구성하는 필드의 목록은 파라미터로 입력받습니다.\n\n폼 UI오브젝트도 다른 UI오브젝트와 같이 uio 함수로 사용할 수 있습니다.\n\n{{ uio('form', $formData); }}\n\n\n두번째 파라미터인 $formData는 아래와 같은 형식을 가집니다.\n\n$formData = [\n  'fields' => [\n    'title' => [\n        '_type' => 'text',\n        '_section' => '섹션1',\n        'label' => '제목',\n        'placeholder' => '제목을 입력하세요.',\n    ],\n    'content' => [\n        '_type' => 'textarea',\n        '_section' => '섹션1',\n        'label' => '내용',\n        'placeholder' => '내용을 입력하세요.',\n    ],\n  ],\n  'value' => [\n    'title' => 'foo..',\n    'content' => 'bar..'\n  ],\n  'action' => '/',\n  'method' => 'POST',\n];\n\n\n위 코드의 출력은 아래와 같습니다.\n\n<form method=\"POST\" enctype=\"multipart/form-data\" action=\"/\">\n    <div class=\"panel form-section-섹션1\">\n        <div class=\"panel-heading\">\n            <div class=\"pull-left\"><h3>섹션1</h3></div>\n        </div>\n        <div class=\"panel-body\">\n            <div class=\"row\">\n                <div class=\"col-md-6 form-col-title\">\n                    <div class=\"form-group\">\n                        <label for=\"\">제목</label>\n                        <input type=\"text\" class=\"form-control\" id=\"\" placeholder=\"제목을 입력하세요.\" name=\"title\" value=\"foo..\">\n                        <p class=\"help-block\"></p>\n                    </div>\n                </div>\n                <div class=\"col-md-6 form-col-content\">\n                    <div class=\"form-group\">\n                        <label for=\"\">내용</label>\n                        <textarea class=\"form-control\" rows=\"3\" placeholder=\"내용을 입력하세요.\" name=\"content\">bar..</textarea>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</form>\n\n\n두번째 파라미터로 전달한 배열은 다음 항목을 제공해야 합니다.\n\nfields\n\n폼이 포함하고 있는 필드들의 목록입니다. 이 배열의 아이템 하나는 폼 필드 하나의 정보를 나타냅니다. 아이템의 키는 폼필드의 name 애트리뷰트로 사용됩니다.(위의 예에서는 title, content에 해당)\n\n또 아이템 하나의 정보에서 _type, _section은 각각 폼필드의 타입과 폼필드가 출력될 그룹(섹션)명을 지정합니다. 그 이외의 정보들은 모두 지정된 폼필드를 설정할 때 전달됩니다.\n\n_type에 지정되는 값은 폼 필드 UI오브젝트의 별칭에서 접미사인 form을 제외한 나머지 부분의 별칭만 사용됩니다. 위의 예제에서 첫번째 필드인 title의 경우, 타입(_type)이 text로 지정돼 있습니다. text타입에 해당하는 폼 필드 UI오브젝트는 formText UI오브젝트입니다. label 및 placeholder 정보는 formText UI오브젝트에게 그대로 전달됩니다.\n\nvalue\n\n폼이 포함하고 있는 필드들이 가지는 값(value)의 목록입니다",contentLowercase:"# ui오브젝트/폼빌더\n# ui오브젝트/폼빌더\nxe에서는 화면에 자주 출력되는 ui 요소들이 있습니다. 텍스트 입력 필드나 셀렉트 박스(select)와 같은 기본적인 폼 요소들이 있고, 테마 선택기나 메뉴 선택기, 또는 권한 설정 ui와 같이 xe에서만 사용되는 특별한 요소들도 있습니다. ui오브젝트는 이렇게 자주 사용되는 ui 요소를 개발자들이 쉽게 출력할 수 있는 방법을 제공합니다.\n\n# 기본 사용법\nuio() 함수를 사용하여 ui오브젝트를 출력할 수 있습니다.\n\n만약 한줄 텍스트 폼 필드를 출력하려면 아래와 같이 작성할 수 있습니다.\n\n// in blade template file\n{{ uio('formtext', \n      ['label'=>'전화번호', \n       'name'=>'phone', \n       'id'=>'inputphone', \n       'description'=> '휴대폰 사용하여 입력하세요', \n       'value'=>'010-000-0000'\n]) }}\n\n\n위 코드는 실제로 아래와 같이 변환되어 출력됩니다.\n\n<div class=\"form-group\">\n  <label for=\"inputphone\">전화번호</label>\n  <input type=\"text\" class=\"form-control\" \n         id=\"inputphone\"\n         name=\"phone\" value=\"010-000-0000\">\n   <p class=\"help-block\">휴대폰 사용하여 입력하세요</p>\n</div>\n\n\nuio 함수\n\nuio 함수의 원형입니다.\n\nuio($id, $args = [], $callback = null)\n\n\n첫번째 파라미터 $id는 ui오브젝트의 아이디(또는 별칭)입니다.\n\n두번째 파라미터 $args는 ui오브젝트를 출력하기 위해 전달할 정보를 담은 배열입니다. 각 ui오브젝트마다 전달하는 정보의 항목은 상이합니다.\n\n세번째 파라미터 $callback를 사용하면 ui오브젝트가 출력하는 html을 커스터마이징할 수 있습니다.\n\n# 기본 제공되는 ui오브젝트\nxe는 아래 목록과 같이 ui오브젝트를 기본으로 제공하고 있습니다.\n\n별칭설명formtext<input type=\"text\">를 출력formpassword<input type=\"password\">를 출력formtextarea<textarea>를 출력formselect<select>를 출력, 사용자로부터 단일 선택을 받을 때 사용하십시오.formcheckbox<input type=\"checkbox\">를 출력 사용자로부터 다중 선택을 받을 때 사용하십시오.formfile<input type=\"file\"> 출력, 파일을 업로드 받을 때 사용하십시오. 이 ui오브젝트는 jqueryfileupload [https://blueimp.github.io/jquery-file-upload/]를 사용합니다.formimageformfile과 같이 파일 업로드를 출력합니다. 하지만 이 ui오브젝트를 사용하면 사용자가 선택한 이미지 파일을 미리보기할 수 있습니다.formmenuxe에 등록된 메뉴 목록을 <select> 형식으로 출력합니다.formlangtext (=langtext)formtext와 같이 한줄 텍스트 박스를 출력합니다. 하지만 이 ui오브젝트는 다국어를 입력받을 수 있습니다.formlangtextarea (=langtextarea)여러줄의 다국어를 출력합니다.permission권한설정 ui를 출력합니다.themeselect테마 선택 ui를 출력합니다.captcha캡챠 입력 ui를 출력합니다.이 ui오브젝트들 이외에 여러 플러그인이 등록한 ui오브젝트를 사용할 수도 있습니다.\n\n# ui오브젝트 두번째 파라미터 사용 예제\nformtext, formlangtext\n\n$args = [\n    'label'=>'전화번호', \n    'name'=>'phone', \n    'id'=>'inputphone', \n    'description'=> '휴대폰 사용하여 입력하세요', \n    'value'=>'010-000-0000'\n]\n\n\nformpassword\n\n$args = [\n    'label'=>'비밀번호', \n    'name'=>'password', \n    'id'=>'password', \n    'description'=> '영문 + 숫자 조합 8자리 이상 입력하세요.', \n]\n\n\nformtextarea, formlangtextarea\n\n$args = [\n    'label'=>'copyright', \n    'name'=>'copyright', \n    'id'=>'footer_copyright', \n    'description'=> '푸터하단 문구를 입력하세요.', \n]\n\n\nformselect\n\n$args = [\n    'label'=>'colorset', \n    'name'=>'layout_colorset', \n    'id'=>'layout_colorset', \n    'class'=>'layout_colorset',\n    'description'=> '색상을 선택하세요.', \n    'options' => [\n        'blue' => '파랑색',\n        'red' => '붉은색',\n        'green' => '초록색'\n    ]\n]\n\n\noptions는 3가지의 형태로 사용할 수 있습니다.\n\n'options' => [\n    'blue' => '파랑색',\n    'red' => '붉은색',\n    'green' => '초록색'\n]\n\n\n//key의 값이 value의 값과 같음\n'options' => [\n    'blue',\n    'red',\n    'green'\n]\n\n\n//\n'options' => [\n    ['text' => '파랑색', value => 'blue', selected => true],\n    ['text' => '붉은색', value => 'red'],\n    ['text' => '초록색', value => 'green']\n]\n\n\nformcheckbox\n\n$args = [\n    'label'=>'취미',\n    'name'=>'hobby',\n    'id'=>'hobby',\n    'class'=>'hobby',\n    'description'=> '취미를 선택하세요.',\n    'options' => [\n        'basketball' => '농구',\n        'baseball' => '야구',\n        'football' => '축구'\n    ]\n]\n\n\noptions는 checkboxes라는 프로퍼티명으로도 사용가능하며 formselect와 같이 3가지의 형태로 사용할 수 있습니다.\n\n'options' => [\n    'basketball' => '농구',\n    'baseball' => '야구',\n    'football' => '축구'\n]\n\n\n'options' => [\n    'basketball',\n    'baseball',\n    'football'\n]\n\n\n'options' => [\n    ['text' => '농구', value => 'basketball', checked => true],\n    ['text' => '야구', value => 'baseball'],\n    ['text' => '축구', value => 'football']\n]\n\n\nformmenu\n\n$args = [\n    'label'=>'메인 메뉴',   \n]\n\n\n# 폼 빌더(폼 ui오브젝트)\n폼은 웹페이지에서 사용자에게 입력을 받기 위해 매우 빈번히 사용됩니다. 특히 테마나 위젯, 스킨과 같은 컴포넌트는 사이트 관리자에게 폼으로 구성되어 있는 설정 페이지를 제공하므로 개발자가 설정 페이지를 작성해주어야 합니다. 이런 개발자의 수고를 줄이기 위해 ui오브젝트 중에는 폼 작성을 편하게 할 수 있도록 도와주는 ui오브젝트들이 있습니다.\n\n# 폼 필드 ui오브젝트\n폼은 text, textarea, checkbox와 같은 다양한 '폼 필드'들로 구성됩니다. ui오브젝트 중 별칭(alias)이 form* 형식인 ui오브젝트들이 바로 '폼 필드 ui오브젝트'입니다. 폼 필드 ui오브젝트를 사용하면 손쉽게 폼 필드를 출력할 수 있습니다.\n\n# 폼 ui오브젝트\n또, ui오브젝트 중에 별칭(alias)이 form인 ui오브젝트가 있는데, 이 ui오브젝트는 조금 특별합니다. 이 ui오브젝트는 하나의 완성된 폼을 출력합니다. 물론, 폼에 대한 기본정보(action, method 등)와 폼을 구성하는 필드의 목록은 파라미터로 입력받습니다.\n\n폼 ui오브젝트도 다른 ui오브젝트와 같이 uio 함수로 사용할 수 있습니다.\n\n{{ uio('form', $formdata); }}\n\n\n두번째 파라미터인 $formdata는 아래와 같은 형식을 가집니다.\n\n$formdata = [\n  'fields' => [\n    'title' => [\n        '_type' => 'text',\n        '_section' => '섹션1',\n        'label' => '제목',\n        'placeholder' => '제목을 입력하세요.',\n    ],\n    'content' => [\n        '_type' => 'textarea',\n        '_section' => '섹션1',\n        'label' => '내용',\n        'placeholder' => '내용을 입력하세요.',\n    ],\n  ],\n  'value' => [\n    'title' => 'foo..',\n    'content' => 'bar..'\n  ],\n  'action' => '/',\n  'method' => 'post',\n];\n\n\n위 코드의 출력은 아래와 같습니다.\n\n<form method=\"post\" enctype=\"multipart/form-data\" action=\"/\">\n    <div class=\"panel form-section-섹션1\">\n        <div class=\"panel-heading\">\n            <div class=\"pull-left\"><h3>섹션1</h3></div>\n        </div>\n        <div class=\"panel-body\">\n            <div class=\"row\">\n                <div class=\"col-md-6 form-col-title\">\n                    <div class=\"form-group\">\n                        <label for=\"\">제목</label>\n                        <input type=\"text\" class=\"form-control\" id=\"\" placeholder=\"제목을 입력하세요.\" name=\"title\" value=\"foo..\">\n                        <p class=\"help-block\"></p>\n                    </div>\n                </div>\n                <div class=\"col-md-6 form-col-content\">\n                    <div class=\"form-group\">\n                        <label for=\"\">내용</label>\n                        <textarea class=\"form-control\" rows=\"3\" placeholder=\"내용을 입력하세요.\" name=\"content\">bar..</textarea>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</form>\n\n\n두번째 파라미터로 전달한 배열은 다음 항목을 제공해야 합니다.\n\nfields\n\n폼이 포함하고 있는 필드들의 목록입니다. 이 배열의 아이템 하나는 폼 필드 하나의 정보를 나타냅니다. 아이템의 키는 폼필드의 name 애트리뷰트로 사용됩니다.(위의 예에서는 title, content에 해당)\n\n또 아이템 하나의 정보에서 _type, _section은 각각 폼필드의 타입과 폼필드가 출력될 그룹(섹션)명을 지정합니다. 그 이외의 정보들은 모두 지정된 폼필드를 설정할 때 전달됩니다.\n\n_type에 지정되는 값은 폼 필드 ui오브젝트의 별칭에서 접미사인 form을 제외한 나머지 부분의 별칭만 사용됩니다. 위의 예제에서 첫번째 필드인 title의 경우, 타입(_type)이 text로 지정돼 있습니다. text타입에 해당하는 폼 필드 ui오브젝트는 formtext ui오브젝트입니다. label 및 placeholder 정보는 formtext ui오브젝트에게 그대로 전달됩니다.\n\nvalue\n\n폼이 포함하고 있는 필드들이 가지는 값(value)의 목록입니다",charsets:{cjk:!0}},{title:"유효성검사",frontmatter:{},regularPath:"/08.%20%EC%84%9C%EB%B9%84%EC%8A%A4/service-validation.html",relativePath:"08. 서비스/service-validation.md",key:"v-5d4d6cc5",path:"/08.%20%EC%84%9C%EB%B9%84%EC%8A%A4/service-validation.html",headers:[{level:2,title:"유효성검사\\(validation\\)",slug:"유효성검사-validation",charIndex:10},{level:3,title:"소개",slug:"소개",charIndex:30},{level:3,title:"유효성검사 살펴보기",slug:"유효성검사-살펴보기",charIndex:78},{level:3,title:"다른 유효성 검사 방법",slug:"다른-유효성-검사-방법",charIndex:2927},{level:3,title:"에러 메시지 사용하기",slug:"에러-메시지-사용하기",charIndex:4430},{level:3,title:"사용가능한 유효성 검사 규칙들",slug:"사용가능한-유효성-검사-규칙들",charIndex:6379}],headersStr:"유효성검사\\(validation\\) 소개 유효성검사 살펴보기 다른 유효성 검사 방법 에러 메시지 사용하기 사용가능한 유효성 검사 규칙들",content:"# 유효성검사\n# 유효성검사(validation)\n# 소개\nXE는 유입되는 데이터의 유효성을 검사하기 위한 다양한 방법을 제공합니다.\n\n# 유효성검사 살펴보기\n유효성 검사 기능에 대해 알아보기 위해서, form을 확인한 뒤 사용자에게 에러 메세지를 보여주는 예제를 살펴보도록 하겠습니다.\n\n# 라우트 정의하기\n우선 다음의 라우트들이 정의되어 있다고 가정해 보겠습니다:\n\n// Display a form to create a blog post...\nRoute::get('post/create', 'PostController@create');\n\n// Store a new blog post...\nRoute::post('post', 'PostController@store');\n\n\nGET 라우트는 사용자가 새로운 블로그 포스트를 생성하기 위한 form을 나타낼 것이고, POST 라우트는 데이터베이스에 새로운 블로그 포스트를 저장할 것입니다.\n\n# 컨트롤러 생성하기\n다음으로, 이 라우트들을 다루는 간단한 컨트롤러를 살펴보겠습니다. 지금은 store 메소드를 비어있는 채로 둘 것입니다:\n\n<?php\n\nnamespace App\\Http\\Controllers;\n\nuse Illuminate\\Http\\Request;\nuse App\\Http\\Controllers\\Controller;\n\nclass PostController extends Controller\n{\n    /**\n     * Show the form the create a new blog post.\n     *\n     * @return Response\n     */\n    public function create()\n    {\n        return view('post.create');\n    }\n\n    /**\n     * Store a new blog post.\n     *\n     * @param  Request  $request\n     * @return Response\n     */\n    public function store(Request $request)\n    {\n        // Validate and store the blog post...\n    }\n}\n\n\n# 유효성검사 로직 작성하기\n이제 새로운 블로그 포스트에 대해 유효성을 검사하는 로직을 store 메소드에 채워넣을 준비가 되었습니다. 베이스 컨트롤러(App\\Http\\Controllers\\Controller) 클래스를 살펴보면 클래스가 ValidatesRequests 트레이트-trait을 사용한다는 것을 알 수 있습니다. 이 트레이트(trait)는 모든 컨트롤러에서 편리하게 사용할 수 있는 validate 메소드를 제공합니다.\n\nvalidate 메소드는 HTTP 요청의 유입과 유효성 검사 룰의 집합을 전달 받습니다. 유효성 검사 룰들을 통과하게되면 코드는 계속해서 정상적으로 실행될 것입니다. 하지만 유효성 검사를 통과하지 못할 경우, 예외(exception)가 던져지고 적절한 오류 응답이 사용자에게 자동으로 보내질 것입니다. 전통적인 HTTP 요청의 경우, 리다이렉트 응답이 생성될 것이며 AJAX 요청에는 JSON 응답이 보내질 것입니다.\n\nvalidate 메소드에 대해 더 잘 이해하기 위해, 다시 store 메소드로 돌아가 보겠습니다:\n\n/**\n * Store a new blog post.\n *\n * @param  Request  $request\n * @return Response\n */\npublic function store(Request $request)\n{\n    $this->validate($request, [\n        'title' => 'required|unique:posts|max:255',\n        'body' => 'required',\n    ]);\n\n    // The blog post is valid, store in database...\n}\n\n\n위에서 볼 수 있듯이, 간단하게 유입되는 HTTP 요청과 유효성 검사 룰들을 validate 메소드로 전달하면 됩니다. 이 때에도 유효 확인이 실패하면 적절한 응답이 생성될 것입니다. 유효성 검사를 통과하면 컨트롤러는 계속해서 정상적으로 수행합니다.\n\n중첩된 속성에 대한 유의사항\n\nHTTP 요청이 \"중첩된\" 파라미터를 가지고 있다면 \".(점)\" 문법을 사용하여 유효성 검사 규칙을 지정할 수 있습니다:\n\n$this->validate($request, [\n    'title' => 'required|unique:posts|max:255',\n    'author.name' => 'required',\n    'author.description' => 'required',\n]);\n\n\n# 유효성 검사 에러 표시하기\n그럼 입력되는 요청(request)의 파라미터들이 유효성 검사를 통과하지 못하는 경우에는 어떻게 될까요? 이 경우 앞서 언급한대로, 자동으로 사용자를 이전의 위치로 리다이렉트합니다. 또한 모든 유효성 확인 에러는 자동으로 세션에 임시 저장될 것입니다.\n\nGET 라우트에서도 에러 메세지를 뷰와 명시적으로 출력하지 않아도 됩니다. 왜냐하면, 기본적으로 세션에 저장된 유효성 확인 에러를 출력합니다.\n\n이 예제에서, 유효성 검사를 통과하지 못할 경우 사용자는 컨트롤러의 create 메소드로 리다이렉트 될것이고, XE는 세션에 저장된 유효성 확인 에러를 확인한 후, 토스트 팝업(팝업레이어 형식)으로 오류 메시지를 출력합니다.\n\n# AJAX 요청과 유효성 검사\n이 예제에서는, 어플리케이션에 전통적인 form을 이용하여 데이터를 보냈습니다. 하지만 많은 어플리케이션이 AJAX 요청을 사용합니다. AJAX 요청 중에서 validate 메소드를 사용한다면 라라벨은 리다이렉트 응답을 생성하지 않습니다. 대신 라라벨은 유효성 검사의 모든 실패 에러들을 포함하는 JSON 응답을 생성할 것입니다. 이 JSON 응답은 422 HTTP 상태 코드와 함께 보내질 것입니다.\n\n# 다른 유효성 검사 방법\n# 수동으로 Validator 생성하기\n컨트롤러에서 제공하는 validate 메소드를 사용하고 싶지 않다면 Validator 파사드를 사용하여 validator 인스턴스를 수동으로 생성할 수 있습니다. 파사드에 make 메소드를 사용하면 새로운 validator 인스턴스가 생성됩니다:\n\n<?php\n\nnamespace App\\Http\\Controllers;\n\nuse Validator;\nuse Illuminate\\Http\\Request;\nuse App\\Http\\Controllers\\Controller;\n\nclass PostController extends Controller\n{\n    /**\n     * Store a new blog post.\n     *\n     * @param  Request  $request\n     * @return Response\n     */\n    public function store(Request $request)\n    {\n        $validator = Validator::make($request->all(), [\n            'title' => 'required|unique:posts|max:255',\n            'body' => 'required',\n        ]);\n\n        if ($validator->fails()) {\n            return redirect('post/create')\n                        ->withErrors($validator)\n                        ->withInput();\n        }\n\n        // Store the blog post...\n    }\n}\n\n\nmake 메소드로 전달되는 첫번째 인자는 유효성 검사를 받을 데이터입니다. 두번째 인자는 데이터에 적용되어야 하는 유효성 검사 규칙들입니다.\n\n요청(request) 정보가 유효성 검사를 통과하지 못한 것을 확인였다면 withErrors 메소드로 세션에 에러 메세지를 임시저장(flash) 할 수 있습니다. 이 메소드를 사용하면 리다이렉트 후에 $errors 변수가 자동으로 뷰에서 공유되어 손쉽게 사용자에게 보여질 수 있습니다. withErrors 메소드는 validator, MessageBag, 혹은 PHP array를 전달 받습니다.\n\n이름이 지정된 Error Bags\n\n한 페이지 안에서 여러개의 form을 가지고 있다면 에러들의 MessageBag에 이름을 붙여 지정한 form에 맞는 에러 메세지를 조회할 수 있도록 할 수 있습니다. 단순히 withErrors에 이름을 두번째 인자로 전달하면 됩니다:\n\nreturn redirect('register')\n            ->withErrors($validator, 'login');\n\n\n그러면 $errors 변수에서 지정된 MessageBag 인스턴스에 접근할 수 있습니다.\n\n{{ $errors->login->first('email') }}\n\n\n# 에러 메시지 사용하기\nValidator 인스턴스의 messages 메소드를 호출하면, 에러 메시지를 편하게 사용할 수 있는 다양한 메소드를 가진 MessageBag 인스턴스를 받을 수 있습니다.\n\n하나의 필드에 대한 첫번째 에러 메시지 조회하기\n\n특정 필드에 대한 첫번째 에러 메세지를 조회하려면 first 메소드를 사용하면 됩니다:\n\n$messages = $validator->errors();\n\necho $messages->first('email');\n\n\n하나의 필드에 대한 모든 에러 메세지 조회하기\n\n간단하게 하나의 필드에 대한 모든 에러 메세지를 조회하고 싶다면 get 메소드를 사용하면 됩니다:\n\nforeach ($messages->get('email') as $message) {\n    //\n}\n\n\n모든 필드에 대한 모든 에러 메세지 조회하기\n\n모든 필드에 대한 모든 에러 메세지를 조회하기 위해서는 all 메소들 사용하면 됩니다:\n\nforeach ($messages->all() as $message) {\n    //\n}\n\n\n하나의 필드에 대하여 에러 메시지가 존재하는지 검사하기\n\nif ($messages->has('email')) {\n    //\n}\n\n\n특정 형식으로 에러 메시지 획득하기\n\necho $messages->first('email', '<p>:message</p>');\n\n\n특정 형식으로 모든 에러 메시지 획득하기\n\nforeach ($messages->all('<li>:message</li>') as $message) {\n    //\n}\n\n\n# 사용자 지정(커스텀) 에러 메세지\n필요하다면 기본적인 에러 메세지 대신에 커스텀 에러 메세지를 유효성 검사에 사용할 수 있습니다. 커스텀 메세지를 지정하는 데에는 여러가지 방법이 있습니다. 먼저 Validator::make 메소드에 커스텀 메세지를 세번째 인자로 전달할 수 있습니다:\n\n$messages = [\n    'required' => 'The :attribute field is required.',\n];\n\n$validator = Validator::make($input, $rules, $messages);\n\n\n다음의 예에서 :attribute 플레이스 홀더는 유효성 검사를 받는 필드의 실제 이름으로 대체됩니다. 유효성 검사 메세지에서 다른 플레이스 홀더들 또한 활용할 수 있습니다. 예를 들어:\n\n$messages = [\n    'same'    => 'The :attribute and :other must match.',\n    'size'    => 'The :attribute must be exactly :size.',\n    'between' => 'The :attribute must be between :min - :max.',\n    'in'      => 'The :attribute must be one of the following types: :values',\n];\n\n\n주어진 속성에 대해 커스텀 메세지 지정하기\n\n종종 하나의 특정 필드에 대해서만 커스텀 오류 메세지를 지정해야 하는 경우가 있습니다. 이것은 \".(점)\" 표기법을 통해서 할 수 있습니다. 속성의 이름을 먼저 지정하고, 규칙을 명시하면됩니다:\n\n$messages = [\n    'email.required' => 'We need to know your e-mail address!',\n];\n\n\n언어 파일에 커스텀 메세지 지정하기\n\n많은 경우에서, Validator에 직접 메세지를 전달하는 대신, 언어 파일에 속성에 따른 커스텀 메세지를 지정하기 원할 수 있습니다. 이렇게 하기 위해서는 resources/lang/xx/validation.php 언어 파일의 custom 배열에 메제지를 추가하면 됩니다.\n\n'custom' => [\n    'email' => [\n        'required' => 'We need to know your e-mail address!',\n    ],\n],\n\n\n# 사용가능한 유효성 검사 규칙들\n다음은 모든 유효성 검사 규칙과 그들의 함수 목록입니다.\n\n * Accepted\n * Active URL\n * After (Date)\n * Alpha\n * Alpha Dash\n * Alpha Numeric\n * Array\n * Before (Date)\n * Between\n * Boolean\n * Confirmed\n * Date\n * Date Format\n * Different\n * Digits\n * Digits Between\n * E-Mail\n * Exists (Database)\n * Image (File)\n * In\n * Integer\n * IP Address\n * JSON\n * Max\n * MIME Types (File)\n * Min\n * Not In\n * Numeric\n * Regular Expression\n * Required\n * Required If\n * Required Unless\n * Required With\n * Required With All\n * Required Without\n * Required Without All\n * Same\n * Size\n * String\n * Timezone\n * Unique (Database)\n * URL\n\naccepted\n\n필드의 값이 yes, on, 1, 또는 _true_이어야 합니다. 이 것은 \"이용약관\" 동의와 같은 필드의 검사에 유용합니다.\n\nactive_url\n\n필드의 값이 PHP 함수 checkdnsrr에 기반하여 올바른 URL이어야 합니다.\n\nafter:date\n\n필드의 값이 주어진 날짜 이후여야 합니다. 이때 날짜는 strtotime PHP 함수를 통해 생성된 값입니다.\n\n'start_date' => 'required|date|after:tomorrow'\n\n\nstrtotime에 의해 계산될 날짜 문자열을 전달하는 대신 날짜와 비교할 다른 필드를 명시할 수 있습니다:\n\n'finish_date' => 'required|date|after:start_date'\n\n\nalpha\n\n필드의 값이 완벽하게 (숫자나 기호가 아닌) 알파벳[자음과 모음] 문자로 이루어져야 합니다.\n\n(역자주: 영문 알파벳만을 의미하지 않고, 숫자나 기호가 아닌경우에 해당하여, 한글도 허용합니다.)\n\nalpha_dash\n\n필드의 값이 (숫자나 기호가 아닌) 알파벳[자음과 모음] 문자 및 숫자와 dash(-), underscore(_)로 이루어져야 합니다.\n\nalpha_num\n\n필드의 값이 완벽하게 (숫자나 기호가 아닌) 알파벳[자음과 모음] 문자 및 숫자로 이루어져야 합니다.\n\narray\n\n필드의 값이 반드시 PHP 배열 형태이어야 합니다.\n\nbefore:date\n\n필드의 값이 반드시 주어진 날짜보다 앞서야 합니다. 날짜는 strtotime PHP 함수를 통해 비교됩니다.\n\nbetween:min,max\n\n필드의 값이, 주어진 min 과 _max_의 사이의 값이어야 합니다. 문자열, 숫자, 그리고 파일이 size 룰에 의해 같은 방식으로 평가될 수 있습니다.\n\nboolean\n\n필드의 값이 반드시 boolean으로 캐스팅될 수 있어야 합니다. 허용되는 값은 true, false, 1, 0, \"1\", \"0\" 입니다.\n\nconfirmed\n\n필드의 값이 foo_confirmation의 매칭되는 필드를 가져야 합니다. 예를 들어 만약 필드가 password라면, password_confirmation라는 필드가 입력값 중에 있어야 합니다.\n\ndate\n\n필드의 값이 strtotime PHP 함수에서 인식할 수 있는 올바른 날짜여야 합니다.\n\ndateformat:_format\n\n필드의 값이 반드시 주어진 _format_과 일지해야 합니다. 주어진 포맷은 date_parse_from_format PHP 함수에 의해서 연산될 것입니다. 필드의 유효성을 검사할 때에는 date와 date_format 중 하나만 사용해야 합니다.\n\ndifferent:field\n\n필드의 값이 주어진 _field_의 값과 달라야 합니다.\n\ndigits:value\n\n필드의 값이 반드시 _숫자_여야 하고, 길이가 _value_이어야 합니다.\n\ndigitsbetween:_min,max\n\n필드의 값이 주어진 _min_과 max 사이의 길이를 가져야 합니다.\n\nemail\n\n필드의 값이 이메일 주소 형식이어야 합니다.\n\nexists:table,column\n\n필드의 값이 주어진 데이터베이스 테이블에 존재하는 값이어야 합니다.\n\nexists 룰의 기본 사용법\n\n'state' => 'exists:states'\n\n\n특정 컬럼명 지정하기\n\n'state' => 'exists:states,abbreviation'\n\n\n쿼리문의 \"where\" 구문에 추가될 더 많은 조건을 지정할 수도 있습니다:\n\n'email' => 'exists:staff,email,account_id,1'\n\n\n\"where\" 구분에 NULL 혹은 NOT_NULL을 전달할 수도 있습니다:\n\n'email' => 'exists:staff,email,deleted_at,NULL'\n\n'email' => 'exists:staff,email,deleted_at,NOT_NULL'\n\n\nimage\n\n이미지 파일(jpeg, png, bmp, gif, svg)이어야 합니다.\n\nin:foo,bar,...\n\n필드의 값이 주어진 목록에 포함돼 있어야 합니다.\n\ninteger\n\n필드의 값이 정수여야 합니다.\n\nip\n\n필드의 값이 IP 주소여야 합니다.\n\njson\n\n필드의 값이 유효한 JSON 문자열이어야 합니다.\n\nmax:value\n\n필드의 값이 반드시 _value_보다 작거나 같아야 합니다. 문자열, 숫자, 그리고 파일이 size 룰에 의해 같은 방식으로 평가될 수 있습니다.\n\nmimes:foo,bar,...\n\n파일의 MIME 타입이 주어진 확장자 리스트 중에 하나와 일치해야 합니다.\n\nMIME 룰의 기본 사용법\n\n'photo' => 'mimes:jpeg,bmp,png'\n\n\n여러분은 확장자를 지정하기만 하면 되지만, 이 경우 파일의 컨텐트를 읽고 MIME 타입을 추정함으로써 이 파일의 MIME의 유효성을 검사합니다.\n\nMIME 타입과 그에 상응하는 확장의 전체 목록은 다음의 위치에서 확인하실 수 있습니다: http://svn.apache.org/repos/asf/httpd/httpd/trunk/docs/conf/mime.types\n\nmin:value\n\n필드의 값이 반드시 value 보다 크거나 같아야 합니다. 문자열, 숫자, 그리고 파일이 size 룰에 의해 같은 방식으로 평가될 수 있습니다.\n\nnotin:_foo,bar,...\n\n필드의 값이 주어진 목록에 존재하지 않아야 합니다.\n\nnumeric\n\n필드의 값이 숫자여야 합니다.\n\nregex:pattern\n\n필드의 값이 주어진 정규식 표현과 일치해야 합니다.\n\n참고: regex 패턴을 사용할 때, 특히 정규 표현식에 파이프 문자열이 있다면, 파이프 구분자를 사용하는 대신 배열 형식을 사용하여 룰을 지정할 필요가 있습니다.\n\nrequired\n\n입력 값 중에 해당 필드가 존재해야 하며 비어 있어서는 안됩니다. 필드는 다음의 조건 중 하나를 충족하면 \"빈(empty)\" 것으로 간주됩니다:\n\n * 값이 null인 경우.\n * 값이 비어있는 문자열인 경우.\n * 값이 비어있는 배열이거나, 비어있는 Countable 객체인경우\n * 값이 경로없이 업로드된 파일인 경우\n\nrequiredif:_anotherfield,value,...\n\n만약 _filed_의 값이 _value_중의 하나와 일치한다면, 해당 필드가 반드시 존재해야 합니다.\n\nrequiredunless:_anotherfield,value,...\n\n_anotherfield_가 어떤 _value_와 동일하지 않은 이상 필드가 존재해야 합니다.\n\nrequiredwith:_foo,bar,...\n\n다른 지정된 필드중 하나라도 존재한다면, 해당 필드가 반드시 존재해야 합니다.\n\nrequiredwith_all:_foo,bar,...\n\n다른 지정된 필드가 모두 존재한다면, 해당 필드가 반드시 존재해야 합니다.\n\nrequiredwithout:_foo,bar,...\n\n다른 지정된 필드중 하나라도 존재하지 않으면, 해당 필드가 반드시 존재해야 합니다.\n\nrequiredwithout_all:_foo,bar,...\n\n다른 지정된 필드가 모두 존재하지 않으면, 해당 필드가 존재해야 합니다.\n\nsame:field\n\n필드의 값이 주어진 _field_의 값과 일치해야 합니다.\n\nsize:value\n\n필드의 값이 주어진 _value_와 일치하는 크기를 가져야 합니다. 문자열 데이터에서는 문자의 개수가 _value_와 일치해야 합니다. 숫자형식의 데이터에서는 주어진 정수값이 _value_와 일치해야 합니다. 파일에서는 킬로바이트 형식의 파일 사이즈가 _size_와 일치해야 합니다.\n\nstring\n\n필드의 값이 반드시 문자열이어야 합니다.\n\ntimezone\n\n필드의 값이 timezone_identifiers_list PHP 함수에서 인식 가능한 유효한 timezone 식별자여야 합니다.\n\nunique:table,column,except,idColumn\n\n필드의 값이 주어진 데이터베이스 테이블에서 고유한 값이어야 합니다. 만약 column이 지정돼 있지 않다면 필드의 이름이 사용됩니다.\n\n특정 컬럼명 지정하기:\n\n'email' => 'unique:users,email_address'\n\n\n특정 데이터베이스 커넥션\n\n때때로, 여러분은 Validator에 의해서 생성되는 데이터베이스 쿼리에 사용자가 지정한 커넥션을 필요로 할지도 모릅니다. 위에서의 검증 규칙 unique:users 에서는 데이터베이스를 쿼리하기 위해 기본 데이터 베이스 커넥션이 사용됩니다. 이를 재지정하려면 테이블 이름 후에 \".\" 표기법으로 커넥션을 지정하십시오:\n\n'email' => 'unique:connection.users,email_address'\n\n\n주어진 ID에 대해서 유니크 규칙을 무시하도록 강제하기:\n\n때때로 유니크 검사를 할 때 특정 ID를 무시하고자 할 수 있습니다. 예를 들어 사용자 이름, 이메일 주소 그리고 위치를 포함하는 \"프로필 업데이트\" 화면이 있습니다. 물론 이메일 주소가 고유하다는 것을 확인하고 싶을 것입니다. 하지만 사용자가 이름 필드만 바꾸고 이베일 필드를 바꾸지 않는다면 사용자가 이미 이메일 주소의 주인이기 때문에 유효 검사 오류가 던져지지 않아야 합니다. 유효 검사 오류는 사용자가 다른 사용자가 이미 사용하고 있는 이메일 주소를 제공할 때에만 던져져야 합니다. 유니크 규칙에 사용자 ID를 무시하라고 강제하기 위해서는 세번째 파라미터로 ID를 전달해야 합니다:\n\n'email' => 'unique:users,email_address,'.$user->id\n\n\n테이블이 id가 아닌 primary 키 컬럼 이름을 사용한다면 그 이름을 네번째 파라미터로 지정하면 됩니다:\n\n'email' => 'unique:users,email_address,'.$user->id.',user_id'\n\n\n추가적인 Where 구문 추가하기:\n\n더 추가되는 조건은 쿼리에 추가될 \"where\" 구문에 대해서 지정될 것입니다.\n\n'email' => 'unique:users,email_address,NULL,id,account_id,1'\n\n\n위의 룰에서는, account_id가 1인 데이터 만이 유니크 검사에 포함됩니다.\n\nurl\n\n필드는 반드시 PHP filter_var 함수에 따라 유효한 URL이어야 합니다.",contentLowercase:"# 유효성검사\n# 유효성검사(validation)\n# 소개\nxe는 유입되는 데이터의 유효성을 검사하기 위한 다양한 방법을 제공합니다.\n\n# 유효성검사 살펴보기\n유효성 검사 기능에 대해 알아보기 위해서, form을 확인한 뒤 사용자에게 에러 메세지를 보여주는 예제를 살펴보도록 하겠습니다.\n\n# 라우트 정의하기\n우선 다음의 라우트들이 정의되어 있다고 가정해 보겠습니다:\n\n// display a form to create a blog post...\nroute::get('post/create', 'postcontroller@create');\n\n// store a new blog post...\nroute::post('post', 'postcontroller@store');\n\n\nget 라우트는 사용자가 새로운 블로그 포스트를 생성하기 위한 form을 나타낼 것이고, post 라우트는 데이터베이스에 새로운 블로그 포스트를 저장할 것입니다.\n\n# 컨트롤러 생성하기\n다음으로, 이 라우트들을 다루는 간단한 컨트롤러를 살펴보겠습니다. 지금은 store 메소드를 비어있는 채로 둘 것입니다:\n\n<?php\n\nnamespace app\\http\\controllers;\n\nuse illuminate\\http\\request;\nuse app\\http\\controllers\\controller;\n\nclass postcontroller extends controller\n{\n    /**\n     * show the form the create a new blog post.\n     *\n     * @return response\n     */\n    public function create()\n    {\n        return view('post.create');\n    }\n\n    /**\n     * store a new blog post.\n     *\n     * @param  request  $request\n     * @return response\n     */\n    public function store(request $request)\n    {\n        // validate and store the blog post...\n    }\n}\n\n\n# 유효성검사 로직 작성하기\n이제 새로운 블로그 포스트에 대해 유효성을 검사하는 로직을 store 메소드에 채워넣을 준비가 되었습니다. 베이스 컨트롤러(app\\http\\controllers\\controller) 클래스를 살펴보면 클래스가 validatesrequests 트레이트-trait을 사용한다는 것을 알 수 있습니다. 이 트레이트(trait)는 모든 컨트롤러에서 편리하게 사용할 수 있는 validate 메소드를 제공합니다.\n\nvalidate 메소드는 http 요청의 유입과 유효성 검사 룰의 집합을 전달 받습니다. 유효성 검사 룰들을 통과하게되면 코드는 계속해서 정상적으로 실행될 것입니다. 하지만 유효성 검사를 통과하지 못할 경우, 예외(exception)가 던져지고 적절한 오류 응답이 사용자에게 자동으로 보내질 것입니다. 전통적인 http 요청의 경우, 리다이렉트 응답이 생성될 것이며 ajax 요청에는 json 응답이 보내질 것입니다.\n\nvalidate 메소드에 대해 더 잘 이해하기 위해, 다시 store 메소드로 돌아가 보겠습니다:\n\n/**\n * store a new blog post.\n *\n * @param  request  $request\n * @return response\n */\npublic function store(request $request)\n{\n    $this->validate($request, [\n        'title' => 'required|unique:posts|max:255',\n        'body' => 'required',\n    ]);\n\n    // the blog post is valid, store in database...\n}\n\n\n위에서 볼 수 있듯이, 간단하게 유입되는 http 요청과 유효성 검사 룰들을 validate 메소드로 전달하면 됩니다. 이 때에도 유효 확인이 실패하면 적절한 응답이 생성될 것입니다. 유효성 검사를 통과하면 컨트롤러는 계속해서 정상적으로 수행합니다.\n\n중첩된 속성에 대한 유의사항\n\nhttp 요청이 \"중첩된\" 파라미터를 가지고 있다면 \".(점)\" 문법을 사용하여 유효성 검사 규칙을 지정할 수 있습니다:\n\n$this->validate($request, [\n    'title' => 'required|unique:posts|max:255',\n    'author.name' => 'required',\n    'author.description' => 'required',\n]);\n\n\n# 유효성 검사 에러 표시하기\n그럼 입력되는 요청(request)의 파라미터들이 유효성 검사를 통과하지 못하는 경우에는 어떻게 될까요? 이 경우 앞서 언급한대로, 자동으로 사용자를 이전의 위치로 리다이렉트합니다. 또한 모든 유효성 확인 에러는 자동으로 세션에 임시 저장될 것입니다.\n\nget 라우트에서도 에러 메세지를 뷰와 명시적으로 출력하지 않아도 됩니다. 왜냐하면, 기본적으로 세션에 저장된 유효성 확인 에러를 출력합니다.\n\n이 예제에서, 유효성 검사를 통과하지 못할 경우 사용자는 컨트롤러의 create 메소드로 리다이렉트 될것이고, xe는 세션에 저장된 유효성 확인 에러를 확인한 후, 토스트 팝업(팝업레이어 형식)으로 오류 메시지를 출력합니다.\n\n# ajax 요청과 유효성 검사\n이 예제에서는, 어플리케이션에 전통적인 form을 이용하여 데이터를 보냈습니다. 하지만 많은 어플리케이션이 ajax 요청을 사용합니다. ajax 요청 중에서 validate 메소드를 사용한다면 라라벨은 리다이렉트 응답을 생성하지 않습니다. 대신 라라벨은 유효성 검사의 모든 실패 에러들을 포함하는 json 응답을 생성할 것입니다. 이 json 응답은 422 http 상태 코드와 함께 보내질 것입니다.\n\n# 다른 유효성 검사 방법\n# 수동으로 validator 생성하기\n컨트롤러에서 제공하는 validate 메소드를 사용하고 싶지 않다면 validator 파사드를 사용하여 validator 인스턴스를 수동으로 생성할 수 있습니다. 파사드에 make 메소드를 사용하면 새로운 validator 인스턴스가 생성됩니다:\n\n<?php\n\nnamespace app\\http\\controllers;\n\nuse validator;\nuse illuminate\\http\\request;\nuse app\\http\\controllers\\controller;\n\nclass postcontroller extends controller\n{\n    /**\n     * store a new blog post.\n     *\n     * @param  request  $request\n     * @return response\n     */\n    public function store(request $request)\n    {\n        $validator = validator::make($request->all(), [\n            'title' => 'required|unique:posts|max:255',\n            'body' => 'required',\n        ]);\n\n        if ($validator->fails()) {\n            return redirect('post/create')\n                        ->witherrors($validator)\n                        ->withinput();\n        }\n\n        // store the blog post...\n    }\n}\n\n\nmake 메소드로 전달되는 첫번째 인자는 유효성 검사를 받을 데이터입니다. 두번째 인자는 데이터에 적용되어야 하는 유효성 검사 규칙들입니다.\n\n요청(request) 정보가 유효성 검사를 통과하지 못한 것을 확인였다면 witherrors 메소드로 세션에 에러 메세지를 임시저장(flash) 할 수 있습니다. 이 메소드를 사용하면 리다이렉트 후에 $errors 변수가 자동으로 뷰에서 공유되어 손쉽게 사용자에게 보여질 수 있습니다. witherrors 메소드는 validator, messagebag, 혹은 php array를 전달 받습니다.\n\n이름이 지정된 error bags\n\n한 페이지 안에서 여러개의 form을 가지고 있다면 에러들의 messagebag에 이름을 붙여 지정한 form에 맞는 에러 메세지를 조회할 수 있도록 할 수 있습니다. 단순히 witherrors에 이름을 두번째 인자로 전달하면 됩니다:\n\nreturn redirect('register')\n            ->witherrors($validator, 'login');\n\n\n그러면 $errors 변수에서 지정된 messagebag 인스턴스에 접근할 수 있습니다.\n\n{{ $errors->login->first('email') }}\n\n\n# 에러 메시지 사용하기\nvalidator 인스턴스의 messages 메소드를 호출하면, 에러 메시지를 편하게 사용할 수 있는 다양한 메소드를 가진 messagebag 인스턴스를 받을 수 있습니다.\n\n하나의 필드에 대한 첫번째 에러 메시지 조회하기\n\n특정 필드에 대한 첫번째 에러 메세지를 조회하려면 first 메소드를 사용하면 됩니다:\n\n$messages = $validator->errors();\n\necho $messages->first('email');\n\n\n하나의 필드에 대한 모든 에러 메세지 조회하기\n\n간단하게 하나의 필드에 대한 모든 에러 메세지를 조회하고 싶다면 get 메소드를 사용하면 됩니다:\n\nforeach ($messages->get('email') as $message) {\n    //\n}\n\n\n모든 필드에 대한 모든 에러 메세지 조회하기\n\n모든 필드에 대한 모든 에러 메세지를 조회하기 위해서는 all 메소들 사용하면 됩니다:\n\nforeach ($messages->all() as $message) {\n    //\n}\n\n\n하나의 필드에 대하여 에러 메시지가 존재하는지 검사하기\n\nif ($messages->has('email')) {\n    //\n}\n\n\n특정 형식으로 에러 메시지 획득하기\n\necho $messages->first('email', '<p>:message</p>');\n\n\n특정 형식으로 모든 에러 메시지 획득하기\n\nforeach ($messages->all('<li>:message</li>') as $message) {\n    //\n}\n\n\n# 사용자 지정(커스텀) 에러 메세지\n필요하다면 기본적인 에러 메세지 대신에 커스텀 에러 메세지를 유효성 검사에 사용할 수 있습니다. 커스텀 메세지를 지정하는 데에는 여러가지 방법이 있습니다. 먼저 validator::make 메소드에 커스텀 메세지를 세번째 인자로 전달할 수 있습니다:\n\n$messages = [\n    'required' => 'the :attribute field is required.',\n];\n\n$validator = validator::make($input, $rules, $messages);\n\n\n다음의 예에서 :attribute 플레이스 홀더는 유효성 검사를 받는 필드의 실제 이름으로 대체됩니다. 유효성 검사 메세지에서 다른 플레이스 홀더들 또한 활용할 수 있습니다. 예를 들어:\n\n$messages = [\n    'same'    => 'the :attribute and :other must match.',\n    'size'    => 'the :attribute must be exactly :size.',\n    'between' => 'the :attribute must be between :min - :max.',\n    'in'      => 'the :attribute must be one of the following types: :values',\n];\n\n\n주어진 속성에 대해 커스텀 메세지 지정하기\n\n종종 하나의 특정 필드에 대해서만 커스텀 오류 메세지를 지정해야 하는 경우가 있습니다. 이것은 \".(점)\" 표기법을 통해서 할 수 있습니다. 속성의 이름을 먼저 지정하고, 규칙을 명시하면됩니다:\n\n$messages = [\n    'email.required' => 'we need to know your e-mail address!',\n];\n\n\n언어 파일에 커스텀 메세지 지정하기\n\n많은 경우에서, validator에 직접 메세지를 전달하는 대신, 언어 파일에 속성에 따른 커스텀 메세지를 지정하기 원할 수 있습니다. 이렇게 하기 위해서는 resources/lang/xx/validation.php 언어 파일의 custom 배열에 메제지를 추가하면 됩니다.\n\n'custom' => [\n    'email' => [\n        'required' => 'we need to know your e-mail address!',\n    ],\n],\n\n\n# 사용가능한 유효성 검사 규칙들\n다음은 모든 유효성 검사 규칙과 그들의 함수 목록입니다.\n\n * accepted\n * active url\n * after (date)\n * alpha\n * alpha dash\n * alpha numeric\n * array\n * before (date)\n * between\n * boolean\n * confirmed\n * date\n * date format\n * different\n * digits\n * digits between\n * e-mail\n * exists (database)\n * image (file)\n * in\n * integer\n * ip address\n * json\n * max\n * mime types (file)\n * min\n * not in\n * numeric\n * regular expression\n * required\n * required if\n * required unless\n * required with\n * required with all\n * required without\n * required without all\n * same\n * size\n * string\n * timezone\n * unique (database)\n * url\n\naccepted\n\n필드의 값이 yes, on, 1, 또는 _true_이어야 합니다. 이 것은 \"이용약관\" 동의와 같은 필드의 검사에 유용합니다.\n\nactive_url\n\n필드의 값이 php 함수 checkdnsrr에 기반하여 올바른 url이어야 합니다.\n\nafter:date\n\n필드의 값이 주어진 날짜 이후여야 합니다. 이때 날짜는 strtotime php 함수를 통해 생성된 값입니다.\n\n'start_date' => 'required|date|after:tomorrow'\n\n\nstrtotime에 의해 계산될 날짜 문자열을 전달하는 대신 날짜와 비교할 다른 필드를 명시할 수 있습니다:\n\n'finish_date' => 'required|date|after:start_date'\n\n\nalpha\n\n필드의 값이 완벽하게 (숫자나 기호가 아닌) 알파벳[자음과 모음] 문자로 이루어져야 합니다.\n\n(역자주: 영문 알파벳만을 의미하지 않고, 숫자나 기호가 아닌경우에 해당하여, 한글도 허용합니다.)\n\nalpha_dash\n\n필드의 값이 (숫자나 기호가 아닌) 알파벳[자음과 모음] 문자 및 숫자와 dash(-), underscore(_)로 이루어져야 합니다.\n\nalpha_num\n\n필드의 값이 완벽하게 (숫자나 기호가 아닌) 알파벳[자음과 모음] 문자 및 숫자로 이루어져야 합니다.\n\narray\n\n필드의 값이 반드시 php 배열 형태이어야 합니다.\n\nbefore:date\n\n필드의 값이 반드시 주어진 날짜보다 앞서야 합니다. 날짜는 strtotime php 함수를 통해 비교됩니다.\n\nbetween:min,max\n\n필드의 값이, 주어진 min 과 _max_의 사이의 값이어야 합니다. 문자열, 숫자, 그리고 파일이 size 룰에 의해 같은 방식으로 평가될 수 있습니다.\n\nboolean\n\n필드의 값이 반드시 boolean으로 캐스팅될 수 있어야 합니다. 허용되는 값은 true, false, 1, 0, \"1\", \"0\" 입니다.\n\nconfirmed\n\n필드의 값이 foo_confirmation의 매칭되는 필드를 가져야 합니다. 예를 들어 만약 필드가 password라면, password_confirmation라는 필드가 입력값 중에 있어야 합니다.\n\ndate\n\n필드의 값이 strtotime php 함수에서 인식할 수 있는 올바른 날짜여야 합니다.\n\ndateformat:_format\n\n필드의 값이 반드시 주어진 _format_과 일지해야 합니다. 주어진 포맷은 date_parse_from_format php 함수에 의해서 연산될 것입니다. 필드의 유효성을 검사할 때에는 date와 date_format 중 하나만 사용해야 합니다.\n\ndifferent:field\n\n필드의 값이 주어진 _field_의 값과 달라야 합니다.\n\ndigits:value\n\n필드의 값이 반드시 _숫자_여야 하고, 길이가 _value_이어야 합니다.\n\ndigitsbetween:_min,max\n\n필드의 값이 주어진 _min_과 max 사이의 길이를 가져야 합니다.\n\nemail\n\n필드의 값이 이메일 주소 형식이어야 합니다.\n\nexists:table,column\n\n필드의 값이 주어진 데이터베이스 테이블에 존재하는 값이어야 합니다.\n\nexists 룰의 기본 사용법\n\n'state' => 'exists:states'\n\n\n특정 컬럼명 지정하기\n\n'state' => 'exists:states,abbreviation'\n\n\n쿼리문의 \"where\" 구문에 추가될 더 많은 조건을 지정할 수도 있습니다:\n\n'email' => 'exists:staff,email,account_id,1'\n\n\n\"where\" 구분에 null 혹은 not_null을 전달할 수도 있습니다:\n\n'email' => 'exists:staff,email,deleted_at,null'\n\n'email' => 'exists:staff,email,deleted_at,not_null'\n\n\nimage\n\n이미지 파일(jpeg, png, bmp, gif, svg)이어야 합니다.\n\nin:foo,bar,...\n\n필드의 값이 주어진 목록에 포함돼 있어야 합니다.\n\ninteger\n\n필드의 값이 정수여야 합니다.\n\nip\n\n필드의 값이 ip 주소여야 합니다.\n\njson\n\n필드의 값이 유효한 json 문자열이어야 합니다.\n\nmax:value\n\n필드의 값이 반드시 _value_보다 작거나 같아야 합니다. 문자열, 숫자, 그리고 파일이 size 룰에 의해 같은 방식으로 평가될 수 있습니다.\n\nmimes:foo,bar,...\n\n파일의 mime 타입이 주어진 확장자 리스트 중에 하나와 일치해야 합니다.\n\nmime 룰의 기본 사용법\n\n'photo' => 'mimes:jpeg,bmp,png'\n\n\n여러분은 확장자를 지정하기만 하면 되지만, 이 경우 파일의 컨텐트를 읽고 mime 타입을 추정함으로써 이 파일의 mime의 유효성을 검사합니다.\n\nmime 타입과 그에 상응하는 확장의 전체 목록은 다음의 위치에서 확인하실 수 있습니다: http://svn.apache.org/repos/asf/httpd/httpd/trunk/docs/conf/mime.types\n\nmin:value\n\n필드의 값이 반드시 value 보다 크거나 같아야 합니다. 문자열, 숫자, 그리고 파일이 size 룰에 의해 같은 방식으로 평가될 수 있습니다.\n\nnotin:_foo,bar,...\n\n필드의 값이 주어진 목록에 존재하지 않아야 합니다.\n\nnumeric\n\n필드의 값이 숫자여야 합니다.\n\nregex:pattern\n\n필드의 값이 주어진 정규식 표현과 일치해야 합니다.\n\n참고: regex 패턴을 사용할 때, 특히 정규 표현식에 파이프 문자열이 있다면, 파이프 구분자를 사용하는 대신 배열 형식을 사용하여 룰을 지정할 필요가 있습니다.\n\nrequired\n\n입력 값 중에 해당 필드가 존재해야 하며 비어 있어서는 안됩니다. 필드는 다음의 조건 중 하나를 충족하면 \"빈(empty)\" 것으로 간주됩니다:\n\n * 값이 null인 경우.\n * 값이 비어있는 문자열인 경우.\n * 값이 비어있는 배열이거나, 비어있는 countable 객체인경우\n * 값이 경로없이 업로드된 파일인 경우\n\nrequiredif:_anotherfield,value,...\n\n만약 _filed_의 값이 _value_중의 하나와 일치한다면, 해당 필드가 반드시 존재해야 합니다.\n\nrequiredunless:_anotherfield,value,...\n\n_anotherfield_가 어떤 _value_와 동일하지 않은 이상 필드가 존재해야 합니다.\n\nrequiredwith:_foo,bar,...\n\n다른 지정된 필드중 하나라도 존재한다면, 해당 필드가 반드시 존재해야 합니다.\n\nrequiredwith_all:_foo,bar,...\n\n다른 지정된 필드가 모두 존재한다면, 해당 필드가 반드시 존재해야 합니다.\n\nrequiredwithout:_foo,bar,...\n\n다른 지정된 필드중 하나라도 존재하지 않으면, 해당 필드가 반드시 존재해야 합니다.\n\nrequiredwithout_all:_foo,bar,...\n\n다른 지정된 필드가 모두 존재하지 않으면, 해당 필드가 존재해야 합니다.\n\nsame:field\n\n필드의 값이 주어진 _field_의 값과 일치해야 합니다.\n\nsize:value\n\n필드의 값이 주어진 _value_와 일치하는 크기를 가져야 합니다. 문자열 데이터에서는 문자의 개수가 _value_와 일치해야 합니다. 숫자형식의 데이터에서는 주어진 정수값이 _value_와 일치해야 합니다. 파일에서는 킬로바이트 형식의 파일 사이즈가 _size_와 일치해야 합니다.\n\nstring\n\n필드의 값이 반드시 문자열이어야 합니다.\n\ntimezone\n\n필드의 값이 timezone_identifiers_list php 함수에서 인식 가능한 유효한 timezone 식별자여야 합니다.\n\nunique:table,column,except,idcolumn\n\n필드의 값이 주어진 데이터베이스 테이블에서 고유한 값이어야 합니다. 만약 column이 지정돼 있지 않다면 필드의 이름이 사용됩니다.\n\n특정 컬럼명 지정하기:\n\n'email' => 'unique:users,email_address'\n\n\n특정 데이터베이스 커넥션\n\n때때로, 여러분은 validator에 의해서 생성되는 데이터베이스 쿼리에 사용자가 지정한 커넥션을 필요로 할지도 모릅니다. 위에서의 검증 규칙 unique:users 에서는 데이터베이스를 쿼리하기 위해 기본 데이터 베이스 커넥션이 사용됩니다. 이를 재지정하려면 테이블 이름 후에 \".\" 표기법으로 커넥션을 지정하십시오:\n\n'email' => 'unique:connection.users,email_address'\n\n\n주어진 id에 대해서 유니크 규칙을 무시하도록 강제하기:\n\n때때로 유니크 검사를 할 때 특정 id를 무시하고자 할 수 있습니다. 예를 들어 사용자 이름, 이메일 주소 그리고 위치를 포함하는 \"프로필 업데이트\" 화면이 있습니다. 물론 이메일 주소가 고유하다는 것을 확인하고 싶을 것입니다. 하지만 사용자가 이름 필드만 바꾸고 이베일 필드를 바꾸지 않는다면 사용자가 이미 이메일 주소의 주인이기 때문에 유효 검사 오류가 던져지지 않아야 합니다. 유효 검사 오류는 사용자가 다른 사용자가 이미 사용하고 있는 이메일 주소를 제공할 때에만 던져져야 합니다. 유니크 규칙에 사용자 id를 무시하라고 강제하기 위해서는 세번째 파라미터로 id를 전달해야 합니다:\n\n'email' => 'unique:users,email_address,'.$user->id\n\n\n테이블이 id가 아닌 primary 키 컬럼 이름을 사용한다면 그 이름을 네번째 파라미터로 지정하면 됩니다:\n\n'email' => 'unique:users,email_address,'.$user->id.',user_id'\n\n\n추가적인 where 구문 추가하기:\n\n더 추가되는 조건은 쿼리에 추가될 \"where\" 구문에 대해서 지정될 것입니다.\n\n'email' => 'unique:users,email_address,null,id,account_id,1'\n\n\n위의 룰에서는, account_id가 1인 데이터 만이 유니크 검사에 포함됩니다.\n\nurl\n\n필드는 반드시 php filter_var 함수에 따라 유효한 url이어야 합니다.",charsets:{cjk:!0}},{title:"위젯박스",frontmatter:{},regularPath:"/08.%20%EC%84%9C%EB%B9%84%EC%8A%A4/service-widget_box.html",relativePath:"08. 서비스/service-widget_box.md",key:"v-bb3bbe52",path:"/08.%20%EC%84%9C%EB%B9%84%EC%8A%A4/service-widget_box.html",headers:[{level:2,title:"위젯박스\\(widgetbox\\)",slug:"위젯박스-widgetbox",charIndex:9},{level:3,title:"위젯박스 출력하기",slug:"위젯박스-출력하기",charIndex:500},{level:3,title:"위젯박스 생성하기",slug:"위젯박스-생성하기",charIndex:846},{level:3,title:"위젯박스 삭제하기",slug:"위젯박스-삭제하기",charIndex:992}],headersStr:"위젯박스\\(widgetbox\\) 위젯박스 출력하기 위젯박스 생성하기 위젯박스 삭제하기",content:"# 위젯박스\n# 위젯박스(widgetbox)\n위젯박스는 말 그대로 위젯을 담는 박스라고 생각할 수 있습니다. 위젯박스는 사이트의 화면에 출력됩니다. 사이트 관리자는 위젯박스의 편집 페이지에서 다수의 위젯을 생성한 다음, 생성된 위젯들을 위젯박스에 배치할 수 있습니다. 사이트 관리자나 개발자는 위젯박스 삽입 코드를 사용하여 화면 어디에나 위젯박스를 출력할 수 있습니다.\n\n예를들어, 위젯박스는 사이트의 사이드바 영역에 사용될 수 있습니다. 일반적인 테마의 레이아웃을 고려해보면, 헤더와 푸터, 그리고 메인 컨텐츠 영역으로 구성되며, 사이드바가 추가되기도 합니다. 사이드바 영역은 보통 사이트 관리자가 원하는 위젯들을 자유롭게 배치할 수 있기를 원합니다. 테마 개발자가 사이드바 영역에 위젯박스의 삽입 코드를 추가해놓으면, 사이트 관리자는 사이드바 영역을 자신이 원하는대로 구성할 수 있습니다. 비단 사이드바 영역이 아니더라도 개발자가 원하는 어느 영역이든 위젯박스를 출력할 수 있습니다.\n\n# 위젯박스 출력하기\n위젯박스는 아래와 같은 코드로 간단하게 출력할 수 있습니다.\n\n{{ uio('widgetbox', ['id'=>'sidebar']) }}\n\n\n위젯박스는 고유의 아이디를 가지며, 위 코드는 아이디가 sidebar인 위젯박스를 화면에 출력합니다. 만약 아이디가 sidebar인 위젯박스가 아직 존재하지 않는다면, 사이트 관리자가 클릭하면 즉시 위젯박스를 생성할 수 있는 링크를 아래와 같이 출력합니다.\n\n위젯박스[sidebar]를 찾을 수 없습니다. [바로 생성하기]\n\n\n이미 sidebar 위젯박스가 존재한다면, 바로 위젯박스가 출력되며, 위젯박스 하단에 위젯박스의 편집페이지 링크가 출력됩니다.\n\n# 위젯박스 생성하기\n위젯박스를 출력하기 전에 미리 위젯박스를 생성할 수 있습니다. XeWidgetBox 파사드를 사용하십시오.\n\nXeWidgetbox::create(['id'=>'sidebar', 'title'=>'사이드바', 'content'=>'');\n\n\n# 위젯박스 삭제하기\n생성된 위젯박스는 XeWidgetBox 파사드의 delete 메소드를 사용하여 삭제할 수 있습니다.\n\nXeWidgetbox::delete('sidebar');",contentLowercase:"# 위젯박스\n# 위젯박스(widgetbox)\n위젯박스는 말 그대로 위젯을 담는 박스라고 생각할 수 있습니다. 위젯박스는 사이트의 화면에 출력됩니다. 사이트 관리자는 위젯박스의 편집 페이지에서 다수의 위젯을 생성한 다음, 생성된 위젯들을 위젯박스에 배치할 수 있습니다. 사이트 관리자나 개발자는 위젯박스 삽입 코드를 사용하여 화면 어디에나 위젯박스를 출력할 수 있습니다.\n\n예를들어, 위젯박스는 사이트의 사이드바 영역에 사용될 수 있습니다. 일반적인 테마의 레이아웃을 고려해보면, 헤더와 푸터, 그리고 메인 컨텐츠 영역으로 구성되며, 사이드바가 추가되기도 합니다. 사이드바 영역은 보통 사이트 관리자가 원하는 위젯들을 자유롭게 배치할 수 있기를 원합니다. 테마 개발자가 사이드바 영역에 위젯박스의 삽입 코드를 추가해놓으면, 사이트 관리자는 사이드바 영역을 자신이 원하는대로 구성할 수 있습니다. 비단 사이드바 영역이 아니더라도 개발자가 원하는 어느 영역이든 위젯박스를 출력할 수 있습니다.\n\n# 위젯박스 출력하기\n위젯박스는 아래와 같은 코드로 간단하게 출력할 수 있습니다.\n\n{{ uio('widgetbox', ['id'=>'sidebar']) }}\n\n\n위젯박스는 고유의 아이디를 가지며, 위 코드는 아이디가 sidebar인 위젯박스를 화면에 출력합니다. 만약 아이디가 sidebar인 위젯박스가 아직 존재하지 않는다면, 사이트 관리자가 클릭하면 즉시 위젯박스를 생성할 수 있는 링크를 아래와 같이 출력합니다.\n\n위젯박스[sidebar]를 찾을 수 없습니다. [바로 생성하기]\n\n\n이미 sidebar 위젯박스가 존재한다면, 바로 위젯박스가 출력되며, 위젯박스 하단에 위젯박스의 편집페이지 링크가 출력됩니다.\n\n# 위젯박스 생성하기\n위젯박스를 출력하기 전에 미리 위젯박스를 생성할 수 있습니다. xewidgetbox 파사드를 사용하십시오.\n\nxewidgetbox::create(['id'=>'sidebar', 'title'=>'사이드바', 'content'=>'');\n\n\n# 위젯박스 삭제하기\n생성된 위젯박스는 xewidgetbox 파사드의 delete 메소드를 사용하여 삭제할 수 있습니다.\n\nxewidgetbox::delete('sidebar');",charsets:{cjk:!0}},{title:"프론트엔드 \\(JS\\)",frontmatter:{},regularPath:"/09.%20%ED%94%84%EB%A1%A0%ED%8A%B8%EC%97%94%EB%93%9C%20(JS)/",relativePath:"09. 프론트엔드 (JS)/README.md",key:"v-24fd19eb",path:"/09.%20%ED%94%84%EB%A1%A0%ED%8A%B8%EC%97%94%EB%93%9C%20(JS)/",headersStr:null,content:"# 프론트엔드 (JS)",contentLowercase:"# 프론트엔드 (js)",charsets:{cjk:!0}},{title:"프론트 엔드 JS 시작하기",frontmatter:{},regularPath:"/09.%20%ED%94%84%EB%A1%A0%ED%8A%B8%EC%97%94%EB%93%9C%20(JS)/js.html",relativePath:"09. 프론트엔드 (JS)/js.md",key:"v-e5101580",path:"/09.%20%ED%94%84%EB%A1%A0%ED%8A%B8%EC%97%94%EB%93%9C%20(JS)/js.html",headers:[{level:2,title:"window.XE",slug:"window-xe",charIndex:108},{level:2,title:"EventEmitter",slug:"eventemitter",charIndex:188},{level:2,title:"XE.app\\(\\)",slug:"xe-app",charIndex:334}],headersStr:"window.XE EventEmitter XE.app\\(\\)",content:"# 프론트 엔드 JS 시작하기\nXpressEngine 3(이하 XE)의 Front-End의 기능 및 동작은 XE 변수에 담겨 있으며, App 및 Event, AOP를 이용할 수 있습니다.\n\n# window.XE\nwindow.XE를 노출하고 있으며, XE에서 제공하는 기능이 담겨있습니다.\n\n * Event를 구독, 트리거 할 수 있도록 EventEmitter를 확장하고 있습니다\n * Request, Router, Lang 등 내장된 App을 사용할 수 있는 상태로 포함하고 있습니다. * 각 App은 EventEmitter를 확장하고 있으며, 개별적으로 이벤트를 관리합니다.\n   \n   \n * XE.app() 메소드로 Request 등 등록된 App의 instance를 전달하는 Promise [https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/promise]를 반환합니다.\n\n# EventEmitter\nEventEmitter는 이벤트에 대한 listener를 관리하고 트리거하는데 사용됩니다.\n\n * $$emit, $$on, $$once, $$off, $$offAll\n * $$on, $$once * callback 첫번째 argument는 발생된 이벤트의 이름\n   \n   \n * before 옵션으로 순서를 조정할 수 있습니다. * 이름을 가진 listener만 대상으로 할 수 있습니다.\n   \n   \n\nXE.$$on('eventName', /*callback*/(eventName, arg1/*, arg2, ...*/) => {\n    console.debug('emitted', eventName, arg1, arg2)\n}, options)\n\nXE.$$on('setup', (eventName, arg) => {\n    console.debug('emitted', eventName, arg)\n}, { name: 'low'})\n\nXE.$$on('setup', (eventName, arg) => {\n    console.debug('emitted', eventName, arg)\n}, { name: 'common', before: 'low' } )\n\n\n# XE.app()\n * XE Object에 포함되는 모듈은 App을 확장하였으며, Singleton임\n * EventEmitter를 확장하고 있음\n * XE Core에서 다루는 것만을 고려했으므로 외부에서 이를 직접 확장하여 사용하기는 어려울 수 있음\n\n// XE.app()은 Promise를 반환 함\n\n// boot된 instance를 반환\nXE.app('Request').then((appRequest) => {\n    appRequest.get()\n})\n\n// instance를 반환 (아직 boot 되지 않았을 수 있음)\nXE.app('Request', (appRequest) => {\n    appRequest.get()\n})",contentLowercase:"# 프론트 엔드 js 시작하기\nxpressengine 3(이하 xe)의 front-end의 기능 및 동작은 xe 변수에 담겨 있으며, app 및 event, aop를 이용할 수 있습니다.\n\n# window.xe\nwindow.xe를 노출하고 있으며, xe에서 제공하는 기능이 담겨있습니다.\n\n * event를 구독, 트리거 할 수 있도록 eventemitter를 확장하고 있습니다\n * request, router, lang 등 내장된 app을 사용할 수 있는 상태로 포함하고 있습니다. * 각 app은 eventemitter를 확장하고 있으며, 개별적으로 이벤트를 관리합니다.\n   \n   \n * xe.app() 메소드로 request 등 등록된 app의 instance를 전달하는 promise [https://developer.mozilla.org/en-us/docs/web/javascript/reference/global_objects/promise]를 반환합니다.\n\n# eventemitter\neventemitter는 이벤트에 대한 listener를 관리하고 트리거하는데 사용됩니다.\n\n * $$emit, $$on, $$once, $$off, $$offall\n * $$on, $$once * callback 첫번째 argument는 발생된 이벤트의 이름\n   \n   \n * before 옵션으로 순서를 조정할 수 있습니다. * 이름을 가진 listener만 대상으로 할 수 있습니다.\n   \n   \n\nxe.$$on('eventname', /*callback*/(eventname, arg1/*, arg2, ...*/) => {\n    console.debug('emitted', eventname, arg1, arg2)\n}, options)\n\nxe.$$on('setup', (eventname, arg) => {\n    console.debug('emitted', eventname, arg)\n}, { name: 'low'})\n\nxe.$$on('setup', (eventname, arg) => {\n    console.debug('emitted', eventname, arg)\n}, { name: 'common', before: 'low' } )\n\n\n# xe.app()\n * xe object에 포함되는 모듈은 app을 확장하였으며, singleton임\n * eventemitter를 확장하고 있음\n * xe core에서 다루는 것만을 고려했으므로 외부에서 이를 직접 확장하여 사용하기는 어려울 수 있음\n\n// xe.app()은 promise를 반환 함\n\n// boot된 instance를 반환\nxe.app('request').then((apprequest) => {\n    apprequest.get()\n})\n\n// instance를 반환 (아직 boot 되지 않았을 수 있음)\nxe.app('request', (apprequest) => {\n    apprequest.get()\n})",charsets:{cjk:!0}},{title:"Lang",frontmatter:{},regularPath:"/09.%20%ED%94%84%EB%A1%A0%ED%8A%B8%EC%97%94%EB%93%9C%20(JS)/lang.html",relativePath:"09. 프론트엔드 (JS)/lang.md",key:"v-1d2914e0",path:"/09.%20%ED%94%84%EB%A1%A0%ED%8A%B8%EC%97%94%EB%93%9C%20(JS)/lang.html",headers:[{level:2,title:"XE.Lang.trans\\( id \\[, parameter\\] \\)",slug:"xe-lang-trans-id-parameter",charIndex:9}],headersStr:"XE.Lang.trans\\( id \\[, parameter\\] \\)",content:"# Lang\n# XE.Lang.trans( id [, parameter] )\nback-end로부터 전달된 다국어 목록에서 지정된 ID의 다국어를 반환합니다.\n\n * id (string) * 다국어가 정의된 key값을 지정합니다. ( 필수 요소 )\n   \n   \n * parameter (object) * object타입으로 2번째 인자에 사용하면 해당 번역에 지정된 문자열을 치환합니다.\n   \n   \n\nback-end에서 다국어를 front-end에 전달하기 위해 아래와 같이 두 가지 방법을 사용할 수 있습니다. expose_trans PHP 함수 또는 blade 지시자로 사용할 수 있습니다.\n\n// PHP helper 함수 (core/src/Xpressengine/Support/helpers.php)\nexpose_trans('xe::name'); // '이름'\n\n// blade directive\n@expose_trans('xe::msgHello') // '안녕하세요. :msg'\n\n\nfront-end에 전달되지 않은 다국어는 namespace(구분자 :: 앞의 문자열)를 제거한 key를 반환합니다('xe::msgHello'은 'msgHello').\n\n//javascript\nvar name = XE.Lang.trans('xe::name');\nvar msg = XE.Lang.trans('xe::msgHello', {msg: '반갑습니다.'});\nconsole.log(name) // 이름 or Name\nconsole.log(msg) // '안녕하세요. 반갑습니다.'",contentLowercase:"# lang\n# xe.lang.trans( id [, parameter] )\nback-end로부터 전달된 다국어 목록에서 지정된 id의 다국어를 반환합니다.\n\n * id (string) * 다국어가 정의된 key값을 지정합니다. ( 필수 요소 )\n   \n   \n * parameter (object) * object타입으로 2번째 인자에 사용하면 해당 번역에 지정된 문자열을 치환합니다.\n   \n   \n\nback-end에서 다국어를 front-end에 전달하기 위해 아래와 같이 두 가지 방법을 사용할 수 있습니다. expose_trans php 함수 또는 blade 지시자로 사용할 수 있습니다.\n\n// php helper 함수 (core/src/xpressengine/support/helpers.php)\nexpose_trans('xe::name'); // '이름'\n\n// blade directive\n@expose_trans('xe::msghello') // '안녕하세요. :msg'\n\n\nfront-end에 전달되지 않은 다국어는 namespace(구분자 :: 앞의 문자열)를 제거한 key를 반환합니다('xe::msghello'은 'msghello').\n\n//javascript\nvar name = xe.lang.trans('xe::name');\nvar msg = xe.lang.trans('xe::msghello', {msg: '반갑습니다.'});\nconsole.log(name) // 이름 or name\nconsole.log(msg) // '안녕하세요. 반갑습니다.'",charsets:{cjk:!0}},{title:"Page Modal",frontmatter:{},regularPath:"/09.%20%ED%94%84%EB%A1%A0%ED%8A%B8%EC%97%94%EB%93%9C%20(JS)/page-modal.html",relativePath:"09. 프론트엔드 (JS)/page-modal.md",key:"v-41494f00",path:"/09.%20%ED%94%84%EB%A1%A0%ED%8A%B8%EC%97%94%EB%93%9C%20(JS)/page-modal.html",headers:[{level:2,title:"Page Modal",slug:"page-modal-2",charIndex:2},{level:3,title:"XE.pageModal\\(url, options, callback\\)",slug:"xe-pagemodal-url-options-callback",charIndex:177},{level:3,title:"DOM Element data-* attruibute를 이용한 XE.pageModal 사용 방법",slug:"dom-element-data-attruibute를-이용한-xe-pagemodal-사용-방법",charIndex:578}],headersStr:"Page Modal XE.pageModal\\(url, options, callback\\) DOM Element data-* attruibute를 이용한 XE.pageModal 사용 방법",content:"# Page Modal\n# Page Modal\nXE.page의 기능을 사용하기 위해서는 xe-page.js파일을 로드하여야 합니다.\n\n//blade파일(php)에서 로드할 경우\n{{ XeFrontend::js('assets/core/xe-ui-component/js/xe-page.js')->load() }}\n\n\n# XE.pageModal(url, options, callback)\nxeModal을 실행하여 html을 해당 modal영역에 랜더링합니다. response로 html 및 js, css파일들의 경로를 전달 받습니다.\n\n# 동작 순서\n 1. js, css파일 로드\n 2. html로드\n 3. callback 실행\n 4. xeModal 실행\n\n# arguments\n * url (string) * ajax가 호출될 url\n   \n   \n * options (object) * data (object) 전송 파라미터\n    * type (string) http method 'get'|'post'\n   \n   \n * callback (function) * html append이후에 실행될 callback\n   \n   \n\n# DOM Element data-* attruibute를 이용한 XE.pageModal 사용 방법\nxe.page.js파일을 로드하면 data-toggle=\"xe-page-modal\" attribute를 사용한 DOM에 click이벤트를 바인딩 합니다.\n\n * assets/core/common/xe.page.js의 파일을 로드합니다.\n * 클릭되는 DOM에 data-toggle='xe-page-modal' attribute를 명시하여야 합니다.\n * href or data-url에 ajax를 요청할 url정보를 명시합니다.\n * data-callback으로 callback명을 명시합니다.\n * data-params로 요청시 전송할 파라미터 정보를 명시합니다. (JSON string)\n\n<a href=\"api/test\" \n    data-toggle=\"xe-page-modal\" \n    data-params=\"{'param1':'value1'}\" \n    data-callback=\"callbackFunc\">[XE.pageModal 실행]</a>\n\n\nController 예시\n\nclass ExampleController extends Controller\n{\n    public function exampleReturnPopup()\n    {\n        //api_render 헬퍼 함수의 인자로 blade 파일의 경로를 지정하면 팝업으로 띄울 수 있도록 변환해줍니다. \n        return api_render('example_blade');\n    }\n}",contentLowercase:"# page modal\n# page modal\nxe.page의 기능을 사용하기 위해서는 xe-page.js파일을 로드하여야 합니다.\n\n//blade파일(php)에서 로드할 경우\n{{ xefrontend::js('assets/core/xe-ui-component/js/xe-page.js')->load() }}\n\n\n# xe.pagemodal(url, options, callback)\nxemodal을 실행하여 html을 해당 modal영역에 랜더링합니다. response로 html 및 js, css파일들의 경로를 전달 받습니다.\n\n# 동작 순서\n 1. js, css파일 로드\n 2. html로드\n 3. callback 실행\n 4. xemodal 실행\n\n# arguments\n * url (string) * ajax가 호출될 url\n   \n   \n * options (object) * data (object) 전송 파라미터\n    * type (string) http method 'get'|'post'\n   \n   \n * callback (function) * html append이후에 실행될 callback\n   \n   \n\n# dom element data-* attruibute를 이용한 xe.pagemodal 사용 방법\nxe.page.js파일을 로드하면 data-toggle=\"xe-page-modal\" attribute를 사용한 dom에 click이벤트를 바인딩 합니다.\n\n * assets/core/common/xe.page.js의 파일을 로드합니다.\n * 클릭되는 dom에 data-toggle='xe-page-modal' attribute를 명시하여야 합니다.\n * href or data-url에 ajax를 요청할 url정보를 명시합니다.\n * data-callback으로 callback명을 명시합니다.\n * data-params로 요청시 전송할 파라미터 정보를 명시합니다. (json string)\n\n<a href=\"api/test\" \n    data-toggle=\"xe-page-modal\" \n    data-params=\"{'param1':'value1'}\" \n    data-callback=\"callbackfunc\">[xe.pagemodal 실행]</a>\n\n\ncontroller 예시\n\nclass examplecontroller extends controller\n{\n    public function examplereturnpopup()\n    {\n        //api_render 헬퍼 함수의 인자로 blade 파일의 경로를 지정하면 팝업으로 띄울 수 있도록 변환해줍니다. \n        return api_render('example_blade');\n    }\n}",charsets:{cjk:!0}},{title:"Page",frontmatter:{},regularPath:"/09.%20%ED%94%84%EB%A1%A0%ED%8A%B8%EC%97%94%EB%93%9C%20(JS)/page.html",relativePath:"09. 프론트엔드 (JS)/page.md",key:"v-8c98cf00",path:"/09.%20%ED%94%84%EB%A1%A0%ED%8A%B8%EC%97%94%EB%93%9C%20(JS)/page.html",headers:[{level:2,title:"Page",slug:"page-2",charIndex:2},{level:3,title:"XE.page\\(url, target, options, callback\\)",slug:"xe-page-url-target-options-callback",charIndex:186}],headersStr:"Page XE.page\\(url, target, options, callback\\)",content:"# Page\n# Page\nXE.page()의 기능을 사용하기 위해서는 xe-page.js파일을 로드하여야 합니다.\n\n// blade파일(php)에서 로드할 경우\n{{ XeFrontend::js('assets/core/xe-ui-component/js/xe-page.js')->appendTo('body')->load() }}\n\n\n# XE.page(url, target, options, callback)\ntarget영역에 html을 로드하여 화면에 랜더링합니다. response로 html 및 js, css파일들의 경로를 전달 받습니다.\n\n# 동작 순서\n 1. js, css파일 로드\n 2. html 로드\n 3. callback 실행\n\n# arguments\n * url (string) * ajax가 호출될 url\n   \n   \n * target (string) * html이 append될 selector\n   \n   \n * options (object) * data (object) 전송 파라미터\n    * type (string) http method 'get'|'post'\n    * addType (string) target에 response html을 넣어주는 방식의 타입 append, prepend, before, after. 옵션을 명시하지 않을 경우 target영역에 html을 덮어 넣습니다.\n   \n   \n\n# callback (function)\nhtml append이후에 실행될 callback\n\n# DOM Element에 data-* attruibute를 이용한 XE.page 사용 방법\nxe.page.js파일을 로드하면 data-toggle=\"xe-page\" attribute를 사용한 DOM에 click이벤트를 바인딩 합니다.\n\n * assets/core/common/xe.page.js의 파일을 로드합니다.\n * 클릭되는 DOM에 data-toggle='xe-page' attribute를 명시하여야 합니다.\n * href or data-url에 ajax를 요청할 url정보를 명시합니다.\n * data-target으로 append할 영역의 selector를 명시합니다.\n * data-callback으로 callback명을 명시합니다.\n * data-params로 요청시 전송할 파라미터 정보를 명시합니다. (JSON string)\n\n<a href=\"/api/test\" \n    data-toggle=\"xe-page\" \n    data-params=\"{'param1':'value1'}\" \n    data-target=\"#target\" \n    data-callback=\"callbackFunc\">[XE.page 실행]</a>",contentLowercase:"# page\n# page\nxe.page()의 기능을 사용하기 위해서는 xe-page.js파일을 로드하여야 합니다.\n\n// blade파일(php)에서 로드할 경우\n{{ xefrontend::js('assets/core/xe-ui-component/js/xe-page.js')->appendto('body')->load() }}\n\n\n# xe.page(url, target, options, callback)\ntarget영역에 html을 로드하여 화면에 랜더링합니다. response로 html 및 js, css파일들의 경로를 전달 받습니다.\n\n# 동작 순서\n 1. js, css파일 로드\n 2. html 로드\n 3. callback 실행\n\n# arguments\n * url (string) * ajax가 호출될 url\n   \n   \n * target (string) * html이 append될 selector\n   \n   \n * options (object) * data (object) 전송 파라미터\n    * type (string) http method 'get'|'post'\n    * addtype (string) target에 response html을 넣어주는 방식의 타입 append, prepend, before, after. 옵션을 명시하지 않을 경우 target영역에 html을 덮어 넣습니다.\n   \n   \n\n# callback (function)\nhtml append이후에 실행될 callback\n\n# dom element에 data-* attruibute를 이용한 xe.page 사용 방법\nxe.page.js파일을 로드하면 data-toggle=\"xe-page\" attribute를 사용한 dom에 click이벤트를 바인딩 합니다.\n\n * assets/core/common/xe.page.js의 파일을 로드합니다.\n * 클릭되는 dom에 data-toggle='xe-page' attribute를 명시하여야 합니다.\n * href or data-url에 ajax를 요청할 url정보를 명시합니다.\n * data-target으로 append할 영역의 selector를 명시합니다.\n * data-callback으로 callback명을 명시합니다.\n * data-params로 요청시 전송할 파라미터 정보를 명시합니다. (json string)\n\n<a href=\"/api/test\" \n    data-toggle=\"xe-page\" \n    data-params=\"{'param1':'value1'}\" \n    data-target=\"#target\" \n    data-callback=\"callbackfunc\">[xe.page 실행]</a>",charsets:{cjk:!0}},{title:"Request",frontmatter:{},regularPath:"/09.%20%ED%94%84%EB%A1%A0%ED%8A%B8%EC%97%94%EB%93%9C%20(JS)/request.html",relativePath:"09. 프론트엔드 (JS)/request.md",key:"v-51e0a908",path:"/09.%20%ED%94%84%EB%A1%A0%ED%8A%B8%EC%97%94%EB%93%9C%20(JS)/request.html",headers:[{level:2,title:"GET 요청 예시",slug:"get-요청-예시",charIndex:448}],headersStr:"GET 요청 예시",content:"# Request\nXE에 비동기 요청을 요청하고 처리하기 위해 사용합니다. 요청에 대한 결과는 Promise를 반환합니다.\n\n공통으로 다음과 같은 arguments를 지정할 수 있습니다.\n\n * url (string. required) * 요청보낼 URL 값\n   \n   \n * options (object. optional) * 서버로 전송할 data 및 parameter, header\n   \n   \n\n지원하는 Method 목록은 아래와 같습니다. HEAD를 제외하고 XE.get(), XE.post()와 같이 XE 객체에서 사용할 수도 있습니다.\n\n * GET: XE.Request.get()\n * POST: XE.Request.post()\n * DELETE: XE.Request.delete()\n * PUT: XE.Request.put()\n * HEAD: XE.Request.head()\n\n# GET 요청 예시 \nXE.get('/path/to/target', { data: { id: 123 } }).then(function (response) {  console.log(response);  // => response = { data, status, statusText }});",contentLowercase:"# request\nxe에 비동기 요청을 요청하고 처리하기 위해 사용합니다. 요청에 대한 결과는 promise를 반환합니다.\n\n공통으로 다음과 같은 arguments를 지정할 수 있습니다.\n\n * url (string. required) * 요청보낼 url 값\n   \n   \n * options (object. optional) * 서버로 전송할 data 및 parameter, header\n   \n   \n\n지원하는 method 목록은 아래와 같습니다. head를 제외하고 xe.get(), xe.post()와 같이 xe 객체에서 사용할 수도 있습니다.\n\n * get: xe.request.get()\n * post: xe.request.post()\n * delete: xe.request.delete()\n * put: xe.request.put()\n * head: xe.request.head()\n\n# get 요청 예시 \nxe.get('/path/to/target', { data: { id: 123 } }).then(function (response) {  console.log(response);  // => response = { data, status, statustext }});",charsets:{cjk:!0}},{title:"Validator",frontmatter:{},regularPath:"/09.%20%ED%94%84%EB%A1%A0%ED%8A%B8%EC%97%94%EB%93%9C%20(JS)/validator.html",relativePath:"09. 프론트엔드 (JS)/validator.md",key:"v-3683c842",path:"/09.%20%ED%94%84%EB%A1%A0%ED%8A%B8%EC%97%94%EB%93%9C%20(JS)/validator.html",headers:[{level:2,title:"Validator",slug:"validator-2",charIndex:2},{level:3,title:"폼 검증 룰의 정의",slug:"폼-검증-룰의-정의",charIndex:235},{level:3,title:"XE.Validator.setRules\\(ruleName, rules\\)",slug:"xe-validator-setrules-rulename-rules",charIndex:3179},{level:3,title:"XE.Validator.getRuleName\\($form\\)",slug:"xe-validator-getrulename-form",charIndex:3935},{level:3,title:"XE.Validator.check\\($form\\)",slug:"xe-validator-check-form",charIndex:4022},{level:3,title:"XE.Validator.validate\\($form, name, rule\\)",slug:"xe-validator-validate-form-name-rule",charIndex:4100},{level:3,title:"XE.Validator.put\\(name, callback\\)",slug:"xe-validator-put-name-callback",charIndex:4298},{level:3,title:"XE.Validator.error\\($element, message, replaceStrMap\\)",slug:"xe-validator-error-element-message-replacestrmap",charIndex:4534}],headersStr:"Validator 폼 검증 룰의 정의 XE.Validator.setRules\\(ruleName, rules\\) XE.Validator.getRuleName\\($form\\) XE.Validator.check\\($form\\) XE.Validator.validate\\($form, name, rule\\) XE.Validator.put\\(name, callback\\) XE.Validator.error\\($element, message, replaceStrMap\\)",content:'# Validator\n# Validator\nback-end에서 정의한 validation 룰을 front-end에서 사용할 수 있도록 다음과 같이 해야합니다. 이와 같이 지정한 룰은 front-end Validator에서 활용됩니다.\n\nXeFrontend::rule(\'myRuleName\', [\n    \'email\' => \'required|email\',\n    \'password\' => \'required\'\n]);\n\n\n# 폼 검증 룰의 정의\n# data-rule-alert-type (form)\n유효성 체크를 통과하지 못할 경우 보여질 메시지형태를 정의합니다. 지원하는 메시지 출력 형태는 아래와 같습니다.\n\n * toast * XE.toast 팝업의 형태로 메시지가 노출됩니다.\n   \n   \n * form * 해당 필드 요소하단에 메시지가 노출됩니다.\n   \n   \n\n<form data-rule-alert-type="toast">\n...\n</form>\n\n\n# data-valid (input element)\n입력 값을 검사할 rule을 지정합니다.\n\n<input type="text" name="email" data-valid="required|email" />\n\n\n지원하는 룰은 아래 목록에서 확인할 수 있습니다.\n\n * required * 필수 요소일 경우 사용합니다.\n   \n   \n * checked:min-max * checkbox, raido 타입에 사용됩니다.\n    * 첫번째 엘리먼트에만 해당 요소가 정의되어야 합니다.\n    * min, max는 number 타입으로 지정합니다. radio button에서는 필수 체크시 checked:1로 표기 합니다.\n   \n   \n * alpha * 알파벳으로만 사용되는 필드 값을 체크합니다.\n   \n   \n * alphanum 또는 alpha_num * 알파벳 또는 숫자 값을 체크합니다.\n   \n   \n * min * 최소 입력 글자를 체크합니다\n   \n   \n * max * 최대 입력 글자를 체크합니다\n   \n   \n * email * 이메일 형식인지 체크합니다.\n   \n   \n * url * url형식으로 입력되었는지 체크합니다.\n   \n   \n * numeric * 숫자값만 입력되었는지 체크합니다.\n   \n   \n * between:min,max * 필드 값이 최소, 최대에 만족하는지 체크합니다.\n   \n   \n * accepted * 필드의 값이 yes, on, 1, 또는 _true_이어야 합니다.\n   \n   \n * alpha_dash * 필드의 값이 (숫자나 기호가 아닌) 알파벳[자음과 모음] 문자 및 숫자와 dash(-), underscore(_)로 이루어져야 합니다.\n   \n   \n * array * 필드의 값이 배열형태이어야 합니다.\n   \n   \n * boolean * 필드의 값이 반드시 true, false, 1, 0, "1", "0" 이어야 합니다.\n   \n   \n * date * 필드의 값이 strtotime PHP 함수에서 인식할 수 있는 올바른 날짜여야 합니다.\n   \n   \n * date_format:format * 필드의 값이 반드시 주어진 format과 일지해야 합니다.\n   \n   \n * digits:value * 필드의 값이 반드시 숫자여야 하고, 길이가 value이어야 합니다\n   \n   \n * digits_between:min,max * 필드의 값이 주어진 min과 max사이의 길이를 가져야 합니다.\n   \n   \n * filled * 필드가 존재하는 경우 값이 비어있으면 안됩니다.\n   \n   \n * integer * 필드의 값이 정수여야 합니다.\n   \n   \n * ip * 필드의 값이 IP 주소여야 합니다.\n   \n   \n * mimes:foo,bar... * 파일의 MIME 타입이 주어진 확장자 리스트 중에 하나와 일치해야 합니다.\n   \n   \n * regex:pattern * 필드의 값이 주어진 정규식 표현과 일치해야 합니다.\n   \n   \n * json * 필드의 값이 유효한 JSON 문자열이어야 합니다.\n   \n   \n * string * 필드의 값이 반드시 문자열이어야 합니다.\n   \n   \n\n# data-valid-name (input element)\nvalidation 실패 시 \'resources/lang/ko|en/validation.php\' 파일에 정의된 다국어를 사용하여 :attribute 기본값으로 엘리먼트의 name속성을 사용하고 있습니다. validation 실패 메시지에서 치환되는 :attribute를 input element의 name 대신 사용자 정의할 수 있습니다.\n\n\x3c!-- XE form sample --\x3e\n<form id=\'form\' action="/users" method="POST" data-rule-alert-type="toast">\n  <input type="text" name="name" data-valid="required" data-valid-name="이름(비실명)" />\n  <input type="password" name="current_password" data-valid="required" data-valid-name="현재 비밀번호" />\n  <input type="password" name="password" data-valid="required" data-valid-name="새 비밀번호" />\n  <input type="password" name="password_confirmation" data-valid="required" data-valid-name="새 비밀번호(확인)" />\n</form>\n\n\nXE.formValidate($(\'#form\'));\n// => \'password_confirmation은(는) 필수입력 항목입니다.\'\n// 대신 \'새 비밀번호(확인)은(는) 필수입력 항목입니다.\' 메시지 출력\n\n\n# data-valid-message (input element)\n\'새 비밀번호(확인)은(는) 필수입력 항목입니다.\'와 같은 정돈하지 않은 듯한 메시지를 사용자 정의하여 변경할 수 있습니다.\n\n\x3c!-- XE form sample --\x3e\n<form>\n  <input type="password" name="password_confirmation" data-valid="required" data-valid-message="새 비밀번호는 동일하게 입력해주세요" />\n</form>\n// => \'새 비밀번호는 동일하게 입력해주세요\'\n\n\n# XE.Validator.setRules(ruleName, rules)\nrule을 정의하고 등록합니다. 필요한 rule의 다국어 메시지가 로드되지 않은 상태일경우 ajax로 필요 메시지를 요청하는 로직이 포함되어 있습니다. 룰세팅 이후에 XE.validator.init 메소드를 호출합니다.\n\n * ruleName (string) * 정의 하는 rule의 명칭입니다. form요소의 data-rule과 동일하게 작성되어야 하며 form마다 다르게 작성될 수 있습니다.\n   \n   \n * rules (object) * 유효성 체크를 위한 rule파라미터 입니다. 폼 필드의 name속성과 룰들이 등록됩니다.\n      \n      ex){"id":"required|between:10,20","file":"mimes:jpg,gif,png|between:0,2048","name":"required"}\n      \n      \n   \n   \n * XE.validator.init(ruleName) * [data-rule=ruleName]으로 정의된 폼 요소에 submit이벤트시 해당 폼의 유효성 체크를 할 수 있도록 이벤트를 바인딩 합니다.\n   \n   \n * ruleName (string)\n\nXE.Validator.setRules(\'formCheckRule\', {\n "id":"required|between:10,20",\n "file":"mimes:jpg,gif,png|between:0,2048",\n "name":"required"\n});\n\n\n# XE.Validator.getRuleName($form)\n해당 폼 요소의 ruleName을 리턴합니다.\n\n * $form (jquery object)\n\n# XE.Validator.check($form)\n해당 폼에 정의된 rule을 체크합니다.\n\n * $form (jquery object)\n\n# XE.Validator.validate($form, name, rule)\n$form 폼 요소의 name필드가 rule의 형태로 유효한지 체크합니다.\n\n * $form (jquery object) * form element\n   \n   \n * name (string) * 필드명\n   \n   \n * rule (string) * rule\n   \n   \n\n# XE.Validator.put(name, callback)\n유효성을 체크할 validator를 추가합니다.\n\n * name (string) * 추가할 validator 명칭 ex)requiredAlpha\n   \n   \n * callback (function) * validation이 실행될 때 호출할 callback. validation이 실패할 경우 false를 리턴하는 로직이 포함되어야 합니다.\n   \n   \n\n# XE.Validator.error($element, message, replaceStrMap)\n유효성체크 실패 시 호출하는 함수로 오류 메시지를 노출합니다.\n\n * $element (jquery object) * 오류를 노출할 element\n   \n   \n * message (string) * 오류 메시지\n   \n   \n * replaceStrMap (object) * 오류 메시지중 치환된 문자열 object',contentLowercase:'# validator\n# validator\nback-end에서 정의한 validation 룰을 front-end에서 사용할 수 있도록 다음과 같이 해야합니다. 이와 같이 지정한 룰은 front-end validator에서 활용됩니다.\n\nxefrontend::rule(\'myrulename\', [\n    \'email\' => \'required|email\',\n    \'password\' => \'required\'\n]);\n\n\n# 폼 검증 룰의 정의\n# data-rule-alert-type (form)\n유효성 체크를 통과하지 못할 경우 보여질 메시지형태를 정의합니다. 지원하는 메시지 출력 형태는 아래와 같습니다.\n\n * toast * xe.toast 팝업의 형태로 메시지가 노출됩니다.\n   \n   \n * form * 해당 필드 요소하단에 메시지가 노출됩니다.\n   \n   \n\n<form data-rule-alert-type="toast">\n...\n</form>\n\n\n# data-valid (input element)\n입력 값을 검사할 rule을 지정합니다.\n\n<input type="text" name="email" data-valid="required|email" />\n\n\n지원하는 룰은 아래 목록에서 확인할 수 있습니다.\n\n * required * 필수 요소일 경우 사용합니다.\n   \n   \n * checked:min-max * checkbox, raido 타입에 사용됩니다.\n    * 첫번째 엘리먼트에만 해당 요소가 정의되어야 합니다.\n    * min, max는 number 타입으로 지정합니다. radio button에서는 필수 체크시 checked:1로 표기 합니다.\n   \n   \n * alpha * 알파벳으로만 사용되는 필드 값을 체크합니다.\n   \n   \n * alphanum 또는 alpha_num * 알파벳 또는 숫자 값을 체크합니다.\n   \n   \n * min * 최소 입력 글자를 체크합니다\n   \n   \n * max * 최대 입력 글자를 체크합니다\n   \n   \n * email * 이메일 형식인지 체크합니다.\n   \n   \n * url * url형식으로 입력되었는지 체크합니다.\n   \n   \n * numeric * 숫자값만 입력되었는지 체크합니다.\n   \n   \n * between:min,max * 필드 값이 최소, 최대에 만족하는지 체크합니다.\n   \n   \n * accepted * 필드의 값이 yes, on, 1, 또는 _true_이어야 합니다.\n   \n   \n * alpha_dash * 필드의 값이 (숫자나 기호가 아닌) 알파벳[자음과 모음] 문자 및 숫자와 dash(-), underscore(_)로 이루어져야 합니다.\n   \n   \n * array * 필드의 값이 배열형태이어야 합니다.\n   \n   \n * boolean * 필드의 값이 반드시 true, false, 1, 0, "1", "0" 이어야 합니다.\n   \n   \n * date * 필드의 값이 strtotime php 함수에서 인식할 수 있는 올바른 날짜여야 합니다.\n   \n   \n * date_format:format * 필드의 값이 반드시 주어진 format과 일지해야 합니다.\n   \n   \n * digits:value * 필드의 값이 반드시 숫자여야 하고, 길이가 value이어야 합니다\n   \n   \n * digits_between:min,max * 필드의 값이 주어진 min과 max사이의 길이를 가져야 합니다.\n   \n   \n * filled * 필드가 존재하는 경우 값이 비어있으면 안됩니다.\n   \n   \n * integer * 필드의 값이 정수여야 합니다.\n   \n   \n * ip * 필드의 값이 ip 주소여야 합니다.\n   \n   \n * mimes:foo,bar... * 파일의 mime 타입이 주어진 확장자 리스트 중에 하나와 일치해야 합니다.\n   \n   \n * regex:pattern * 필드의 값이 주어진 정규식 표현과 일치해야 합니다.\n   \n   \n * json * 필드의 값이 유효한 json 문자열이어야 합니다.\n   \n   \n * string * 필드의 값이 반드시 문자열이어야 합니다.\n   \n   \n\n# data-valid-name (input element)\nvalidation 실패 시 \'resources/lang/ko|en/validation.php\' 파일에 정의된 다국어를 사용하여 :attribute 기본값으로 엘리먼트의 name속성을 사용하고 있습니다. validation 실패 메시지에서 치환되는 :attribute를 input element의 name 대신 사용자 정의할 수 있습니다.\n\n\x3c!-- xe form sample --\x3e\n<form id=\'form\' action="/users" method="post" data-rule-alert-type="toast">\n  <input type="text" name="name" data-valid="required" data-valid-name="이름(비실명)" />\n  <input type="password" name="current_password" data-valid="required" data-valid-name="현재 비밀번호" />\n  <input type="password" name="password" data-valid="required" data-valid-name="새 비밀번호" />\n  <input type="password" name="password_confirmation" data-valid="required" data-valid-name="새 비밀번호(확인)" />\n</form>\n\n\nxe.formvalidate($(\'#form\'));\n// => \'password_confirmation은(는) 필수입력 항목입니다.\'\n// 대신 \'새 비밀번호(확인)은(는) 필수입력 항목입니다.\' 메시지 출력\n\n\n# data-valid-message (input element)\n\'새 비밀번호(확인)은(는) 필수입력 항목입니다.\'와 같은 정돈하지 않은 듯한 메시지를 사용자 정의하여 변경할 수 있습니다.\n\n\x3c!-- xe form sample --\x3e\n<form>\n  <input type="password" name="password_confirmation" data-valid="required" data-valid-message="새 비밀번호는 동일하게 입력해주세요" />\n</form>\n// => \'새 비밀번호는 동일하게 입력해주세요\'\n\n\n# xe.validator.setrules(rulename, rules)\nrule을 정의하고 등록합니다. 필요한 rule의 다국어 메시지가 로드되지 않은 상태일경우 ajax로 필요 메시지를 요청하는 로직이 포함되어 있습니다. 룰세팅 이후에 xe.validator.init 메소드를 호출합니다.\n\n * rulename (string) * 정의 하는 rule의 명칭입니다. form요소의 data-rule과 동일하게 작성되어야 하며 form마다 다르게 작성될 수 있습니다.\n   \n   \n * rules (object) * 유효성 체크를 위한 rule파라미터 입니다. 폼 필드의 name속성과 룰들이 등록됩니다.\n      \n      ex){"id":"required|between:10,20","file":"mimes:jpg,gif,png|between:0,2048","name":"required"}\n      \n      \n   \n   \n * xe.validator.init(rulename) * [data-rule=rulename]으로 정의된 폼 요소에 submit이벤트시 해당 폼의 유효성 체크를 할 수 있도록 이벤트를 바인딩 합니다.\n   \n   \n * rulename (string)\n\nxe.validator.setrules(\'formcheckrule\', {\n "id":"required|between:10,20",\n "file":"mimes:jpg,gif,png|between:0,2048",\n "name":"required"\n});\n\n\n# xe.validator.getrulename($form)\n해당 폼 요소의 rulename을 리턴합니다.\n\n * $form (jquery object)\n\n# xe.validator.check($form)\n해당 폼에 정의된 rule을 체크합니다.\n\n * $form (jquery object)\n\n# xe.validator.validate($form, name, rule)\n$form 폼 요소의 name필드가 rule의 형태로 유효한지 체크합니다.\n\n * $form (jquery object) * form element\n   \n   \n * name (string) * 필드명\n   \n   \n * rule (string) * rule\n   \n   \n\n# xe.validator.put(name, callback)\n유효성을 체크할 validator를 추가합니다.\n\n * name (string) * 추가할 validator 명칭 ex)requiredalpha\n   \n   \n * callback (function) * validation이 실행될 때 호출할 callback. validation이 실패할 경우 false를 리턴하는 로직이 포함되어야 합니다.\n   \n   \n\n# xe.validator.error($element, message, replacestrmap)\n유효성체크 실패 시 호출하는 함수로 오류 메시지를 노출합니다.\n\n * $element (jquery object) * 오류를 노출할 element\n   \n   \n * message (string) * 오류 메시지\n   \n   \n * replacestrmap (object) * 오류 메시지중 치환된 문자열 object',charsets:{cjk:!0}},{frontmatter:{},regularPath:"/LICENSE.html",relativePath:"LICENSE.md",key:"v-ae688c46",path:"/LICENSE.html",headersStr:null,content:"Copyright (C) XEHub. https://www.xehub.io\n\nXE is an opensource and being developed in the opensource project. For more information, please see the link below.\n\n * Official website: https://xpressengine.io\n * Official Repository: http://github.com/xpressengine/\n\n\"XpressEngine (XE)\" is free software; you can redistribute it and/or modify it under the terms of the GNU Lesser General Public License as published by the Free Software Foundation; either version 3.0 of the License, or (at your option) any later version.\n\nThis library is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License along with this library; if not, write to the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA\n\n\n\n\n  GNU LESSER GENERAL PUBLIC LICENSE\n       Version 3, 29 June 2007\n\n\nCopyright © 2007 Free Software Foundation, Inc. https://fsf.org/\n\nEveryone is permitted to copy and distribute verbatim copies of this license document, but changing it is not allowed.\n\nThis version of the GNU Lesser General Public License incorporates the terms and conditions of version 3 of the GNU General Public License, supplemented by the additional permissions listed below.\n\n 0. Additional Definitions.\n\nAs used herein, “this License” refers to version 3 of the GNU Lesser General Public License, and the “GNU GPL” refers to version 3 of the GNU General Public License.\n\n“The Library” refers to a covered work governed by this License, other than an Application or a Combined Work as defined below.\n\nAn “Application” is any work that makes use of an interface provided by the Library, but which is not otherwise based on the Library. Defining a subclass of a class defined by the Library is deemed a mode of using an interface provided by the Library.\n\nA “Combined Work” is a work produced by combining or linking an Application with the Library. The particular version of the Library with which the Combined Work was made is also called the “Linked Version”.\n\nThe “Minimal Corresponding Source” for a Combined Work means the Corresponding Source for the Combined Work, excluding any source code for portions of the Combined Work that, considered in isolation, are based on the Application, and not on the Linked Version.\n\nThe “Corresponding Application Code” for a Combined Work means the object code and/or source code for the Application, including any data and utility programs needed for reproducing the Combined Work from the Application, but excluding the System Libraries of the Combined Work.\n\n 1. Exception to Section 3 of the GNU GPL.\n\nYou may convey a covered work under sections 3 and 4 of this License without being bound by section 3 of the GNU GPL.\n\n 2. Conveying Modified Versions.\n\nIf you modify a copy of the Library, and, in your modifications, a facility refers to a function or data to be supplied by an Application that uses the facility (other than as an argument passed when the facility is invoked), then you may convey a copy of the modified version:\n\n a) under this License, provided that you make a good faith effort to ensure that, in the event an Application does not supply the function or data, the facility still operates, and performs whatever part of its purpose remains meaningful, or\n b) under the GNU GPL, with none of the additional permissions of this License applicable to that copy.\n\n\n 3. Object Code Incorporating Material from Library Header Files.\n\nThe object code form of an Application may incorporate material from a header file that is part of the Library. You may convey such object code under terms of your choice, provided that, if the incorporated material is not limited to numerical parameters, data structure layouts and accessors, or small macros, inline functions and templates (ten or fewer lines in length), you do both of the following:\n\n a) Give prominent notice with each copy of the object code that the Library is used in it and that the Library and its use are covered by this License.\n b) Accompany the object code with a copy of the GNU GPL and this license document.\n\n\n 4. Combined Works.\n\nYou may convey a Combined Work under terms of your choice that, taken together, effectively do not restrict modification of the portions of the Library contained in the Combined Work and reverse engineering for debugging such modifications, if you also do each of the following:\n\n a) Give prominent notice with each copy of the Combined Work that the Library is used in it and that the Library and its use are covered by this License.\n b) Accompany the Combined Work with a copy of the GNU GPL and this license document.\n c) For a Combined Work that displays copyright notices during execution, include the copyright notice for the Library among these notices, as well as a reference directing the user to the copies of the GNU GPL and this license document.\n d) Do one of the following:\n     0) Convey the Minimal Corresponding Source under the terms of this License, and the Corresponding Application Code in a form suitable for, and under terms that permit, the user to recombine or relink the Application with a modified version of the Linked Version to produce a modified Combined Work, in the manner specified by section 6 of the GNU GPL for conveying Corresponding Source.\n     1) Use a suitable shared library mechanism for linking with the Library. A suitable mechanism is one that (a) uses at run time a copy of the Library already present on the user's computer system, and (b) will operate properly with a modified version of the Library that is interface-compatible with the Linked Version.\n e) Provide Installation Information, but only if you would otherwise be required to provide such information under section 6 of the GNU GPL, and only to the extent that such information is necessary to install and execute a modified version of the Combined Work produced by recombining or relinking the Application with a modified version of the Linked Version. (If you use option 4d0, the Installation Information must accompany the Minimal Corresponding Source and Corresponding Application Code. If you use option 4d1, you must provide the Installation Information in the manner specified by section 6 of the GNU GPL for conveying Corresponding Source.)\n\n\n 5. Combined Libraries.\n\nYou may place library facilities that are a work based on the Library side by side in a single library together with other library facilities that are not Applications and are not covered by this License, and convey such a combined library under terms of your choice, if you do both of the following:\n\n a) Accompany the combined library with a copy of the same work based on the Library, uncombined with any other library facilities, conveyed under the terms of this License.\n b) Give prominent notice with the combined library that part of it is a work based on the Library, and explaining where to find the accompanying uncombined form of the same work.\n\n\n 6. Revised Versions of the GNU Lesser General Public License.\n\nThe Free Software Foundation may publish revised and/or new versions of the GNU Lesser General Public License from time to time. Such new versions will be similar in spirit to the present version, but may differ in detail to address new problems or concerns.\n\nEach version is given a distinguishing version number. If the Library as you received it specifies that a certain numbered version of the GNU Lesser General Public License “or any later version” applies to it, you have the option of following the terms and conditions either of that published version or of any later version published by the Free Software Foundation. If the Library as you received it does not specify a version number of the GNU Lesser General Public License, you may choose any version of the GNU Lesser General Public License ever published by the Free Software Foundation.\n\nIf the Library as you received it specifies that a proxy can decide whether future versions of the GNU Lesser General Public License shall apply, that proxy's public statement of acceptance of any version is permanent authorization for you to choose that version for the Library.",contentLowercase:"copyright (c) xehub. https://www.xehub.io\n\nxe is an opensource and being developed in the opensource project. for more information, please see the link below.\n\n * official website: https://xpressengine.io\n * official repository: http://github.com/xpressengine/\n\n\"xpressengine (xe)\" is free software; you can redistribute it and/or modify it under the terms of the gnu lesser general public license as published by the free software foundation; either version 3.0 of the license, or (at your option) any later version.\n\nthis library is distributed in the hope that it will be useful, but without any warranty; without even the implied warranty of merchantability or fitness for a particular purpose. see the gnu lesser general public license for more details.\n\nyou should have received a copy of the gnu lesser general public license along with this library; if not, write to the free software foundation, inc., 51 franklin street, fifth floor, boston, ma 02110-1301 usa\n\n\n\n\n  gnu lesser general public license\n       version 3, 29 june 2007\n\n\ncopyright © 2007 free software foundation, inc. https://fsf.org/\n\neveryone is permitted to copy and distribute verbatim copies of this license document, but changing it is not allowed.\n\nthis version of the gnu lesser general public license incorporates the terms and conditions of version 3 of the gnu general public license, supplemented by the additional permissions listed below.\n\n 0. additional definitions.\n\nas used herein, “this license” refers to version 3 of the gnu lesser general public license, and the “gnu gpl” refers to version 3 of the gnu general public license.\n\n“the library” refers to a covered work governed by this license, other than an application or a combined work as defined below.\n\nan “application” is any work that makes use of an interface provided by the library, but which is not otherwise based on the library. defining a subclass of a class defined by the library is deemed a mode of using an interface provided by the library.\n\na “combined work” is a work produced by combining or linking an application with the library. the particular version of the library with which the combined work was made is also called the “linked version”.\n\nthe “minimal corresponding source” for a combined work means the corresponding source for the combined work, excluding any source code for portions of the combined work that, considered in isolation, are based on the application, and not on the linked version.\n\nthe “corresponding application code” for a combined work means the object code and/or source code for the application, including any data and utility programs needed for reproducing the combined work from the application, but excluding the system libraries of the combined work.\n\n 1. exception to section 3 of the gnu gpl.\n\nyou may convey a covered work under sections 3 and 4 of this license without being bound by section 3 of the gnu gpl.\n\n 2. conveying modified versions.\n\nif you modify a copy of the library, and, in your modifications, a facility refers to a function or data to be supplied by an application that uses the facility (other than as an argument passed when the facility is invoked), then you may convey a copy of the modified version:\n\n a) under this license, provided that you make a good faith effort to ensure that, in the event an application does not supply the function or data, the facility still operates, and performs whatever part of its purpose remains meaningful, or\n b) under the gnu gpl, with none of the additional permissions of this license applicable to that copy.\n\n\n 3. object code incorporating material from library header files.\n\nthe object code form of an application may incorporate material from a header file that is part of the library. you may convey such object code under terms of your choice, provided that, if the incorporated material is not limited to numerical parameters, data structure layouts and accessors, or small macros, inline functions and templates (ten or fewer lines in length), you do both of the following:\n\n a) give prominent notice with each copy of the object code that the library is used in it and that the library and its use are covered by this license.\n b) accompany the object code with a copy of the gnu gpl and this license document.\n\n\n 4. combined works.\n\nyou may convey a combined work under terms of your choice that, taken together, effectively do not restrict modification of the portions of the library contained in the combined work and reverse engineering for debugging such modifications, if you also do each of the following:\n\n a) give prominent notice with each copy of the combined work that the library is used in it and that the library and its use are covered by this license.\n b) accompany the combined work with a copy of the gnu gpl and this license document.\n c) for a combined work that displays copyright notices during execution, include the copyright notice for the library among these notices, as well as a reference directing the user to the copies of the gnu gpl and this license document.\n d) do one of the following:\n     0) convey the minimal corresponding source under the terms of this license, and the corresponding application code in a form suitable for, and under terms that permit, the user to recombine or relink the application with a modified version of the linked version to produce a modified combined work, in the manner specified by section 6 of the gnu gpl for conveying corresponding source.\n     1) use a suitable shared library mechanism for linking with the library. a suitable mechanism is one that (a) uses at run time a copy of the library already present on the user's computer system, and (b) will operate properly with a modified version of the library that is interface-compatible with the linked version.\n e) provide installation information, but only if you would otherwise be required to provide such information under section 6 of the gnu gpl, and only to the extent that such information is necessary to install and execute a modified version of the combined work produced by recombining or relinking the application with a modified version of the linked version. (if you use option 4d0, the installation information must accompany the minimal corresponding source and corresponding application code. if you use option 4d1, you must provide the installation information in the manner specified by section 6 of the gnu gpl for conveying corresponding source.)\n\n\n 5. combined libraries.\n\nyou may place library facilities that are a work based on the library side by side in a single library together with other library facilities that are not applications and are not covered by this license, and convey such a combined library under terms of your choice, if you do both of the following:\n\n a) accompany the combined library with a copy of the same work based on the library, uncombined with any other library facilities, conveyed under the terms of this license.\n b) give prominent notice with the combined library that part of it is a work based on the library, and explaining where to find the accompanying uncombined form of the same work.\n\n\n 6. revised versions of the gnu lesser general public license.\n\nthe free software foundation may publish revised and/or new versions of the gnu lesser general public license from time to time. such new versions will be similar in spirit to the present version, but may differ in detail to address new problems or concerns.\n\neach version is given a distinguishing version number. if the library as you received it specifies that a certain numbered version of the gnu lesser general public license “or any later version” applies to it, you have the option of following the terms and conditions either of that published version or of any later version published by the free software foundation. if the library as you received it does not specify a version number of the gnu lesser general public license, you may choose any version of the gnu lesser general public license ever published by the free software foundation.\n\nif the library as you received it specifies that a proxy can decide whether future versions of the gnu lesser general public license shall apply, that proxy's public statement of acceptance of any version is permanent authorization for you to choose that version for the library.",charsets:{}},{title:"Home",frontmatter:{home:!0,heroImage:"/logo-xpressengine.svg",heroText:"Xpressengine 3 가이드 문서",tagline:"XE 사용자 매뉴얼에 오신 것을 환영합니다!",actionText:"시작하기 →",actionLink:"/01.%20시작하기/Recommended-Specifications.html",features:[{title:"Simplicity First",details:"Minimal setup with markdown-centered project structure helps you focus on writing."},{title:"Vue-Powered",details:"Enjoy the dev experience of Vue + webpack, use Vue components in markdown, and develop custom themes with Vue."},{title:"Performant",details:"VuePress generates pre-rendered static HTML for each page, and runs as an SPA once a page is loaded."}],footer:"MIT Licensed | Copyright © 2018-present Evan You"},regularPath:"/",relativePath:"README.md",key:"v-23dd47c4",path:"/",headersStr:null,content:"# 어서오세요\nXE 사용자 매뉴얼에 오신 것을 환영합니다! 이 페이지에서는 XE를 사용하여 내 사이트를 만들고 테마와 익스텐션을 만드는 방법에 대해 보여줍니다.\n\n당신의 개성 넘치고 멋있는 사이트에 많은 사람이 방문하고, 글을 읽고, 공유하도록 도와드립니다. 1분 안에 설치하고 안정적인 웹 편집을 통해 게시물을 빠르게 발행해 보세요.\n\nXE3는 특히 커뮤니티에 강합니다. 다양한 게시판을 활용해 나만의 커뮤니티를 만들어 보세요. 물론 포트폴리오, 쇼핑몰, 회사 사이트 등 주제에 제약 없이 사이트 제작이 가능합니다.\n\nXE3 웹사이트를 운영하는데 필요한 역동적인 설계는 유연한 설정 관리로부터 시작됩니다. 한 번의 설정 변경으로 여러 개의 게시판에 적용되게 설계할 수 있습니다.\n\n이 모든 문서는 Github [https://github.com/xpressengine/xpressengine-manual]에 있으며 수정과 개선이 필요한 경우 알려주세요 ❤️\n당신의 참여로 오픈소스 프로젝트가 발전할 수 있답니다!\n\n# 버그\nXE에 버그가 있다고 생각하거나 잘못된 문서의 내용을 보고하려면 이슈트래커 [https://github.com/xpressengine/xpressengine/issues]에 알려주세요.\n\n# 주요 도움말 링크\n * 사이트 설정\n * 개발자 문서\n * 테마 개발/제작\n * 스킨 개발/제작\n * 위젯 개발/제작\n * 모듈 개발/제작\n * 컴포넌트 제작\n * 서비스\n * 프론트엔드 (JS)\n * XE3 API [http://api.xpressengine.io/master/index.html]\n\n# 멋진 작품을 만들어보세요!\n우리는 웹마스터와, 창작자, 기술기업을 사랑하며 멋진 작풍믈 만들 수 있도록 실용적인 업데이트와 문서를 계속 추가하고 업데이트할 계획입니다.\n\n커뮤니티를 만들거나 회사 사이트를 만들거나, 무엇을 하더라도 XE와 함께하세요!\n\n# 도움이 필요하신가요?\n설치부터 운영까지 생기는 문제들을 정리한 헬프센터에서 미리 준비된 가이드를 통해 문제를 해결하고, 찾아낼 수 있습니다. 그리고 문제를 해결할 수 없거나 더 깊은 기술지원을 받고 싶다면 QnA 게시판과 기술지원 서비스를 신청할 수 있습니다.\n\n * XE3 공식 커뮤니티에서의 도움은 QnA [https://www.xpressengine.io/qna] 에서 받을 수 있습니다.\n * 기술적인 부분의 도움을 받고 싶다면 기술지원 서비스 [https://www.xpressengine.io/tech_service]를 통해 더 깊이 있는 지원을 받을 수 있습니다.",contentLowercase:"# 어서오세요\nxe 사용자 매뉴얼에 오신 것을 환영합니다! 이 페이지에서는 xe를 사용하여 내 사이트를 만들고 테마와 익스텐션을 만드는 방법에 대해 보여줍니다.\n\n당신의 개성 넘치고 멋있는 사이트에 많은 사람이 방문하고, 글을 읽고, 공유하도록 도와드립니다. 1분 안에 설치하고 안정적인 웹 편집을 통해 게시물을 빠르게 발행해 보세요.\n\nxe3는 특히 커뮤니티에 강합니다. 다양한 게시판을 활용해 나만의 커뮤니티를 만들어 보세요. 물론 포트폴리오, 쇼핑몰, 회사 사이트 등 주제에 제약 없이 사이트 제작이 가능합니다.\n\nxe3 웹사이트를 운영하는데 필요한 역동적인 설계는 유연한 설정 관리로부터 시작됩니다. 한 번의 설정 변경으로 여러 개의 게시판에 적용되게 설계할 수 있습니다.\n\n이 모든 문서는 github [https://github.com/xpressengine/xpressengine-manual]에 있으며 수정과 개선이 필요한 경우 알려주세요 ❤️\n당신의 참여로 오픈소스 프로젝트가 발전할 수 있답니다!\n\n# 버그\nxe에 버그가 있다고 생각하거나 잘못된 문서의 내용을 보고하려면 이슈트래커 [https://github.com/xpressengine/xpressengine/issues]에 알려주세요.\n\n# 주요 도움말 링크\n * 사이트 설정\n * 개발자 문서\n * 테마 개발/제작\n * 스킨 개발/제작\n * 위젯 개발/제작\n * 모듈 개발/제작\n * 컴포넌트 제작\n * 서비스\n * 프론트엔드 (js)\n * xe3 api [http://api.xpressengine.io/master/index.html]\n\n# 멋진 작품을 만들어보세요!\n우리는 웹마스터와, 창작자, 기술기업을 사랑하며 멋진 작풍믈 만들 수 있도록 실용적인 업데이트와 문서를 계속 추가하고 업데이트할 계획입니다.\n\n커뮤니티를 만들거나 회사 사이트를 만들거나, 무엇을 하더라도 xe와 함께하세요!\n\n# 도움이 필요하신가요?\n설치부터 운영까지 생기는 문제들을 정리한 헬프센터에서 미리 준비된 가이드를 통해 문제를 해결하고, 찾아낼 수 있습니다. 그리고 문제를 해결할 수 없거나 더 깊은 기술지원을 받고 싶다면 qna 게시판과 기술지원 서비스를 신청할 수 있습니다.\n\n * xe3 공식 커뮤니티에서의 도움은 qna [https://www.xpressengine.io/qna] 에서 받을 수 있습니다.\n * 기술적인 부분의 도움을 받고 싶다면 기술지원 서비스 [https://www.xpressengine.io/tech_service]를 통해 더 깊이 있는 지원을 받을 수 있습니다.",charsets:{cjk:!0}},{title:"토글 메뉴 제작 방법",frontmatter:{},regularPath:"/05.%20%ED%94%8C%EB%9F%AC%EA%B7%B8%EC%9D%B8%20%EA%B0%9C%EB%B0%9C/toggle-menu-guide.html",relativePath:"05. 플러그인 개발/toggle-menu-guide.md",key:"v-12c92a2b",path:"/05.%20%ED%94%8C%EB%9F%AC%EA%B7%B8%EC%9D%B8%20%EA%B0%9C%EB%B0%9C/toggle-menu-guide.html",headers:[{level:2,title:"토글메뉴",slug:"토글메뉴",charIndex:16},{level:3,title:"토글메뉴 생성하기",slug:"토글메뉴-생성하기",charIndex:306},{level:3,title:"토글메뉴 등록",slug:"토글메뉴-등록",charIndex:1724},{level:3,title:"토글메뉴 띄우기",slug:"토글메뉴-띄우기",charIndex:2474},{level:3,title:"토글메뉴 관리",slug:"토글메뉴-관리",charIndex:3700}],headersStr:"토글메뉴 토글메뉴 생성하기 토글메뉴 등록 토글메뉴 띄우기 토글메뉴 관리",content:'# 토글 메뉴 제작 방법\n# 토글메뉴\n부가적으로 필요한 기능들을 드롭박스로 호출할 수 있도록 토글메뉴를 사용할 수 있습니다. 예를 들어 게시글 페이지에서 게시글 작성자를 클릭하면 프로필을 보는 메뉴나, 회원의 관리페이지로 넘어갈 수 있는 토글메뉴가 우측에 나타나고, 공유아이콘을 클릭하면 페이스북에 공유하기, 라인에 공유하기, 트위터에 공유하기와 같은 토글메뉴 드롭박스에 나타나게 할 수 있습니다.\n\n토글메뉴는 형태에 따라 3가지 타입을 지원합니다.\n\n * MENUTYPE_EXEC\n * MENUTYPE_LINK\n * MENUTYPE_RAW\n\n# 토글메뉴 생성하기\n추가하고자 하는 새로운 토글메뉴 클래스에서 AbstractToggleMenu 를 상속 받습니다. 그리고 명시된 추상메서드를 구현합니다.\n\n<?php\n// plugins/myplugin/src/ToggleMenus/ToggleItem.php\nnamespace MyPlugin\\ToggleMenus;\n\nclass ToggleItem extends AbstractToggleMenu\n{\n    public function getText()\n    {\n      return \'string\';\n    }\n\n    public function getType()\n    {\n      // implement code\n\n      return static::MENUTYPE_RAW\n    }\n\n    public function getAction()\n    {\n      return \'do_something()\';\n    }\n\n    public function getScript()\n    {\n      return \'js_file_directory\';\n    }\n}\n\n\n * getText: 메뉴가 펼쳐졌을때 보여지게될 문자열입니다.\n * getType: MENUTYPE_EXEC, MENUTYPE_LINK, MENUTYPE_RAW 세 가지 중 한가지를 반환해야 합니다.\n * getAction: 해당 메뉴를 클릭했을때 실행 되어질 js 문자열입니다. 만약 타입이 raw 인 경우 html 이 반환되어야 합니다.\n * getScript: 메뉴의 동작을 위해 특정 js 파일이 필요한 경우 해당 파일의 경로를 반환해 줍니다.\n\n# exec\nexec 타입은 getAction 에 의해 반환된 문자열이 그 자체로 js 로 실행 가능한 형태를 가집니다. 특정 함수를 실행하는 경우 함수에서 필요로하는 인자는 해당 토글메뉴내에서 제공되어야 합니다.\n\npublic function getType()\n{\n  return static::MENUTYPE_EXEC;\n}\n\npublic function getAction()\n{\n  return \'alert("hello")\';\n}\n\n\n# link\nlink 타입은 클릭시 다른페이지로 이동하는 메뉴입니다.\n\npublic function getType()\n{\n  return static::MENUTYPE_LINK;\n}\n\npublic function getAction()\n{\n  return \'/\';\n}\n\n\n# raw\nraw 타입은 메뉴에 표현될 형태부터 실행될 방식까지 직접 지정하여 사용하는 방식입니다.\n\npublic function getType()\n{\n  return static::MENUTYPE_RAW;\n}\n\npublic function getAction()\n{\n  return \'<a href="#" onclick="method(\'argument\')">Raw메뉴</a>\';\n}\n\n\n# 토글메뉴 등록\n# 컴포넌트 아이디\n컴포넌트 아이디는 아래와 같은 규칙으로 작성합니다.\n\n<type>/toggleMenu/<plugin>@<name>\n\n\ntype은 토글메뉴를 사용할 타입의 아이디 입니다. (ex - user, module/board@board)\nplugin은 토글메뉴가 소속될 플러그인 디렉토리 이름입니다.\nname은 토글메뉴의 고유한 아이디 입니다.\n\n# 컴포넌트 등록\ncomposer.json 파일에 다음과 같이 입력합니다.\n\n// plugins/my_plugin/composer.json\n...\n  "extra": {\n        "xpressengine": {\n            "title": "my plugin",\n            "component": {\n                "my_plugin@my_field/toggleMenu/my_plugin@toggle_item": {\n                    "class": "GilDongHong\\\\XePlugin\\\\MyPlugin\\\\ToggleMenus\\\\ToggleItem",\n                    "name": "toggle_item ToggleItem",\n                    "description": "The toggleMenu supported by My_plugin plugin."\n                }\n            }\n        }\n    },\n\n    ...\n\n\n# 토글메뉴 띄우기\ntype을 통해 등록된 토글메뉴를 불러올 수 있습니다. 가장 직관적인 방법은 ToggleMenuHandler의 getItems 메쏘드를 사용하는 것입니다.\n\napp(\'xe.toggleMenu\')->getItems(\'user\');\n\n//[\n//     "user/toggleMenu/xpressengine@profile" => App\\ToggleMenus\\User\\ProfileItem,\n//     "user/toggleMenu/xpressengine@manage" => App\\ToggleMenus\\User\\ManageItem,\n//]\n\n\n해당 함수는 user를 $type으로 삼은 ToggleMenu 아이템들을 리턴합니다.\n타입에 따라서 모듈과 같이 instance를 사용하는 경우 두 번째 파라미터로 $instanceId,\nUser 모델과 같이 고유한 키값을 가지는 경우 세 번째 파라미터로 $identifier를 받습니다.\n각 파라미터는 ToggleMenu의 getAction에서 받아서 처리합니다.\n\n# Frontend\nXE는 Frontend에서 ToggleMenu 아이템들을 로드할 수 있는 방법을 이미 준비했습니다.\n<a>태그 안에 몇 가지 속성을 주는 것만으로 해당 type에서 필요한 ToggleMenu를\n<li>...</li>태그에 담아 렌더링할 수 있습니다.\n\ndata-toggle "xe-page-toggle-menu"를 삽입합니다.\ndata-url 를 넣어 toggleMenu 리스트를 동적으로 호출할 url을 삽입합니다.\ndata-data 사용할 type과 해당 type이 필요로 하는 파라미터를 추가로 넣어줍니다.($identifier의 키값을 id로 받고 있는 것을 확인합니다.)\ndata-side 렌더링된 리스트가 해당 태그 어느 방향에 위치할지 결정합니다.\n\n아래의 예제는 board플러그인의 모듈을 target으로 삼은 targetMenu를 호출하는 태그입니다.\n\n<a href="#" \n   data-toggle="xe-page-toggle-menu"\n   data-url="{{route(\'toggleMenuPage\')}}"\n   data-data=\'{!! json_encode([\'id\'=>$item->id,\'type\'=>\'module/board@board\',\'instanceId\'=>$item->instance_id]) !!}\'\n   data-side="dropdown-menu-right">\n   {{$text}}\n</a>\n\n\n# 토글메뉴 관리\n관리자가 해당 타입에 등록되어있는 토글메뉴를 사용할지 안할지를 결정할 수 있도록 화면을 띄워줄 수 있습니다.\n\n{!! new ToggleMenuSection($type) !!}\n\n\n위 예제는 $type을 사용하는 토글메뉴들의 리스트를 on/off할 수 있는 토글버튼과 함께 렌더링합니다. 저장 버튼을 누르면 ToggleMenuHandler를 통해 config에 설정정보를 저장합니다.',contentLowercase:'# 토글 메뉴 제작 방법\n# 토글메뉴\n부가적으로 필요한 기능들을 드롭박스로 호출할 수 있도록 토글메뉴를 사용할 수 있습니다. 예를 들어 게시글 페이지에서 게시글 작성자를 클릭하면 프로필을 보는 메뉴나, 회원의 관리페이지로 넘어갈 수 있는 토글메뉴가 우측에 나타나고, 공유아이콘을 클릭하면 페이스북에 공유하기, 라인에 공유하기, 트위터에 공유하기와 같은 토글메뉴 드롭박스에 나타나게 할 수 있습니다.\n\n토글메뉴는 형태에 따라 3가지 타입을 지원합니다.\n\n * menutype_exec\n * menutype_link\n * menutype_raw\n\n# 토글메뉴 생성하기\n추가하고자 하는 새로운 토글메뉴 클래스에서 abstracttogglemenu 를 상속 받습니다. 그리고 명시된 추상메서드를 구현합니다.\n\n<?php\n// plugins/myplugin/src/togglemenus/toggleitem.php\nnamespace myplugin\\togglemenus;\n\nclass toggleitem extends abstracttogglemenu\n{\n    public function gettext()\n    {\n      return \'string\';\n    }\n\n    public function gettype()\n    {\n      // implement code\n\n      return static::menutype_raw\n    }\n\n    public function getaction()\n    {\n      return \'do_something()\';\n    }\n\n    public function getscript()\n    {\n      return \'js_file_directory\';\n    }\n}\n\n\n * gettext: 메뉴가 펼쳐졌을때 보여지게될 문자열입니다.\n * gettype: menutype_exec, menutype_link, menutype_raw 세 가지 중 한가지를 반환해야 합니다.\n * getaction: 해당 메뉴를 클릭했을때 실행 되어질 js 문자열입니다. 만약 타입이 raw 인 경우 html 이 반환되어야 합니다.\n * getscript: 메뉴의 동작을 위해 특정 js 파일이 필요한 경우 해당 파일의 경로를 반환해 줍니다.\n\n# exec\nexec 타입은 getaction 에 의해 반환된 문자열이 그 자체로 js 로 실행 가능한 형태를 가집니다. 특정 함수를 실행하는 경우 함수에서 필요로하는 인자는 해당 토글메뉴내에서 제공되어야 합니다.\n\npublic function gettype()\n{\n  return static::menutype_exec;\n}\n\npublic function getaction()\n{\n  return \'alert("hello")\';\n}\n\n\n# link\nlink 타입은 클릭시 다른페이지로 이동하는 메뉴입니다.\n\npublic function gettype()\n{\n  return static::menutype_link;\n}\n\npublic function getaction()\n{\n  return \'/\';\n}\n\n\n# raw\nraw 타입은 메뉴에 표현될 형태부터 실행될 방식까지 직접 지정하여 사용하는 방식입니다.\n\npublic function gettype()\n{\n  return static::menutype_raw;\n}\n\npublic function getaction()\n{\n  return \'<a href="#" onclick="method(\'argument\')">raw메뉴</a>\';\n}\n\n\n# 토글메뉴 등록\n# 컴포넌트 아이디\n컴포넌트 아이디는 아래와 같은 규칙으로 작성합니다.\n\n<type>/togglemenu/<plugin>@<name>\n\n\ntype은 토글메뉴를 사용할 타입의 아이디 입니다. (ex - user, module/board@board)\nplugin은 토글메뉴가 소속될 플러그인 디렉토리 이름입니다.\nname은 토글메뉴의 고유한 아이디 입니다.\n\n# 컴포넌트 등록\ncomposer.json 파일에 다음과 같이 입력합니다.\n\n// plugins/my_plugin/composer.json\n...\n  "extra": {\n        "xpressengine": {\n            "title": "my plugin",\n            "component": {\n                "my_plugin@my_field/togglemenu/my_plugin@toggle_item": {\n                    "class": "gildonghong\\\\xeplugin\\\\myplugin\\\\togglemenus\\\\toggleitem",\n                    "name": "toggle_item toggleitem",\n                    "description": "the togglemenu supported by my_plugin plugin."\n                }\n            }\n        }\n    },\n\n    ...\n\n\n# 토글메뉴 띄우기\ntype을 통해 등록된 토글메뉴를 불러올 수 있습니다. 가장 직관적인 방법은 togglemenuhandler의 getitems 메쏘드를 사용하는 것입니다.\n\napp(\'xe.togglemenu\')->getitems(\'user\');\n\n//[\n//     "user/togglemenu/xpressengine@profile" => app\\togglemenus\\user\\profileitem,\n//     "user/togglemenu/xpressengine@manage" => app\\togglemenus\\user\\manageitem,\n//]\n\n\n해당 함수는 user를 $type으로 삼은 togglemenu 아이템들을 리턴합니다.\n타입에 따라서 모듈과 같이 instance를 사용하는 경우 두 번째 파라미터로 $instanceid,\nuser 모델과 같이 고유한 키값을 가지는 경우 세 번째 파라미터로 $identifier를 받습니다.\n각 파라미터는 togglemenu의 getaction에서 받아서 처리합니다.\n\n# frontend\nxe는 frontend에서 togglemenu 아이템들을 로드할 수 있는 방법을 이미 준비했습니다.\n<a>태그 안에 몇 가지 속성을 주는 것만으로 해당 type에서 필요한 togglemenu를\n<li>...</li>태그에 담아 렌더링할 수 있습니다.\n\ndata-toggle "xe-page-toggle-menu"를 삽입합니다.\ndata-url 를 넣어 togglemenu 리스트를 동적으로 호출할 url을 삽입합니다.\ndata-data 사용할 type과 해당 type이 필요로 하는 파라미터를 추가로 넣어줍니다.($identifier의 키값을 id로 받고 있는 것을 확인합니다.)\ndata-side 렌더링된 리스트가 해당 태그 어느 방향에 위치할지 결정합니다.\n\n아래의 예제는 board플러그인의 모듈을 target으로 삼은 targetmenu를 호출하는 태그입니다.\n\n<a href="#" \n   data-toggle="xe-page-toggle-menu"\n   data-url="{{route(\'togglemenupage\')}}"\n   data-data=\'{!! json_encode([\'id\'=>$item->id,\'type\'=>\'module/board@board\',\'instanceid\'=>$item->instance_id]) !!}\'\n   data-side="dropdown-menu-right">\n   {{$text}}\n</a>\n\n\n# 토글메뉴 관리\n관리자가 해당 타입에 등록되어있는 토글메뉴를 사용할지 안할지를 결정할 수 있도록 화면을 띄워줄 수 있습니다.\n\n{!! new togglemenusection($type) !!}\n\n\n위 예제는 $type을 사용하는 토글메뉴들의 리스트를 on/off할 수 있는 토글버튼과 함께 렌더링합니다. 저장 버튼을 누르면 togglemenuhandler를 통해 config에 설정정보를 저장합니다.',charsets:{cjk:!0}},{title:"UI 오브젝트 제작 방법",frontmatter:{},regularPath:"/05.%20%ED%94%8C%EB%9F%AC%EA%B7%B8%EC%9D%B8%20%EA%B0%9C%EB%B0%9C/ui-object-guide.html",relativePath:"05. 플러그인 개발/ui-object-guide.md",key:"v-4053356b",path:"/05.%20%ED%94%8C%EB%9F%AC%EA%B7%B8%EC%9D%B8%20%EA%B0%9C%EB%B0%9C/ui-object-guide.html",headers:[{level:2,title:"UI오브젝트",slug:"ui오브젝트",charIndex:18},{level:3,title:"클래스 생성하기",slug:"클래스-생성하기",charIndex:384},{level:3,title:"출력코드 작성하기",slug:"출력코드-작성하기",charIndex:907},{level:3,title:"UI오브젝트 등록하기",slug:"ui오브젝트-등록하기",charIndex:1419},{level:3,title:"alias 등록하기",slug:"alias-등록하기",charIndex:1742},{level:3,title:"폼 관련 UI오브젝트",slug:"폼-관련-ui오브젝트",charIndex:2239}],headersStr:"UI오브젝트 클래스 생성하기 출력코드 작성하기 UI오브젝트 등록하기 alias 등록하기 폼 관련 UI오브젝트",content:"# UI 오브젝트 제작 방법\n# UI오브젝트\nUI오브젝트는 아래와 같이 매우 간단한 절차로 작동합니다.\n\n 1. PHP코드나 블레이드 파일에서 uio($id, $arguments, $callback) 함수 호출\n 2. uio 함수는 $id에 해당하는 UI오브젝트의 인스턴스를 생성(생성시 $arguments 와 $callback을 파라미터로 전달)\n 3. 생성된 인스턴스의 render 메소드를 호출\n 4. render 메소드가 반환하는 결과값을 출력\n\n가장 먼저 해야할 작업은 다른 컴포넌트와 마찬가지로 추상클래스인 \\Xpressengine\\UIObject\\AbstractUIObject를 상속받는 클래스를 구현해야 합니다. 그 다음 구현한 클래스를 XE에 등록해 주면 됩니다.\n\n# 클래스 생성하기\n이 문서에서는 UI오브젝트의 작성법을 쉽게 이해할 수 있도록 '이미지 UI오브젝트'를 예로 들어 설명하겠습니다. 이미지 UI오브젝트는 이미지 파일 주소를 입력받아 <img src=\"이미지 파일 주소\"> 형태로 출력하는 간단한 역할을 합니다.\n\n<?php\n// plugins/myplugin/src/UIObjects/ImageUIObject.php\nnamespace MyPlugin\\UIObjects;\n\nclass ImageUIObject extends AbstractUIObject\n{\n    public function render()\n    {\n      // implement code\n\n      return parent::render();\n    }\n}\n\n\n위와 같이 작성한 클래스 파일을 컴포넌트를 담을 플러그인에 생성합니다. 파일의 위치는 플러그인 디렉토리 내의 어느 곳이든 상관없습니다. 다만 플러그인 디렉토리의 src/UIObjects/ImageUIObject.php에 생성하는 것을 권장합니다.\n\n# 출력코드 작성하기\n클래스를 생성하였다면, render 메소드를 구현합니다.\n\nrender 메소드에서는 입력된 파라미터를 사용하여 출력할 html 스트링을 생성한 다음, $this->template 변수에 저장합니다.\n\n    public function render()\n    {\n      // 입력값 가져오기\n      $src = $this->arguments['src'];\n      $alt = $this->arguments['alt'];\n\n      // 이미지 태그 생성\n      $this->template = '<img src=\"'.$src.'\" alt=\"'.$alt.'\">';\n\n      // 출력\n      return parent::render();\n    }\n\n\n마지막으로는 반드시 return parent::render()를 해주어야 합니다. parent::render() 메소드는 $callback 입력이 있는지 검사하고, $callback를 자동으로 실행해주는 역할을 합니다.\n\n# UI오브젝트 등록하기\n작성한 UI오브젝트 클래스는 다른 컴포넌트와 마찬가지로 XE에 등록해야 합니다. UI오브젝트는 uiobject/<plugin_name>@<pure_id> 형식의 컴포넌트 아이디를 지정해야 합니다. 여기에서는 uiobject/myplugin@image를 아이디로 사용하겠습니다.\n\n등록 방법은 컴포넌트 등록 문서를 참고하시기 바랍니다.\n\n성공적으로 등록되었는지 아래 코드로 테스트해 볼 수 있습니다.\n\nuio('uiobject/myplugin@image', ['src'=>'path/to/image.jpg', 'alt'=>'test image']);\n\n\n# alias 등록하기\n위 예제에서 생성한 UI오브젝트의 아이디는 uiobject/myplugin@image로 꽤 복잡합니다. XE에서는 UI오브젝트에 별칭(alias)를 지정할 수 있습니다. 별칭이 지정된 UI오브젝트는 실제 아이디 대신 별칭을 사용할 수 있습니다. UI오브젝트의 별칭은 사이트 관리자가 config/xe.php의 uiobject > aliases 항목에 지정할 수 있으며, 코드상에서는 아래의 방법으로 지정할 수 있습니다.\n\nXeUIObject::setAlias($alias, $id);\n\n\n위 예제에서 제작한 UI오브젝트에 image라는 별칭을 아래와 같이 지정할 수 있습니다.\n\nXeUIObject::setAlias('image', 'uiobject/myplugin@image');\n\n\n위와 같이 지정한 이후부터는 별칭을 사용할 수 있습니다.\n\nuio('image', ['src'=>'path/to/image.jpg', 'alt'=>'test image']);\n\n\n# 폼 관련 UI오브젝트\nconfig/xe.php에 지정된 UI오브젝트의 별칭 목록입니다.\n\n'uiobject' => [\n    'aliases' => [\n        'form' => 'uiobject/xpressengine@form',\n        'formText' => 'uiobject/xpressengine@formText',\n        'formPassword' => 'uiobject/xpressengine@formPassword',\n        'formTextarea' => 'uiobject/xpressengine@formTextArea',\n        'formSelect' => 'uiobject/xpressengine@formSelect',\n        'formCheckbox' => 'uiobject/xpressengine@formCheckbox',\n        'formFile' => 'uiobject/xpressengine@formFile',\n        'formImage' => 'uiobject/xpressengine@formImage',\n        'formMenu' => 'uiobject/xpressengine@menuSelect',\n        'formLangText' => 'uiobject/xpressengine@formLangText',\n        'formLangTextarea' => 'uiobject/xpressengine@formLangTextArea',\n        'langText' => 'uiobject/xpressengine@langText',\n        'langTextArea' => 'uiobject/xpressengine@langTextArea',\n        'menuType' => 'uiobject/xpressengine@menuType',\n        'permission' => 'uiobject/xpressengine@permission',\n        'themeSelect' => 'uiobject/xpressengine@themeSelect',\n        'captcha' => 'uiobject/xpressengine@captcha',\n    ]\n],\n\n\n위 별칭 목록 중에 form*의 형식으로 등록된 UI오브젝트가 있습니다. 이 UI오브젝트들은 의미 그대로 폼을 구성할 때 사용할 수 있는 UI오브젝트들입니다. 이 UI오브젝트들은 테마나 스킨, 위젯와 같은 컴포넌트가 사이트 관리자에게 설정 폼을 출력할 때 사용됩니다. 폼 관련 UI오브젝트의 사용법은 폼 출력 문서에서 자세히 설명합니다.\n\n폼 관련 UI오브젝트로 등록되는 UI오브젝트는 몇가지 규칙이 준수해야 합니다.\n\n * 아래의 마크업 형식으로 출력해야 합니다. (이 마크업 형식은 bootstrap [http://getbootstrap.com/] 형식을 따르고 있습니다.)\n   \n   <div class=\"form-group\">\n       <label for=\"\"></label>\n       \x3c!-- 실제 폼 요소를 여기에 작성 --\x3e\n       <p class=\"help-block\"></p>\n   </div>\n   \n   \n   \n * label, description 파라미터를 받아서 처리할 수 있어야 합니다. label은 폼요소의 라벨 문자열입니다. <label for=\"\"></label>에 출력되어야 합니다. description은 <p class=\"help-block\"></p>에 출력될 폼 요소에 대한 설명입니다.\n   \n   \n * id, name 필드를 파라미터로 받아서 처리할 수 있어야 합니다. 이 두 필드는 실제 폼 요소의 애트리뷰트로 지정됩니다. id 필드는 label의 for 애트리뷰트의 값으로도 지정해주어야 합니다.\n   \n   \n * values 파라미터를 받아서 처리할 수 있어야 합니다. values는 폼 요소에 지정할 값(value)입니다. values의 형식은 각 폼요소마다 다릅니다.",contentLowercase:"# ui 오브젝트 제작 방법\n# ui오브젝트\nui오브젝트는 아래와 같이 매우 간단한 절차로 작동합니다.\n\n 1. php코드나 블레이드 파일에서 uio($id, $arguments, $callback) 함수 호출\n 2. uio 함수는 $id에 해당하는 ui오브젝트의 인스턴스를 생성(생성시 $arguments 와 $callback을 파라미터로 전달)\n 3. 생성된 인스턴스의 render 메소드를 호출\n 4. render 메소드가 반환하는 결과값을 출력\n\n가장 먼저 해야할 작업은 다른 컴포넌트와 마찬가지로 추상클래스인 \\xpressengine\\uiobject\\abstractuiobject를 상속받는 클래스를 구현해야 합니다. 그 다음 구현한 클래스를 xe에 등록해 주면 됩니다.\n\n# 클래스 생성하기\n이 문서에서는 ui오브젝트의 작성법을 쉽게 이해할 수 있도록 '이미지 ui오브젝트'를 예로 들어 설명하겠습니다. 이미지 ui오브젝트는 이미지 파일 주소를 입력받아 <img src=\"이미지 파일 주소\"> 형태로 출력하는 간단한 역할을 합니다.\n\n<?php\n// plugins/myplugin/src/uiobjects/imageuiobject.php\nnamespace myplugin\\uiobjects;\n\nclass imageuiobject extends abstractuiobject\n{\n    public function render()\n    {\n      // implement code\n\n      return parent::render();\n    }\n}\n\n\n위와 같이 작성한 클래스 파일을 컴포넌트를 담을 플러그인에 생성합니다. 파일의 위치는 플러그인 디렉토리 내의 어느 곳이든 상관없습니다. 다만 플러그인 디렉토리의 src/uiobjects/imageuiobject.php에 생성하는 것을 권장합니다.\n\n# 출력코드 작성하기\n클래스를 생성하였다면, render 메소드를 구현합니다.\n\nrender 메소드에서는 입력된 파라미터를 사용하여 출력할 html 스트링을 생성한 다음, $this->template 변수에 저장합니다.\n\n    public function render()\n    {\n      // 입력값 가져오기\n      $src = $this->arguments['src'];\n      $alt = $this->arguments['alt'];\n\n      // 이미지 태그 생성\n      $this->template = '<img src=\"'.$src.'\" alt=\"'.$alt.'\">';\n\n      // 출력\n      return parent::render();\n    }\n\n\n마지막으로는 반드시 return parent::render()를 해주어야 합니다. parent::render() 메소드는 $callback 입력이 있는지 검사하고, $callback를 자동으로 실행해주는 역할을 합니다.\n\n# ui오브젝트 등록하기\n작성한 ui오브젝트 클래스는 다른 컴포넌트와 마찬가지로 xe에 등록해야 합니다. ui오브젝트는 uiobject/<plugin_name>@<pure_id> 형식의 컴포넌트 아이디를 지정해야 합니다. 여기에서는 uiobject/myplugin@image를 아이디로 사용하겠습니다.\n\n등록 방법은 컴포넌트 등록 문서를 참고하시기 바랍니다.\n\n성공적으로 등록되었는지 아래 코드로 테스트해 볼 수 있습니다.\n\nuio('uiobject/myplugin@image', ['src'=>'path/to/image.jpg', 'alt'=>'test image']);\n\n\n# alias 등록하기\n위 예제에서 생성한 ui오브젝트의 아이디는 uiobject/myplugin@image로 꽤 복잡합니다. xe에서는 ui오브젝트에 별칭(alias)를 지정할 수 있습니다. 별칭이 지정된 ui오브젝트는 실제 아이디 대신 별칭을 사용할 수 있습니다. ui오브젝트의 별칭은 사이트 관리자가 config/xe.php의 uiobject > aliases 항목에 지정할 수 있으며, 코드상에서는 아래의 방법으로 지정할 수 있습니다.\n\nxeuiobject::setalias($alias, $id);\n\n\n위 예제에서 제작한 ui오브젝트에 image라는 별칭을 아래와 같이 지정할 수 있습니다.\n\nxeuiobject::setalias('image', 'uiobject/myplugin@image');\n\n\n위와 같이 지정한 이후부터는 별칭을 사용할 수 있습니다.\n\nuio('image', ['src'=>'path/to/image.jpg', 'alt'=>'test image']);\n\n\n# 폼 관련 ui오브젝트\nconfig/xe.php에 지정된 ui오브젝트의 별칭 목록입니다.\n\n'uiobject' => [\n    'aliases' => [\n        'form' => 'uiobject/xpressengine@form',\n        'formtext' => 'uiobject/xpressengine@formtext',\n        'formpassword' => 'uiobject/xpressengine@formpassword',\n        'formtextarea' => 'uiobject/xpressengine@formtextarea',\n        'formselect' => 'uiobject/xpressengine@formselect',\n        'formcheckbox' => 'uiobject/xpressengine@formcheckbox',\n        'formfile' => 'uiobject/xpressengine@formfile',\n        'formimage' => 'uiobject/xpressengine@formimage',\n        'formmenu' => 'uiobject/xpressengine@menuselect',\n        'formlangtext' => 'uiobject/xpressengine@formlangtext',\n        'formlangtextarea' => 'uiobject/xpressengine@formlangtextarea',\n        'langtext' => 'uiobject/xpressengine@langtext',\n        'langtextarea' => 'uiobject/xpressengine@langtextarea',\n        'menutype' => 'uiobject/xpressengine@menutype',\n        'permission' => 'uiobject/xpressengine@permission',\n        'themeselect' => 'uiobject/xpressengine@themeselect',\n        'captcha' => 'uiobject/xpressengine@captcha',\n    ]\n],\n\n\n위 별칭 목록 중에 form*의 형식으로 등록된 ui오브젝트가 있습니다. 이 ui오브젝트들은 의미 그대로 폼을 구성할 때 사용할 수 있는 ui오브젝트들입니다. 이 ui오브젝트들은 테마나 스킨, 위젯와 같은 컴포넌트가 사이트 관리자에게 설정 폼을 출력할 때 사용됩니다. 폼 관련 ui오브젝트의 사용법은 폼 출력 문서에서 자세히 설명합니다.\n\n폼 관련 ui오브젝트로 등록되는 ui오브젝트는 몇가지 규칙이 준수해야 합니다.\n\n * 아래의 마크업 형식으로 출력해야 합니다. (이 마크업 형식은 bootstrap [http://getbootstrap.com/] 형식을 따르고 있습니다.)\n   \n   <div class=\"form-group\">\n       <label for=\"\"></label>\n       \x3c!-- 실제 폼 요소를 여기에 작성 --\x3e\n       <p class=\"help-block\"></p>\n   </div>\n   \n   \n   \n * label, description 파라미터를 받아서 처리할 수 있어야 합니다. label은 폼요소의 라벨 문자열입니다. <label for=\"\"></label>에 출력되어야 합니다. description은 <p class=\"help-block\"></p>에 출력될 폼 요소에 대한 설명입니다.\n   \n   \n * id, name 필드를 파라미터로 받아서 처리할 수 있어야 합니다. 이 두 필드는 실제 폼 요소의 애트리뷰트로 지정됩니다. id 필드는 label의 for 애트리뷰트의 값으로도 지정해주어야 합니다.\n   \n   \n * values 파라미터를 받아서 처리할 수 있어야 합니다. values는 폼 요소에 지정할 값(value)입니다. values의 형식은 각 폼요소마다 다릅니다.",charsets:{cjk:!0}}],themeConfig:{nav:[],sidebar:["",{title:" 시작하기",children:["01. 시작하기/Recommended-Specifications","01. 시작하기/core-debug","01. 시작하기/core-update","01. 시작하기/installation-console","01. 시작하기/installation-web","01. 시작하기/use_composer"]},{title:" 사이트 설정",children:["02. 사이트 설정/administrator-password","02. 사이트 설정/capcha_setup","02. 사이트 설정/content-management","02. 사이트 설정/default-theme-setting","02. 사이트 설정/extension-install-update","02. 사이트 설정/extern_page","02. 사이트 설정/language-setting","02. 사이트 설정/media_library","02. 사이트 설정/member-management","02. 사이트 설정/seo","02. 사이트 설정/sitemap-management","02. 사이트 설정/xe-store-token"]},{title:" 번들 플러그인",children:["03. 번들 플러그인/external-page","03. 번들 플러그인/media-library","03. 번들 플러그인/plugin-upload"]},{title:" 개발자 문서",children:["04. 개발자 문서/component","04. 개발자 문서/controller","04. 개발자 문서/function","04. 개발자 문서/introduce","04. 개발자 문서/life-cycle","04. 개발자 문서/plugin","04. 개발자 문서/presenter","04. 개발자 문서/request","04. 개발자 문서/response","04. 개발자 문서/route","04. 개발자 문서/service","04. 개발자 문서/template-blade","04. 개발자 문서/view","04. 개발자 문서/xe-directory-info"]},{title:" 플러그인 개발",children:["05. 플러그인 개발/admin-menu-extend","05. 플러그인 개발/common-module-make","05. 플러그인 개발/common-plugin-make","05. 플러그인 개발/common-structure","05. 플러그인 개발/common-widget-make","05. 플러그인 개발/creator-info-edit","05. 플러그인 개발/dynamic-field-guide","05. 플러그인 개발/dynamic-field-skin","05. 플러그인 개발/editor-guide","05. 플러그인 개발/editor-tool-guide","05. 플러그인 개발/introduce","05. 플러그인 개발/package-information","05. 플러그인 개발/toggle-menu-guide","05. 플러그인 개발/ui-object-guide"]},{title:" 테마 개발&제작",children:["06. 테마 개발&제작/common-structure","06. 테마 개발&제작/common-theme-make","06. 테마 개발&제작/introduce","06. 테마 개발&제작/sub-theme","06. 테마 개발&제작/theme-config-edit","06. 테마 개발&제작/theme-edit"]},{title:" 스킨 개발&제작",children:["07. 스킨 개발&제작/common-skin-make","07. 스킨 개발&제작/common-structure","07. 스킨 개발&제작/introduce","07. 스킨 개발&제작/skin-config-edit"]},{title:" 서비스",children:["08. 서비스/","08. 서비스/service-captcha","08. 서비스/service-category","08. 서비스/service-config","08. 서비스/service-cookie","08. 서비스/service-counter","08. 서비스/service-database","08. 서비스/service-document","08. 서비스/service-error_catch","08. 서비스/service-event_interception","08. 서비스/service-file_storage","08. 서비스/service-frontend","08. 서비스/service-helper","08. 서비스/service-image-process","08. 서비스/service-keygen","08. 서비스/service-mail","08. 서비스/service-member_auth","08. 서비스/service-menu_module","08. 서비스/service-mobile","08. 서비스/service-permission","08. 서비스/service-session","08. 서비스/service-themes","08. 서비스/service-trash","08. 서비스/service-uiobject_form","08. 서비스/service-validation","08. 서비스/service-widget_box"]},{title:" 프론트엔드 (js)",children:["09. 프론트엔드 (JS)/","09. 프론트엔드 (JS)/js","09. 프론트엔드 (JS)/lang","09. 프론트엔드 (JS)/page","09. 프론트엔드 (JS)/page-modal","09. 프론트엔드 (JS)/request","09. 프론트엔드 (JS)/validator"]},"LICENSE"]}};t(297);Do.component("Badge",(function(){return Promise.all([t.e(0),t.e(4)]).then(t.bind(null,467))}));t(298);var us=[{},function(n){n.Vue.mixin({computed:{$dataBlock:function(){return this.$options.__data__block__}}})},{},{}],ps=[];t(169);function ds(n,e){if(!(n instanceof e))throw new TypeError("Cannot call a class as a function")}t(174);function fs(n,e){for(var t=0;t<e.length;t++){var r=e[t];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(n,r.key,r)}}function hs(n,e,t){return e&&fs(n.prototype,e),t&&fs(n,t),n}t(162);function ms(n,e){return(ms=Object.setPrototypeOf||function(n,e){return n.__proto__=e,n})(n,e)}t(163);function gs(n){return(gs=Object.setPrototypeOf?Object.getPrototypeOf:function(n){return n.__proto__||Object.getPrototypeOf(n)})(n)}t(141),t(104);function vs(n,e){return!e||"object"!==Aa(e)&&"function"!=typeof e?function(n){if(void 0===n)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return n}(n):e}function bs(n){var e=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(n){return!1}}();return function(){var t,r=gs(n);if(e){var o=gs(this).constructor;t=Reflect.construct(r,arguments,o)}else t=r.apply(this,arguments);return vs(this,t)}}var ys=function(n){!function(n,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");n.prototype=Object.create(e&&e.prototype,{constructor:{value:n,writable:!0,configurable:!0}}),e&&ms(n,e)}(t,n);var e=bs(t);function t(){return ds(this,t),e.apply(this,arguments)}return t}(function(){function n(){ds(this,n),this.store=new Do({data:{state:{}}})}return hs(n,[{key:"$get",value:function(n){return this.store.state[n]}},{key:"$set",value:function(n,e){Do.set(this.store.state,n,e)}},{key:"$emit",value:function(){var n;(n=this.store).$emit.apply(n,arguments)}},{key:"$on",value:function(){var n;(n=this.store).$on.apply(n,arguments)}}]),n}());Object.assign(ys.prototype,{getPageAsyncComponent:Ma,getLayoutAsyncComponent:Fa,getAsyncComponent:Ha,getVueComponent:Na});var Es={install:function(n){var e=new ys;n.$vuepress=e,n.prototype.$vuepress=e}};function xs(n){n.beforeEach((function(e,t,r){if(Cs(n,e.path))r();else if(/(\/|\.html)$/.test(e.path))if(/\/$/.test(e.path)){var o=e.path.replace(/\/$/,"")+".html";Cs(n,o)?r(o):r()}else r();else{var i=e.path+"/",a=e.path+".html";Cs(n,a)?r(a):Cs(n,i)?r(i):r()}}))}function Cs(n,e){return n.options.routes.filter((function(n){return n.path.toLowerCase()===e.toLowerCase()})).length>0}var $s={props:{pageKey:String,slotKey:{type:String,default:"default"}},render:function(n){var e=this.pageKey||this.$parent.$page.key;return za("pageKey",e),Do.component(e)||Do.component(e,Ma(e)),Do.component(e)?n(e):n("")}},ws={functional:!0,props:{slotKey:String,required:!0},render:function(n,e){var t=e.props,r=e.slots;return n("div",{class:["content__".concat(t.slotKey)]},r()[t.slotKey])}},As=(t(300),Object(as.a)({},(function(n,e){var t=e._c;return t("svg",{staticClass:"icon outbound",attrs:{xmlns:"http://www.w3.org/2000/svg","aria-hidden":"true",x:"0px",y:"0px",viewBox:"0 0 100 100",width:"15",height:"15"}},[t("path",{attrs:{fill:"currentColor",d:"M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"}}),e._v(" "),t("polygon",{attrs:{fill:"currentColor",points:"45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"}})])}),[],!0,null,null,null).exports);function _s(){return(_s=Object(r.a)(regeneratorRuntime.mark((function n(e){var t,r,o,i;return regeneratorRuntime.wrap((function(n){for(;;)switch(n.prev=n.next){case 0:return t="undefined"!=typeof window&&window.__VUEPRESS_ROUTER_BASE__?window.__VUEPRESS_ROUTER_BASE__:cs.routerBase||cs.base,xs(r=new $a({base:t,mode:"history",fallback:!1,routes:ls,scrollBehavior:function(n,e,t){return t||(n.hash?!Do.$vuepress.$get("disableScrollBehavior")&&{selector:n.hash}:{x:0,y:0})}})),o={},n.prev=4,n.next=7,Promise.all(us.filter((function(n){return"function"==typeof n})).map((function(n){return n({Vue:Do,options:o,router:r,siteData:cs,isServer:e})})));case 7:n.next=12;break;case 9:n.prev=9,n.t0=n.catch(4),console.error(n.t0);case 12:return i=new Do(Object.assign(o,{router:r,render:function(n){return n("div",{attrs:{id:"app"}},[n("RouterView",{ref:"layout"}),n("div",{class:"global-ui"},ps.map((function(e){return n(e)})))])}})),n.abrupt("return",{app:i,router:r});case 14:case"end":return n.stop()}}),n,null,[[4,9]])})))).apply(this,arguments)}Do.config.productionTip=!1,Do.use($a),Do.use(Es),Do.mixin(function(n,e){var t=arguments.length>2&&void 0!==arguments[2]?arguments[2]:Do;wa(e),t.$vuepress.$set("siteData",e);var r=n(t.$vuepress.$get("siteData")),o=new r,i=Object.getOwnPropertyDescriptors(Object.getPrototypeOf(o)),a={};return Object.keys(i).reduce((function(n,e){return e.startsWith("$")&&(n[e]=i[e].get),n}),a),{computed:a}}((function(n){return function(){function e(){ds(this,e)}return hs(e,[{key:"setPage",value:function(n){this.__page=n}},{key:"$site",get:function(){return n}},{key:"$themeConfig",get:function(){return this.$site.themeConfig}},{key:"$frontmatter",get:function(){return this.$page.frontmatter}},{key:"$localeConfig",get:function(){var n,e,t=this.$site.locales,r=void 0===t?{}:t;for(var o in r)"/"===o?e=r[o]:0===this.$page.path.indexOf(o)&&(n=r[o]);return n||e||{}}},{key:"$siteTitle",get:function(){return this.$localeConfig.title||this.$site.title||""}},{key:"$title",get:function(){var n=this.$page,e=this.$page.frontmatter.metaTitle;if("string"==typeof e)return e;var t=this.$siteTitle,r=n.frontmatter.home?null:n.frontmatter.title||n.title;return t?r?r+" | "+t:t:r||"VuePress"}},{key:"$description",get:function(){var n=function(n){if(n){var e=n.filter((function(n){return"description"===n.name}))[0];if(e)return e.content}}(this.$page.frontmatter.meta);return n||(this.$page.frontmatter.description||this.$localeConfig.description||this.$site.description||"")}},{key:"$lang",get:function(){return this.$page.frontmatter.lang||this.$localeConfig.lang||"en-US"}},{key:"$localePath",get:function(){return this.$localeConfig.path||"/"}},{key:"$themeLocaleConfig",get:function(){return(this.$site.themeConfig.locales||{})[this.$localePath]||{}}},{key:"$page",get:function(){return this.__page?this.__page:function(n,e){for(var t=0;t<n.length;t++){var r=n[t];if(r.path.toLowerCase()===e.toLowerCase())return r}return{path:"",frontmatter:{}}}(this.$site.pages,this.$route.path)}}]),e}()}),cs)),Do.component("Content",$s),Do.component("ContentSlotsDistributor",ws),Do.component("OutboundLink",As),Do.component("ClientOnly",{functional:!0,render:function(n,e){var t=e.parent,r=e.children;if(t._isMounted)return r;t.$once("hook:mounted",(function(){t.$forceUpdate()}))}}),Do.component("Layout",Fa("Layout")),Do.component("NotFound",Fa("NotFound")),Do.prototype.$withBase=function(n){var e=this.$site.base;return"/"===n.charAt(0)?e+n.slice(1):n},window.__VUEPRESS__={version:"1.5.0",hash:"c4988fc"},function(n){return _s.apply(this,arguments)}(!1).then((function(n){var e=n.app;n.router.onReady((function(){e.$mount("#app")}))}))}]);