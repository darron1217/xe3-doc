(window.webpackJsonp=window.webpackJsonp||[]).push([[61],{425:function(t,a,s){"use strict";s.r(a);var e=s(43),n=Object(e.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"테마-편집"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#테마-편집"}},[t._v("#")]),t._v(" 테마 편집")]),t._v(" "),s("h2",{attrs:{id:"테마-편집-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#테마-편집-2"}},[t._v("#")]),t._v(" 테마 편집")]),t._v(" "),s("p",[t._v("사이트 관리자는 테마의 템플릿을 직접 편집하여 테마를 커스터마이징 할 수 있습니다. 테마 제작자는 사이트관리자가 편집할 수 있는 파일 목록을 지정해주어야 합니다.")]),t._v(" "),s("p",[s("code",[t._v("info.php")]),t._v(" 파일의 "),s("code",[t._v("editable")]),t._v(" 필드에 편집할 수 있는 템플릿 파일 목록을 지정해주십시오.")]),t._v(" "),s("h3",{attrs:{id:"테마-설정-변수-사용하기"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#테마-설정-변수-사용하기"}},[t._v("#")]),t._v(" 테마 설정 변수 사용하기")]),t._v(" "),s("p",[t._v("사이트 관리자가 테마 설정 페이지를 통해 지정한 설정들의 값은 테마를 출력할 때 "),s("code",[t._v("$config")]),t._v(" 변수를 사용하여 참조할 수 있습니다.")]),t._v(" "),s("div",{staticClass:"language-markup extra-class"},[s("pre",{pre:!0,attrs:{class:"language-markup"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("\x3c!-- theme.blade.php --\x3e")]),t._v("\n\n@if($config->get('use_sidebar', false))\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("div")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("class")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("sidebar"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n...\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("div")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n@endif\n")])])]),s("p",[s("code",[t._v("$config")]),t._v(" 변수는 "),s("code",[t._v("ConfigEntity")]),t._v("의 인스턴스입니다. "),s("code",[t._v("get")]),t._v(" 메소드를 사용하면 손쉽게 설정값을 가져올 수 있습니다. "),s("code",[t._v("get")]),t._v(" 메소드의 두번째 파라메터는 기본값(default value)입니다.")]),t._v(" "),s("div",{staticClass:"language-php extra-class"},[s("pre",{pre:!0,attrs:{class:"language-php"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// use_sidebar 설정 조회, use_sidebar 설정이 존재하지 않을 경우 기본값으로 false를 반환")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$config")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("get")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token single-quoted-string string"}},[t._v("'use_sidebar'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean constant"}},[t._v("false")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("h3",{attrs:{id:"메뉴-출력하기"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#메뉴-출력하기"}},[t._v("#")]),t._v(" 메뉴 출력하기")]),t._v(" "),s("p",[t._v("XE에 등록된 메뉴도 테마 설정 변수로 저장할 수 있습니다.")]),t._v(" "),s("p",[t._v("만약 설정변수에 'mainMenu'라는 이름으로 메뉴가 저장되어 있다면, "),s("code",[t._v("menu_list")]),t._v(" 함수를 사용하여 메뉴 정보를 가져올 수 있습니다.")]),t._v(" "),s("div",{staticClass:"language-php extra-class"},[s("pre",{pre:!0,attrs:{class:"language-php"}},[s("code",[t._v("@"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("foreach")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("menu_list")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$config")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("get")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token single-quoted-string string"}},[t._v("'mainMenu'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("as")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$menu")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n@"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("endforeach")]),t._v("\n")])])]),s("p",[s("code",[t._v("menu_list")]),t._v("는 지정된 메뉴에 속해 있는 메뉴 아이템의 목록을 배열로 반환합니다. 위의 예제에서는 "),s("code",[t._v("$menu")]),t._v(" 변수가 하나의 메뉴 아이템입니다.")]),t._v(" "),s("p",[t._v("메뉴 아이템은 아래와 같은 프로퍼티를 가지고 있습니다. 이 프로퍼티를 사용하여 메뉴를 원하는대로 출력하십시오.")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("$menu['url']")]),t._v(" - 메뉴의 링크주소")]),t._v(" "),s("li",[s("code",[t._v("$menu['link']")]),t._v(" - 메뉴의 링크텍스트, 만약 메뉴 이미지가 사용됐을 경우 이미지를 출력하는 태그를 출력합니다.")]),t._v(" "),s("li",[s("code",[t._v("$menu['selected']")]),t._v(" - 현재 페이지에 해당하는 메뉴일 경우 "),s("code",[t._v("true")]),t._v("를 가집니다.")]),t._v(" "),s("li",[s("code",[t._v("$menu['children']")]),t._v(" - 자식 메뉴아이템 리스트")])]),t._v(" "),s("h3",{attrs:{id:"업로드한-이미지-출력하기"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#업로드한-이미지-출력하기"}},[t._v("#")]),t._v(" 업로드한 이미지 출력하기")]),t._v(" "),s("p",[t._v("테마 설정페이지에서 사이트 관리자는 이미지를 업로드할 수 있습니다.")]),t._v(" "),s("p",[t._v("사이트 관리자가 업로드한 이미지를 출력할 때에는 아래와 같이 코드를 작성하십시오.")]),t._v(" "),s("div",{staticClass:"language-markup extra-class"},[s("pre",{pre:!0,attrs:{class:"language-markup"}},[s("code",[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("img")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("src")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("{{$config->get('logoImage.path')}}"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])]),s("p",[t._v("이미지를 저장한 변수명("),s("code",[t._v("logoImage")]),t._v(")에 "),s("code",[t._v(".path")]),t._v("를 붙여서 출력하면 됩니다.")])])}),[],!1,null,null,null);a.default=n.exports}}]);