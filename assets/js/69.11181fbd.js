(window.webpackJsonp=window.webpackJsonp||[]).push([[69],{435:function(t,a,s){"use strict";s.r(a);var n=s(43),e=Object(n.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"데이터베이스"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#데이터베이스"}},[t._v("#")]),t._v(" 데이터베이스")]),t._v(" "),s("h2",{attrs:{id:"데이터베이스-database"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#데이터베이스-database"}},[t._v("#")]),t._v(" 데이터베이스(database)")]),t._v(" "),s("p",[t._v("XE가 자체적으로 부하분산을 처리할 수 있을까? 어떻게 하면 회원과 문서의 데이터베이스 사용을 분리시킬 수 있을까?")]),t._v(" "),s("p",[t._v("이 고민에서 시작이었습니다. 이미 Laravel은 훌륭한 데이터베이스 처리 방식을 제안하고 있습니다. 다만 우리는 앞서 얘기한 고민을 해결하기 위해 새로운 데이터베이스를 만들기 보다 우리가 하고자 하는 일을 해결할 수 있는 기능을 추가한 전혀 새롭지 않은(Laravel 의 데이터베이스와 같은) 데이터베이스를 만들고 싶었습니다.")]),t._v(" "),s("p",[s("strong",[t._v("기본적인 사용 방법은 Laravel 과 같으며 단지")]),t._v(" "),s("code",[t._v("XeDB")]),t._v(" "),s("strong",[t._v("파사드를 사용하면 됩니다.")])]),t._v(" "),s("blockquote",[s("p",[s("a",{attrs:{href:"https://laravel.kr/docs/5.2/database",target:"_blank",rel:"noopener noreferrer"}},[t._v("기본적인 데이터베이스 사용"),s("OutboundLink")],1),t._v(", "),s("a",{attrs:{href:"https://laravel.kr/docs/5.2/queries",target:"_blank",rel:"noopener noreferrer"}},[t._v("쿼리빌더"),s("OutboundLink")],1),t._v(", "),s("a",{attrs:{href:"https://laravel.kr/docs/5.2/migrations",target:"_blank",rel:"noopener noreferrer"}},[t._v("마이그레이션"),s("OutboundLink")],1),t._v(" 의 내용을 숙지하시기 바랍니다.")])]),t._v(" "),s("h3",{attrs:{id:"설정"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#설정"}},[t._v("#")]),t._v(" 설정")]),t._v(" "),s("p",[t._v("config/xe.php 의 "),s("code",[t._v("database")]),t._v("에 가상 연결 설정을 등록합니다.")]),t._v(" "),s("div",{staticClass:"language-php extra-class"},[s("pre",{pre:!0,attrs:{class:"language-php"}},[s("code",[s("span",{pre:!0,attrs:{class:"token single-quoted-string string"}},[t._v("'database'")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token single-quoted-string string"}},[t._v("'default'")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token single-quoted-string string"}},[t._v("'slave'")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token single-quoted-string string"}},[t._v("'default'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token single-quoted-string string"}},[t._v("'document'")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token single-quoted-string string"}},[t._v("'slave'")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token single-quoted-string string"}},[t._v("'default'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token single-quoted-string string"}},[t._v("'user'")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token single-quoted-string string"}},[t._v("'slave'")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token single-quoted-string string"}},[t._v("'default'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n")])])]),s("p",[t._v("XE에서는 회원과 문서의 데이터베이스를 분리해서 사용할 수 있도록 가상 연결을 분리해서 사용하고 있습니다. "),s("code",[t._v("app/Providers/")]),t._v(" 의 UserServiceProvider.php, DocumentServiceProvider.php 에서 각각 "),s("code",[t._v("user")]),t._v(", "),s("code",[t._v("document")]),t._v(" 커넥션을 사용하는 코드를 확인할 수 있습니다.")]),t._v(" "),s("h3",{attrs:{id:"가상-연결"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#가상-연결"}},[t._v("#")]),t._v(" 가상 연결")]),t._v(" "),s("p",[t._v("여러개의 논리적인 데이터베이스 연결을 사용하여 다중 커넥션 사용을 가능하도록 하고 서버에 트래픽이 증가할 경우 패키지별 데이터베이스 연결 설정을 변경하여 부하분산을 빠르게 처리할 수 있도록 합니다. 또한 하나의 논리적인 데이터베이스 연결에 여러개의 데이터베이스 연결 설정을 할 수 있도록 하고 Query 처리할 때 랜덤하게 커넥션을 사용하도록 구현하여 부하분산을 처리합니다.")]),t._v(" "),s("p",[t._v("또한 물리적으로 다른 여러개의 커넥션에 대해서 트랜젝션을 사용할 수 있습니다. 여러개의 커넥션에서 각각 발생하는 트랜젝션을 관리하여 하나의 커넥션에서 처리되는 것과 같이 동작합니다.")]),t._v(" "),s("p",[t._v("다이나믹 쿼리를 이용해서 ProxyManager 에 등록된 Proxy 들을 사용할 수 있습니다. 다이나믹 쿼리는 데이터베이스 CRUD 처리 시 발생하여 쿼리를 조작할 수 있도록 인터페이스를 제공합니다. ProxyInterface 의 인터페이스를 QueryBuilder 에서 각 메소드에서 필요한 인터페이스를 사용합니다.")]),t._v(" "),s("h3",{attrs:{id:"proxy"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#proxy"}},[t._v("#")]),t._v(" Proxy")]),t._v(" "),s("p",[t._v("데이터베이스 Proxy는 쿼리 실행 실행에 앞서 쿼리를 수정할 수 있도록 인터페이스를 지원합니다. "),s("code",[t._v("DynamicQuery")]),t._v("에서 "),s("code",[t._v("ProxyManager")]),t._v("를 사용하도록 해서 inster(), update(), delete(), get(), first(), find(), paginate(), simplePaginate() 이 사용될 때 쿼리를 수정합니다. DynamicField 는 Proxy 기능을 이용해서 데이터베이스에 쿼리할 때 설정에 따라 추가된 확장 필드의 처리를 위한 쿼리를 실행하도록 구현했습니다.")]),t._v(" "),s("h4",{attrs:{id:"proxy-사용"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#proxy-사용"}},[t._v("#")]),t._v(" Proxy 사용")]),t._v(" "),s("div",{staticClass:"language-php extra-class"},[s("pre",{pre:!0,attrs:{class:"language-php"}},[s("code",[s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$users")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" XeDB"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("dynamic")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token single-quoted-string string"}},[t._v("'user'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("get")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[t._v("Proxy를 사용하기 위해서 "),s("code",[t._v("table()")]),t._v(" 이 아닌 "),s("code",[t._v("dynamic()")]),t._v(" 메소드를 사용합니다. "),s("code",[t._v("dynamic()")]),t._v("을 사용해 반환된 "),s("code",[t._v("DynamicQuery")]),t._v(" 인스턴스는 Proxy를 사용하기 위한 상태가 됩니다.")]),t._v(" "),s("p",[t._v("실제 데이터베이스 연결 설정은 기존의 Laravel 설정 방법과 동일합니다. config/database.php 에 데이터베이스 연결을 수정하거나 추가하면 됩니다.")]),t._v(" "),s("h3",{attrs:{id:"트랜잭션"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#트랜잭션"}},[t._v("#")]),t._v(" 트랜잭션")]),t._v(" "),s("div",{staticClass:"language-php extra-class"},[s("pre",{pre:!0,attrs:{class:"language-php"}},[s("code",[t._v("XeDB"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("beginTransaction")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v(" query "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\nXeDB"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("commit")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// or XeDB::rollback();")]),t._v("\n")])])]),s("p",[t._v("XE3 데이터베이스는 여러개의 연결에 대해서 트랜잭션을 처리합니다. 전체 커넥션 정보를 참고하고 있는 TransactionHandler 는 트랜잭션이 시작될 때 연결되어 있는 모든 가상연결에 트랙잭션을 시작하고 또한 새로 맺는 연결도 트랜잭션이 시작되도록 처리합니다.")]),t._v(" "),s("p",[t._v("가상연결로 처리되는 하나 이상의 데이터베이스 연결에 대해서 트랜젝션 을 처리합니다. DB1, DB2 에 insert 처리 할 때 물리적으로 다른 두개의 데이터베이스에 트랜젝션이 처리될 수 있도록 지원합니다.")])])}),[],!1,null,null,null);a.default=e.exports}}]);